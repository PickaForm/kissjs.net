"use strict";const kiss={$KissJS:"KissJS - Keep It Simple Stupid Javascript (licence MIT)",isClient:true,db:{},ux:{},doc:{},app:{},acl:{},ajax:{},views:{},theme:{},screen:{},router:{},loader:{},pubsub:{},plugins:{},context:{},session:{},undoRedo:{},webfonts:{},language:{},directory:{},selection:{},templates:{},websocket:{},loadingSpinner:{},ui:{},data:{Model:{},Collection:{},Record:{},Transaction:{},trash:{},addMethodToAllModels(methodName,method){Object.values(kiss.data.Record).forEach(recordClass=>{recordClass.prototype[methodName]=method})},addPropertyToAllModels(propertyName,getter){Object.values(kiss.data.Record).forEach(recordClass=>{Object.defineProperty(recordClass.prototype,propertyName,{get:function(){try{return getter(this)}catch(err){log("kiss.data.Model - addPropertyToAllModels",4,err)
return"Formula error"}},set:function(value){try{this.value=value}catch(err){log("kiss.data.Model - addPropertyToAllModels",4,err)}},configurable:true})})}},loader:{core:{scripts:["data/Model","data/Record","data/Collection","data/Transaction","data/trash","db/offline","db/memory","db/online","db/faker","modules/global","modules/prototypes","modules/ajax","modules/context","modules/session","modules/acl","modules/undoRedo","modules/directory","modules/pubsub","modules/websocket","modules/router","modules/views","modules/theme","modules/language","modules/language.texts","modules/plugins","modules/selection","modules/screen","modules/webfonts"]},ui:{scripts:["containers/block","containers/panel","elements/spacer","elements/html","elements/image","elements/button","elements/menu","elements/treelist","elements/datatable","elements/tip","elements/notification","elements/dialog","fields/field","fields/checkbox","fields/select","fields/icon","fields/iconPicker","fields/color","fields/colorPicker","fields/attachment","form/form","form/formTabBar","form/formContent","form/formFeatureDescription","helpers/dataFilter","helpers/dataFilterGroup","helpers/dataFilterWindow","helpers/dataSort","helpers/dataSortWindow","helpers/dataFieldsWindow","helpers/languageWindow","helpers/themeWindow","helpers/fileUploadLocal","helpers/fileUploadLink","helpers/fileUploadDropbox","helpers/fileUploadBox","helpers/fileUploadGoogleDrive","helpers/fileUploadOneDrive","helpers/fileUploadInstagram","helpers/fileUploadTakePhoto","helpers/fileUploadinstagramSession","helpers/fileUploadBoxSession","helpers/fileUploadWebSearch","helpers/fileUploadWindow","helpers/previewWindow","helpers/modelExplorer","helpers/recordSelectorWindow"],styles:["abstract/component","containers/block","containers/panel","elements/button","elements/html","elements/image","elements/menu","elements/treelist","elements/datatable","elements/tip","elements/notification","elements/dialog","fields/field","fields/checkbox","fields/select","fields/icon","fields/iconPicker","fields/color","fields/colorPicker","fields/attachment","form/form","helpers/dataSort","helpers/dataFilter","helpers/dataFilterGroup","helpers/dataFieldsWindow","helpers/fileUpload","helpers/previewWindow","helpers/themeWindow",]},loadScript(path){return new Promise(function(resolve,reject){const script=document.createElement("script")
script.type="text/javascript"
script.async=true
script.src=path+".js"
const head=document.getElementsByTagName("head")[0]
head.appendChild(script)
script.onload=resolve
script.onerror=reject})},loadStyle(path){return new Promise(function(resolve,reject){const style=document.createElement("link")
style.rel="stylesheet"
style.type="text/css"
style.async=true
style.href=path+".css"
const head=document.getElementsByTagName("link")[0]
head.appendChild(style)
style.onload=resolve
style.onerror=reject})},async loadScripts(paths){await Promise.allSettled(paths.map(kiss.loader.loadScript))},async loadStyles(paths){await Promise.allSettled(paths.map(kiss.loader.loadStyle))},async loadLibrary(){console.log("%c%s","color: blue","kiss.loader - Loading KissJS library components dynamically")
await kiss.loader.loadScript("../kissjs/core/modules/app")
await kiss.loader.loadScript("../kissjs/ui/abstract/component")
await kiss.loader.loadScript("../kissjs/ui/abstract/container")
await kiss.loader.loadScript("../kissjs/ui/abstract/dataComponent")
await kiss.loader.loadScript("../kissjs/core/db/nedb")
await kiss.loader.loadScript("../kissjs/core/db/api")
await kiss.loader.loadScript("../kissjs/core/modules/logger")
await kiss.loader.loadScript("../kissjs/core/modules/tools")
await kiss.loader.loadScript("../kissjs/core/modules/loadingSpinner")
const coreScripts=kiss.loader.core.scripts.map(path=>"../kissjs/core/"+path)
const uiScripts=kiss.loader.ui.scripts.map(path=>"../kissjs/ui/"+path)
const styles=kiss.loader.ui.styles.map(path=>"../kissjs/ui/"+path)
await Promise.allSettled([kiss.loader.loadScripts(coreScripts),kiss.loader.loadScripts(uiScripts),kiss.loader.loadStyles(styles)])}}};kiss.db={memory:{},offline:{},online:{},faker:{},mode:"offline",init(setup={}){if(setup.mode)kiss.db.mode=setup.mode},async insertOne(modelId,record){return await kiss.db[this.mode].insertOne(modelId,record)},async insertMany(modelId,records){return await kiss.db[this.mode].insertMany(modelId,records)},async insertFakeRecords(modelId,fields,numberOfRecords){let records=kiss.db.faker.generate(fields,numberOfRecords)
return await kiss.db[this.mode].insertMany(modelId,records)},async deleteFakeRecords(modelId){return await kiss.db[this.mode].deleteMany(modelId,{isFake:true})},async updateOne(modelId,recordId,update){return await kiss.db[this.mode].updateOne(modelId,recordId,update)},async updateMany(modelId,query,update){return await kiss.db[this.mode].updateMany(modelId,query,update)},async updateBulk(operations){return await kiss.db[this.mode].updateBulk(operations)},async findOne(modelId,recordId){return await kiss.db[this.mode].findOne(modelId,recordId)},async find(modelId,query){if(!query)return await kiss.db[this.mode].find(modelId)
let search={operation:"search",filter:query.filter||{},filterSyntax:query.filterSyntax||"normalized",sort:query.sort||{},sortSyntax:query.sortSyntax||"normalized",group:query.group||[],projection:query.projection||{},skip:query.skip,limit:query.limit,groupUnwind:query.groupUnwind}
return await kiss.db[this.mode].find(modelId,search)},async deleteOne(modelId,recordId,sendToTrash){return await kiss.db[this.mode].deleteOne(modelId,recordId,sendToTrash)},async deleteMany(modelId,query,sendToTrash){return await kiss.db[this.mode].deleteMany(modelId,query,sendToTrash)},async count(modelId,query){return await kiss.db[this.mode].count(modelId,query)},mongo:{convertSort(sortArray){let mongoSort={}
for(let i=0,length=sortArray.length;i<length;i++){let sortOption=sortArray[i]
let sortField=Object.keys(sortOption)[0]
let sortDirection=sortOption[sortField]
mongoSort[sortField]=((sortDirection=="asc")?1:-1)}
return mongoSort},convertFilter(filter){let query={}
switch(filter.operator){case"=":query[filter.fieldId]=filter.value
break
case"<>":query[filter.fieldId]={$ne:filter.value}
break
case"<":query[filter.fieldId]={$lt:filter.value}
break
case">":query[filter.fieldId]={$gt:filter.value}
break
case"<=":query[filter.fieldId]={$lte:filter.value}
break
case">=":query[filter.fieldId]={$gte:filter.value}
break
case"contains":query[filter.fieldId]=new RegExp(filter.value,"i")
break
case"does not contain":query={[filter.fieldId]:{$not:new RegExp(filter.value,"i")}}
break
case"is empty":query={$or:[{[filter.fieldId]:""},{[filter.fieldId]:[]},{[filter.fieldId]:{$exists:false}}]}
break
case"is not empty":query={$and:[{[filter.fieldId]:{$ne:""}},{[filter.fieldId]:{$ne:[]}},{[filter.fieldId]:{$exists:true}}]}
break}
return query},convertFilterGroup(filterGroup){if(filterGroup.type!="group")return kiss.db.mongo.convertFilter(filterGroup)
let filters=[]
filterGroup.filters.forEach(filter=>{if(filter){if(filter.type=="group"){filters.push(kiss.db.mongo.convertFilterGroup(filter))}else{filters.push(kiss.db.mongo.convertFilter(filter))}}})
let mongoFilter={}
mongoFilter["$"+filterGroup.operator]=filters
return mongoFilter},getFilterFields(filter){let fields=[]
if(filter.type=="filter"){fields.push(filter.fieldId)}else if(filter.type=="group"){filter.filters.forEach(filter=>{fields=fields.concat(kiss.db.mongo.getFilterFields(filter))})}
return fields.unique()}}};kiss.db.faker=function(field){if(["panel","directory","link","lookup","summary","attachment"].indexOf(field.type)!=-1)return null
let sourceArray=[]
let mockupName=(typeof field==="object")?field.label.toLowerCase():field.toLowerCase()
switch(mockupName){case"text":sourceArray=kiss.db.faker.text
if(field.validationType=="url")return"https://en.pickaform.fr"
if(field.validationType=="email")return kiss.db.faker("email")
return sourceArray[Math.floor(Math.random()*sourceArray.length)]
case"textarea":return kiss.db.faker("description")
case"select":if(field.template=="time")return("0"+Math.round(Math.random()*24)).slice(-2)+":00"
sourceArray=field.options.map(option=>option.value)
return sourceArray[Math.floor(Math.random()*sourceArray.length)]
case"checkbox":let value=Math.random()*100
return(value>50)
case"date":let year=field.year||(1980+Math.floor(Math.random()*40))
let month=field.month||(1+Math.floor(Math.random()*12))
let day=field.day||(1+Math.floor(Math.random()*28))
let date=year.toString()+"-"+("0"+month.toString()).slice(-2)+"-"+("0"+day.toString()).slice(-2)
return date
case"integer":return Math.floor(kiss.db.faker(Object.assign({},field,{label:"float",precision:0})))
case"number":case"float":let min=field.min||0
let max=field.max||100
let precision=(field.precision===0)?0:2
let val=(min+Math.random()*(max-min)).toFixed(precision)
if(mockupName=="number")return Math.floor(val)
return val
case"color":case"colorpicker":return"#"+kiss.global.palette[Math.round(Math.random()*59)]
case"icon":case"iconpicker":return kiss.webfonts.all[Math.round(Math.random()*1040)]
case"username":case"fullname":case"full name":return kiss.db.faker({label:"first name"})+" "+kiss.db.faker({label:"last name"})
case"email":return(kiss.db.faker({label:"first name"})+"."+kiss.db.faker({label:"last name"})+"@"+kiss.db.faker({label:"company name"}).toLowerCase()+"."+kiss.db.faker({label:"domain"})).toLowerCase()
case"phone":case"mobile":case"mobile phone":case"telephone":return kiss.db.faker({label:"integer",min:1000000000,max:9900000000})
case"company":return kiss.db.faker({label:"company name"})
case"address":return kiss.db.faker({label:"address 1"})+", "+kiss.db.faker({label:"address 2"})+", "+kiss.db.faker({label:"zip code"})+", "+kiss.db.faker({label:"city"})+", "+kiss.db.faker({label:"country"})
case"address 1":return kiss.db.faker({label:"company name"})+" building"
case"address 2":return kiss.db.faker({label:"integer",min:1})+" "+kiss.db.faker({label:"last name"})+" "+kiss.db.faker({label:"street"})
case"zip code":return kiss.db.faker({label:"integer",min:1000,max:90000})
case"description":return"Lorem ipsum dolor sit amet. Vel animi quia aut deserunt quos qui quia quaerat ut internos ipsa."
case"title":return kiss.db.faker({label:"description.adjectives"}).toTitleCase()+" "+kiss.db.faker({label:"description.adjectives"})+" "+kiss.db.faker({label:"description.subjects"})
default:if(typeof field==="object"){sourceArray=(field.label.indexOf("description")!=-1)?kiss.db.faker.description[field.label.split(".")[1]]:kiss.db.faker[mockupName]
if(!sourceArray)return kiss.db.faker(Object.assign({},field,{label:field.type}))}else{sourceArray=kiss.db.faker[mockupName]
if(!sourceArray)return kiss.db.faker("text")}
return sourceArray[Math.floor(Math.random()*sourceArray.length)]}}
kiss.db.faker["priority"]=["1 - Critical","2 - High","3 - Normal","4 - Low"]
kiss.db.faker["first name"]=["Mihaela","Johanna","Julia","Christian","Brigitte","Erwin","Maurice","Lydia","Adrian","Lucienne","John","Robert","Bob","Will","Stephen","Pavel","Robin","Gad","Arnold","Sylvester","Dolph","Robbie","Flavien"]
kiss.db.faker["last name"]=["Clinciu","Giordini","Cvejzek","Ponzini","Collat","Romell","Lanoix","Mikevskaia","Smith","Dupont","Romero","De Rosa","Wilson","Smith","King","Yurgen","Lundgren","Al'Shadar","Gad'Nayé","Bouliama","Legendre"]
kiss.db.faker["department"]=["Head office","Sales","IT","Support","Marketing","Communication","Accounting","Back office","Human resources","Quality"]
kiss.db.faker["company name"]=["Google","Amazon","Facebook","Apple","IBM","Microsoft","Sony","Nintendo","SpaceX","Toyota","Ford","Ferrari","Renault","Epic","Ubisoft","Quantic Dream","Valve","Stripe","PickaForm","Exauce","The-Data-Box","Infinity"]
kiss.db.faker["domain"]=["net","com","org","eu","fr","re"]
kiss.db.faker["city"]=["Paris","New York","Tokyo","London","Ajaccio","Saint-Denis","Sydney","Marseilles","Lyon"]
kiss.db.faker["street"]=["street","avenue","boulevard","road"]
kiss.db.faker["country"]=["Gaulle","Germanistan","Corsica","Bhukistan","Wessex","Africanistan","Americanistan","Paradisistan"]
kiss.db.faker["text"]=["Sample text","This is an example","Lorem ipsum"]
kiss.db.faker["description"]={starts:["example","story","book","example","use case","case","article"],adjectives:["green","blue","red","purple","big","small","giant","slick","clever","stupid","wonderful","serious","shy","dangerous","hilarious","not so serious","really cool","strange","perfect","moody"],subjects:["man","woman","gorilla","flying saucer","donkey","cat","kiwi","dog","mouse","wolf","mammoth","banana","peanut","zombie","monster","frog","bird","chair","laptop","planet"],auxiliaries:["can","can't","could","couldn't","will","won't","did","didn't","may","may not","might","might not","shall"],verbs:["talk to","jump over","sing with","eat","reprogram","brain-wash","help","paint","study","invite"],adverbs:["gracefully","peacefully","gently","heavily","slightly","deeply","silently","carefully","nicely","easily","electronically"],ends:["is funny","is a bit weird","doesn't make any sense","hurts a little bit","should never happen","remains to proof","is nonsense","might or might not be the truth","makes me wonder","invites to meditation"]}
kiss.db.faker.generate=function(fields,numberOfRecords){let records=[]
let max=numberOfRecords||50
let activeFields=fields.filter(field=>field.deleted!=true)
for(let index=0;index<max;index++){let newRecord={}
activeFields.forEach(field=>{if(field.primary==true){newRecord[field.id]=field.label.toTitleCase()+" "+("0000"+(index+1)).slice(-5)}else if(field.label.toLowerCase()=="name"){newRecord[field.id]="Name "+("0000"+(index+1)).slice(-5)}else{let generatedValue=kiss.db.faker(field)
if(generatedValue)newRecord[field.id]=generatedValue}})
newRecord.id=uid()
newRecord.isFake=true
records.push(newRecord)}
return records};kiss.db.memory={mode:"memory",deleteCollection:async(modelId)=>await kiss.db.offline.deleteCollection(modelId),insertOne:async(modelId,record)=>await kiss.db.offline.insertOne(modelId,record,"memory"),insertMany:async(modelId,records)=>await kiss.db.offline.insertMany(modelId,records,"memory"),updateOne:async(modelId,recordId,update)=>await kiss.db.offline.updateOne(modelId,recordId,update,"memory"),updateMany:async(modelId,query,update)=>await kiss.db.offline.updateMany(modelId,query,update,"memory"),updateBulk:async(operations)=>await kiss.db.offline.updateBulk(operations,"memory"),findOne:async(modelId,recordId)=>await kiss.db.offline.findOne(modelId,recordId,"memory"),find:async(modelId,query={})=>await kiss.db.offline.find(modelId,query,"memory"),deleteOne:async(modelId,recordId,sendToTrash)=>await kiss.db.offline.deleteOne(modelId,recordId,sendToTrash,"memory"),deleteMany:async(modelId,query,sendToTrash)=>await kiss.db.offline.deleteMany(modelId,query,sendToTrash,"memory"),count:async(modelId,query)=>await kiss.db.offline.count(modelId,query,"memory")};!function(t){if("function"==typeof bootstrap)bootstrap("nedb",t);else if("object"==typeof exports)module.exports=t();else if("function"==typeof define&&define.amd)define(t);else if("undefined"!=typeof ses){if(!ses.ok())return;ses.makeNedb=t}else"undefined"!=typeof window?window.Nedb=t():global.Nedb=t()}(function(){var t;return function(t,e,n){function r(n,o){if(!e[n]){if(!t[n]){var a="function"==typeof require&&require;if(!o&&a)return a(n,!0);if(i)return i(n,!0);throw new Error("Cannot find module '"+n+"'")}var u=e[n]={exports:{}};t[n][0].call(u.exports,function(e){var i=t[n][1][e];return r(i?i:e)},u,u.exports)}return e[n].exports}for(var i="function"==typeof require&&require,o=0;o<n.length;o++)r(n[o]);return r}({1:[function(t,e,n){function r(t,e){if(t.indexOf)return t.indexOf(e);for(var n=0;n<t.length;n++)if(e===t[n])return n;return-1}var i=t("__browserify_process");i.EventEmitter||(i.EventEmitter=function(){});var o=n.EventEmitter=i.EventEmitter,a="function"==typeof Array.isArray?Array.isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)},u=10;o.prototype.setMaxListeners=function(t){this._events||(this._events={}),this._events.maxListeners=t},o.prototype.emit=function(t){if("error"===t&&(!this._events||!this._events.error||a(this._events.error)&&!this._events.error.length))throw arguments[1]instanceof Error?arguments[1]:new Error("Uncaught, unspecified 'error' event.");if(!this._events)return!1;var e=this._events[t];if(!e)return!1;if("function"==typeof e){switch(arguments.length){case 1:e.call(this);break;case 2:e.call(this,arguments[1]);break;case 3:e.call(this,arguments[1],arguments[2]);break;default:var n=Array.prototype.slice.call(arguments,1);e.apply(this,n)}return!0}if(a(e)){for(var n=Array.prototype.slice.call(arguments,1),r=e.slice(),i=0,o=r.length;o>i;i++)r[i].apply(this,n);return!0}return!1},o.prototype.addListener=function(t,e){if("function"!=typeof e)throw new Error("addListener only takes instances of Function");if(this._events||(this._events={}),this.emit("newListener",t,e),this._events[t])if(a(this._events[t])){if(!this._events[t].warned){var n;n=void 0!==this._events.maxListeners?this._events.maxListeners:u,n&&n>0&&this._events[t].length>n&&(this._events[t].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[t].length),console.trace())}this._events[t].push(e)}else this._events[t]=[this._events[t],e];else this._events[t]=e;return this},o.prototype.on=o.prototype.addListener,o.prototype.once=function(t,e){var n=this;return n.on(t,function r(){n.removeListener(t,r),e.apply(this,arguments)}),this},o.prototype.removeListener=function(t,e){if("function"!=typeof e)throw new Error("removeListener only takes instances of Function");if(!this._events||!this._events[t])return this;var n=this._events[t];if(a(n)){var i=r(n,e);if(0>i)return this;n.splice(i,1),0==n.length&&delete this._events[t]}else this._events[t]===e&&delete this._events[t];return this},o.prototype.removeAllListeners=function(t){return 0===arguments.length?(this._events={},this):(t&&this._events&&this._events[t]&&(this._events[t]=null),this)},o.prototype.listeners=function(t){return this._events||(this._events={}),this._events[t]||(this._events[t]=[]),a(this._events[t])||(this._events[t]=[this._events[t]]),this._events[t]},o.listenerCount=function(t,e){var n;return n=t._events&&t._events[e]?"function"==typeof t._events[e]?1:t._events[e].length:0}},{__browserify_process:4}],2:[function(t,e,n){function r(t,e){for(var n=[],r=0;r<t.length;r++)e(t[r],r,t)&&n.push(t[r]);return n}function i(t,e){for(var n=0,r=t.length;r>=0;r--){var i=t[r];"."==i?t.splice(r,1):".."===i?(t.splice(r,1),n++):n&&(t.splice(r,1),n--)}if(e)for(;n--;n)t.unshift("..");return t}var o=t("__browserify_process"),a=/^(.+\/(?!$)|\/)?((?:.+?)?(\.[^.]*)?)$/;n.resolve=function(){for(var t="",e=!1,n=arguments.length;n>=-1&&!e;n--){var a=n>=0?arguments[n]:o.cwd();"string"==typeof a&&a&&(t=a+"/"+t,e="/"===a.charAt(0))}return t=i(r(t.split("/"),function(t){return!!t}),!e).join("/"),(e?"/":"")+t||"."},n.normalize=function(t){var e="/"===t.charAt(0),n="/"===t.slice(-1);return t=i(r(t.split("/"),function(t){return!!t}),!e).join("/"),t||e||(t="."),t&&n&&(t+="/"),(e?"/":"")+t},n.join=function(){var t=Array.prototype.slice.call(arguments,0);return n.normalize(r(t,function(t){return t&&"string"==typeof t}).join("/"))},n.dirname=function(t){var e=a.exec(t)[1]||"",n=!1;return e?1===e.length||n&&e.length<=3&&":"===e.charAt(1)?e:e.substring(0,e.length-1):"."},n.basename=function(t,e){var n=a.exec(t)[2]||"";return e&&n.substr(-1*e.length)===e&&(n=n.substr(0,n.length-e.length)),n},n.extname=function(t){return a.exec(t)[3]||""},n.relative=function(t,e){function r(t){for(var e=0;e<t.length&&""===t[e];e++);for(var n=t.length-1;n>=0&&""===t[n];n--);return e>n?[]:t.slice(e,n-e+1)}t=n.resolve(t).substr(1),e=n.resolve(e).substr(1);for(var i=r(t.split("/")),o=r(e.split("/")),a=Math.min(i.length,o.length),u=a,s=0;a>s;s++)if(i[s]!==o[s]){u=s;break}for(var c=[],s=u;s<i.length;s++)c.push("..");return c=c.concat(o.slice(u)),c.join("/")},n.sep="/"},{__browserify_process:4}],3:[function(t,e,n){function r(t){return Array.isArray(t)||"object"==typeof t&&"[object Array]"===Object.prototype.toString.call(t)}function i(t){"object"==typeof t&&"[object RegExp]"===Object.prototype.toString.call(t)}function o(t){return"object"==typeof t&&"[object Date]"===Object.prototype.toString.call(t)}t("events"),n.isArray=r,n.isDate=function(t){return"[object Date]"===Object.prototype.toString.call(t)},n.isRegExp=function(t){return"[object RegExp]"===Object.prototype.toString.call(t)},n.print=function(){},n.puts=function(){},n.debug=function(){},n.inspect=function(t,e,s,c){function f(t,s){if(t&&"function"==typeof t.inspect&&t!==n&&(!t.constructor||t.constructor.prototype!==t))return t.inspect(s);switch(typeof t){case"undefined":return h("undefined","undefined");case"string":var c="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return h(c,"string");case"number":return h(""+t,"number");case"boolean":return h(""+t,"boolean")}if(null===t)return h("null","null");var p=a(t),d=e?u(t):p;if("function"==typeof t&&0===d.length){if(i(t))return h(""+t,"regexp");var y=t.name?": "+t.name:"";return h("[Function"+y+"]","special")}if(o(t)&&0===d.length)return h(t.toUTCString(),"date");var v,g,m;if(r(t)?(g="Array",m=["[","]"]):(g="Object",m=["{","}"]),"function"==typeof t){var b=t.name?": "+t.name:"";v=i(t)?" "+t:" [Function"+b+"]"}else v="";if(o(t)&&(v=" "+t.toUTCString()),0===d.length)return m[0]+v+m[1];if(0>s)return i(t)?h(""+t,"regexp"):h("[Object]","special");l.push(t);var w=d.map(function(e){var n,i;if(t.__lookupGetter__&&(t.__lookupGetter__(e)?i=t.__lookupSetter__(e)?h("[Getter/Setter]","special"):h("[Getter]","special"):t.__lookupSetter__(e)&&(i=h("[Setter]","special"))),p.indexOf(e)<0&&(n="["+e+"]"),i||(l.indexOf(t[e])<0?(i=null===s?f(t[e]):f(t[e],s-1),i.indexOf("\n")>-1&&(i=r(t)?i.split("\n").map(function(t){return"  "+t}).join("\n").substr(2):"\n"+i.split("\n").map(function(t){return"   "+t}).join("\n"))):i=h("[Circular]","special")),"undefined"==typeof n){if("Array"===g&&e.match(/^\d+$/))return i;n=JSON.stringify(""+e),n.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(n=n.substr(1,n.length-2),n=h(n,"name")):(n=n.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),n=h(n,"string"))}return n+": "+i});l.pop();var _=0,k=w.reduce(function(t,e){return _++,e.indexOf("\n")>=0&&_++,t+e.length+1},0);return w=k>50?m[0]+(""===v?"":v+"\n ")+" "+w.join(",\n  ")+" "+m[1]:m[0]+v+" "+w.join(", ")+" "+m[1]}var l=[],h=function(t,e){var n={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},r={special:"cyan",number:"blue","boolean":"yellow",undefined:"grey","null":"bold",string:"green",date:"magenta",regexp:"red"}[e];return r?" ["+n[r][0]+"m"+t+" ["+n[r][1]+"m":t};return c||(h=function(t){return t}),f(t,"undefined"==typeof s?2:s)},n.log=function(){},n.pump=null;var a=Object.keys||function(t){var e=[];for(var n in t)e.push(n);return e},u=Object.getOwnPropertyNames||function(t){var e=[];for(var n in t)Object.hasOwnProperty.call(t,n)&&e.push(n);return e},s=Object.create||function(t,e){var n;if(null===t)n={__proto__:null};else{if("object"!=typeof t)throw new TypeError("typeof prototype["+typeof t+"] != 'object'");var r=function(){};r.prototype=t,n=new r,n.__proto__=t}return"undefined"!=typeof e&&Object.defineProperties&&Object.defineProperties(n,e),n};n.inherits=function(t,e){t.super_=e,t.prototype=s(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})};var c=/%[sdj%]/g;n.format=function(t){if("string"!=typeof t){for(var e=[],r=0;r<arguments.length;r++)e.push(n.inspect(arguments[r]));return e.join(" ")}for(var r=1,i=arguments,o=i.length,a=String(t).replace(c,function(t){if("%%"===t)return"%";if(r>=o)return t;switch(t){case"%s":return String(i[r++]);case"%d":return Number(i[r++]);case"%j":return JSON.stringify(i[r++]);default:return t}}),u=i[r];o>r;u=i[++r])a+=null===u||"object"!=typeof u?" "+u:" "+n.inspect(u);return a}},{events:1}],4:[function(t,e){var n=e.exports={};n.nextTick=function(){var t="undefined"!=typeof window&&window.setImmediate,e="undefined"!=typeof window&&window.postMessage&&window.addEventListener;if(t)return function(t){return window.setImmediate(t)};if(e){var n=[];return window.addEventListener("message",function(t){var e=t.source;if((e===window||null===e)&&"process-tick"===t.data&&(t.stopPropagation(),n.length>0)){var r=n.shift();r()}},!0),function(t){n.push(t),window.postMessage("process-tick","*")}}return function(t){setTimeout(t,0)}}(),n.title="browser",n.browser=!0,n.env={},n.argv=[],n.binding=function(){throw new Error("process.binding is not supported")},n.cwd=function(){return"/"},n.chdir=function(){throw new Error("process.chdir is not supported")}},{}],5:[function(t,e){function n(t,e,n){this.db=t,this.query=e||{},n&&(this.execFn=n)}var r=t("./model"),i=t("underscore");n.prototype.limit=function(t){return this._limit=t,this},n.prototype.skip=function(t){return this._skip=t,this},n.prototype.sort=function(t){return this._sort=t,this},n.prototype.projection=function(t){return this._projection=t,this},n.prototype.project=function(t){var e,n,o,a=[],u=this;return void 0===this._projection||0===Object.keys(this._projection).length?t:(e=0===this._projection._id?!1:!0,this._projection=i.omit(this._projection,"_id"),o=Object.keys(this._projection),o.forEach(function(t){if(void 0!==n&&u._projection[t]!==n)throw new Error("Can't both keep and omit fields except for _id");n=u._projection[t]}),t.forEach(function(t){var i;1===n?(i={$set:{}},o.forEach(function(e){i.$set[e]=r.getDotValue(t,e),void 0===i.$set[e]&&delete i.$set[e]}),i=r.modify({},i)):(i={$unset:{}},o.forEach(function(t){i.$unset[t]=!0}),i=r.modify(t,i)),e?i._id=t._id:delete i._id,a.push(i)}),a)},n.prototype._exec=function(t){function e(e,n){return c.execFn?c.execFn(e,n,t):t(e,n)}var n,i,o,a=[],u=0,s=0,c=this,f=null;this.db.getCandidates(this.query,function(t,l){if(t)return e(t);try{for(n=0;n<l.length;n+=1)if(r.match(l[n],c.query))if(c._sort)a.push(l[n]);else if(c._skip&&c._skip>s)s+=1;else if(a.push(l[n]),u+=1,c._limit&&c._limit<=u)break}catch(t){return e(t)}if(c._sort){i=Object.keys(c._sort);var h=[];for(n=0;n<i.length;n++)o=i[n],h.push({key:o,direction:c._sort[o]});a.sort(function(t,e){var n,i,o;for(o=0;o<h.length;o++)if(n=h[o],i=n.direction*r.compareThings(r.getDotValue(t,n.key),r.getDotValue(e,n.key),c.db.compareStrings),0!==i)return i;return 0});var p=c._limit||a.length,d=c._skip||0;a=a.slice(d,d+p)}try{a=c.project(a)}catch(y){f=y,a=void 0}return e(f,a)})},n.prototype.exec=function(){this.db.executor.push({"this":this,fn:this._exec,arguments:arguments})},e.exports=n},{"./model":10,underscore:19}],6:[function(t,e){function n(t){for(var e,e,n=new Array(t),r=0;t>r;r++)0==(3&r)&&(e=4294967296*Math.random()),n[r]=255&e>>>((3&r)<<3);return n}function r(t){function e(t){return o[63&t>>18]+o[63&t>>12]+o[63&t>>6]+o[63&t]}var n,r,i,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a=t.length%3,u="";for(i=0,r=t.length-a;r>i;i+=3)n=(t[i]<<16)+(t[i+1]<<8)+t[i+2],u+=e(n);switch(a){case 1:n=t[t.length-1],u+=o[n>>2],u+=o[63&n<<4],u+="==";break;case 2:n=(t[t.length-2]<<8)+t[t.length-1],u+=o[n>>10],u+=o[63&n>>4],u+=o[63&n<<2],u+="="}return u}function i(t){return r(n(Math.ceil(Math.max(8,2*t)))).replace(/[+\/]/g,"").slice(0,t)}e.exports.uid=i},{}],7:[function(t,e){function n(t){var e;"string"==typeof t?(e=t,this.inMemoryOnly=!1):(t=t||{},e=t.filename,this.inMemoryOnly=t.inMemoryOnly||!1,this.autoload=t.autoload||!1,this.timestampData=t.timestampData||!1),e&&"string"==typeof e&&0!==e.length?this.filename=e:(this.filename=null,this.inMemoryOnly=!0),this.compareStrings=t.compareStrings,this.persistence=new f({db:this,nodeWebkitAppName:t.nodeWebkitAppName,afterSerialization:t.afterSerialization,beforeDeserialization:t.beforeDeserialization,corruptAlertThreshold:t.corruptAlertThreshold}),this.executor=new a,this.inMemoryOnly&&(this.executor.ready=!0),this.indexes={},this.indexes._id=new u({fieldName:"_id",unique:!0}),this.ttlIndexes={},this.autoload&&this.loadDatabase(t.onload||function(t){if(t)throw t})}var r=t("./customUtils"),i=t("./model"),o=t("async"),a=t("./executor"),u=t("./indexes"),s=t("util"),c=t("underscore"),f=t("./persistence"),l=t("./cursor");s.inherits(n,t("events").EventEmitter),n.prototype.loadDatabase=function(){this.executor.push({"this":this.persistence,fn:this.persistence.loadDatabase,arguments:arguments},!0)},n.prototype.getAllData=function(){return this.indexes._id.getAll()},n.prototype.resetIndexes=function(t){var e=this;Object.keys(this.indexes).forEach(function(n){e.indexes[n].reset(t)})},n.prototype.ensureIndex=function(t,e){var n,r=e||function(){};if(t=t||{},!t.fieldName)return n=new Error("Cannot create an index without a fieldName"),n.missingFieldName=!0,r(n);if(this.indexes[t.fieldName])return r(null);this.indexes[t.fieldName]=new u(t),void 0!==t.expireAfterSeconds&&(this.ttlIndexes[t.fieldName]=t.expireAfterSeconds);try{this.indexes[t.fieldName].insert(this.getAllData())}catch(i){return delete this.indexes[t.fieldName],r(i)}this.persistence.persistNewState([{$$indexCreated:t}],function(t){return t?r(t):r(null)})},n.prototype.removeIndex=function(t,e){var n=e||function(){};delete this.indexes[t],this.persistence.persistNewState([{$$indexRemoved:t}],function(t){return t?n(t):n(null)})},n.prototype.addToIndexes=function(t){var e,n,r,i=Object.keys(this.indexes);for(e=0;e<i.length;e+=1)try{this.indexes[i[e]].insert(t)}catch(o){n=e,r=o;break}if(r){for(e=0;n>e;e+=1)this.indexes[i[e]].remove(t);throw r}},n.prototype.removeFromIndexes=function(t){var e=this;Object.keys(this.indexes).forEach(function(n){e.indexes[n].remove(t)})},n.prototype.updateIndexes=function(t,e){var n,r,i,o=Object.keys(this.indexes);for(n=0;n<o.length;n+=1)try{this.indexes[o[n]].update(t,e)}catch(a){r=n,i=a;break}if(i){for(n=0;r>n;n+=1)this.indexes[o[n]].revertUpdate(t,e);throw i}},n.prototype.getCandidates=function(t,e,n){var r,i=Object.keys(this.indexes),a=this;"function"==typeof e&&(n=e,e=!1),o.waterfall([function(e){return r=[],Object.keys(t).forEach(function(e){("string"==typeof t[e]||"number"==typeof t[e]||"boolean"==typeof t[e]||s.isDate(t[e])||null===t[e])&&r.push(e)}),r=c.intersection(r,i),r.length>0?e(null,a.indexes[r[0]].getMatching(t[r[0]])):(r=[],Object.keys(t).forEach(function(e){t[e]&&t[e].hasOwnProperty("$in")&&r.push(e)}),r=c.intersection(r,i),r.length>0?e(null,a.indexes[r[0]].getMatching(t[r[0]].$in)):(r=[],Object.keys(t).forEach(function(e){t[e]&&(t[e].hasOwnProperty("$lt")||t[e].hasOwnProperty("$lte")||t[e].hasOwnProperty("$gt")||t[e].hasOwnProperty("$gte"))&&r.push(e)}),r=c.intersection(r,i),r.length>0?e(null,a.indexes[r[0]].getBetweenBounds(t[r[0]])):e(null,a.getAllData())))},function(t){if(e)return n(null,t);var r=[],i=[],u=Object.keys(a.ttlIndexes);t.forEach(function(t){var e=!0;u.forEach(function(n){void 0!==t[n]&&s.isDate(t[n])&&Date.now()>t[n].getTime()+1e3*a.ttlIndexes[n]&&(e=!1)}),e?i.push(t):r.push(t._id)}),o.eachSeries(r,function(t,e){a._remove({_id:t},{},function(t){return t?n(t):e()})},function(){return n(null,i)})}])},n.prototype._insert=function(t,e){var n,r=e||function(){};try{n=this.prepareDocumentForInsertion(t),this._insertInCache(n)}catch(o){return r(o)}this.persistence.persistNewState(s.isArray(n)?n:[n],function(t){return t?r(t):r(null,i.deepCopy(n))})},n.prototype.createNewId=function(){var t=r.uid(16);return this.indexes._id.getMatching(t).length>0&&(t=this.createNewId()),t},n.prototype.prepareDocumentForInsertion=function(t){var e,n=this;if(s.isArray(t))e=[],t.forEach(function(t){e.push(n.prepareDocumentForInsertion(t))});else{e=i.deepCopy(t),void 0===e._id&&(e._id=this.createNewId());var r=new Date;this.timestampData&&void 0===e.createdAt&&(e.createdAt=r),this.timestampData&&void 0===e.updatedAt&&(e.updatedAt=r),i.checkObject(e)}return e},n.prototype._insertInCache=function(t){s.isArray(t)?this._insertMultipleDocsInCache(t):this.addToIndexes(t)},n.prototype._insertMultipleDocsInCache=function(t){var e,n,r;for(e=0;e<t.length;e+=1)try{this.addToIndexes(t[e])}catch(i){r=i,n=e;break}if(r){for(e=0;n>e;e+=1)this.removeFromIndexes(t[e]);throw r}},n.prototype.insert=function(){this.executor.push({"this":this,fn:this._insert,arguments:arguments})},n.prototype.count=function(t,e){var n=new l(this,t,function(t,e,n){return t?n(t):n(null,e.length)});return"function"!=typeof e?n:(n.exec(e),void 0)},n.prototype.find=function(t,e,n){switch(arguments.length){case 1:e={};break;case 2:"function"==typeof e&&(n=e,e={})}var r=new l(this,t,function(t,e,n){var r,o=[];if(t)return n(t);for(r=0;r<e.length;r+=1)o.push(i.deepCopy(e[r]));return n(null,o)});return r.projection(e),"function"!=typeof n?r:(r.exec(n),void 0)},n.prototype.findOne=function(t,e,n){switch(arguments.length){case 1:e={};break;case 2:"function"==typeof e&&(n=e,e={})}var r=new l(this,t,function(t,e,n){return t?n(t):1===e.length?n(null,i.deepCopy(e[0])):n(null,null)});return r.projection(e).limit(1),"function"!=typeof n?r:(r.exec(n),void 0)},n.prototype._update=function(t,e,n,r){var a,u,s,f,h=this,p=0;"function"==typeof n&&(r=n,n={}),a=r||function(){},u=void 0!==n.multi?n.multi:!1,s=void 0!==n.upsert?n.upsert:!1,o.waterfall([function(n){if(!s)return n();var r=new l(h,t);r.limit(1)._exec(function(r,o){if(r)return a(r);if(1===o.length)return n();var u;try{i.checkObject(e),u=e}catch(s){try{u=i.modify(i.deepCopy(t,!0),e)}catch(r){return a(r)}}return h._insert(u,function(t,e){return t?a(t):a(null,1,e,!0)})})},function(){var r,o,s=[];h.getCandidates(t,function(l,d){if(l)return a(l);try{for(f=0;f<d.length;f+=1)i.match(d[f],t)&&(u||0===p)&&(p+=1,h.timestampData&&(o=d[f].createdAt),r=i.modify(d[f],e),h.timestampData&&(r.createdAt=o,r.updatedAt=new Date),s.push({oldDoc:d[f],newDoc:r}))}catch(l){return a(l)}try{h.updateIndexes(s)}catch(l){return a(l)}var y=c.pluck(s,"newDoc");h.persistence.persistNewState(y,function(t){if(t)return a(t);if(n.returnUpdatedDocs){var e=[];return y.forEach(function(t){e.push(i.deepCopy(t))}),u||(e=e[0]),a(null,p,e)}return a(null,p)})})}])},n.prototype.update=function(){this.executor.push({"this":this,fn:this._update,arguments:arguments})},n.prototype._remove=function(t,e,n){var r,o,a=this,u=0,s=[];"function"==typeof e&&(n=e,e={}),r=n||function(){},o=void 0!==e.multi?e.multi:!1,this.getCandidates(t,!0,function(e,n){if(e)return r(e);try{n.forEach(function(e){i.match(e,t)&&(o||0===u)&&(u+=1,s.push({$$deleted:!0,_id:e._id}),a.removeFromIndexes(e))})}catch(e){return r(e)}a.persistence.persistNewState(s,function(t){return t?r(t):r(null,u)})})},n.prototype.remove=function(){this.executor.push({"this":this,fn:this._remove,arguments:arguments})},e.exports=n},{"./cursor":5,"./customUtils":6,"./executor":8,"./indexes":9,"./model":10,"./persistence":11,async:13,events:1,underscore:19,util:3}],8:[function(t,e){function n(){this.buffer=[],this.ready=!1,this.queue=i.queue(function(t,e){for(var n=[],i=0;i<t.arguments.length;i+=1)n.push(t.arguments[i]);var o=t.arguments[t.arguments.length-1];"function"==typeof o?n[n.length-1]=function(){"function"==typeof setImmediate?setImmediate(e):r.nextTick(e),o.apply(null,arguments)}:o||0===t.arguments.length?n.push(function(){e()}):n[n.length-1]=function(){e()},t.fn.apply(t.this,n)},1)}var r=t("__browserify_process"),i=t("async");n.prototype.push=function(t,e){this.ready||e?this.queue.push(t):this.buffer.push(t)},n.prototype.processBuffer=function(){var t;for(this.ready=!0,t=0;t<this.buffer.length;t+=1)this.queue.push(this.buffer[t]);this.buffer=[]},e.exports=n},{__browserify_process:4,async:13}],9:[function(t,e){function n(t,e){return t===e}function r(t){return null===t?"$null":"string"==typeof t?"$string"+t:"boolean"==typeof t?"$boolean"+t:"number"==typeof t?"$number"+t:s.isArray(t)?"$date"+t.getTime():t}function i(t){this.fieldName=t.fieldName,this.unique=t.unique||!1,this.sparse=t.sparse||!1,this.treeOptions={unique:this.unique,compareKeys:a.compareThings,checkValueEquality:n},this.reset()}var o=t("binary-search-tree").AVLTree,a=t("./model"),u=t("underscore"),s=t("util");i.prototype.reset=function(t){this.tree=new o(this.treeOptions),t&&this.insert(t)},i.prototype.insert=function(t){var e,n,i,o,c;if(s.isArray(t))return this.insertMultipleDocs(t),void 0;if(e=a.getDotValue(t,this.fieldName),void 0!==e||!this.sparse)if(s.isArray(e)){for(n=u.uniq(e,r),i=0;i<n.length;i+=1)try{this.tree.insert(n[i],t)}catch(f){c=f,o=i;break}if(c){for(i=0;o>i;i+=1)this.tree.delete(n[i],t);throw c}}else this.tree.insert(e,t)},i.prototype.insertMultipleDocs=function(t){var e,n,r;for(e=0;e<t.length;e+=1)try{this.insert(t[e])}catch(i){n=i,r=e;break}if(n){for(e=0;r>e;e+=1)this.remove(t[e]);throw n}},i.prototype.remove=function(t){var e,n=this;return s.isArray(t)?(t.forEach(function(t){n.remove(t)}),void 0):(e=a.getDotValue(t,this.fieldName),void 0===e&&this.sparse||(s.isArray(e)?u.uniq(e,r).forEach(function(e){n.tree.delete(e,t)}):this.tree.delete(e,t)),void 0)},i.prototype.update=function(t,e){if(s.isArray(t))return this.updateMultipleDocs(t),void 0;this.remove(t);try{this.insert(e)}catch(n){throw this.insert(t),n}},i.prototype.updateMultipleDocs=function(t){var e,n,r;for(e=0;e<t.length;e+=1)this.remove(t[e].oldDoc);for(e=0;e<t.length;e+=1)try{this.insert(t[e].newDoc)}catch(i){r=i,n=e;break}if(r){for(e=0;n>e;e+=1)this.remove(t[e].newDoc);for(e=0;e<t.length;e+=1)this.insert(t[e].oldDoc);throw r}},i.prototype.revertUpdate=function(t,e){var n=[];s.isArray(t)?(t.forEach(function(t){n.push({oldDoc:t.newDoc,newDoc:t.oldDoc})}),this.update(n)):this.update(e,t)},i.prototype.getMatching=function(t){var e=this;if(s.isArray(t)){var n={},r=[];return t.forEach(function(t){e.getMatching(t).forEach(function(t){n[t._id]=t})}),Object.keys(n).forEach(function(t){r.push(n[t])}),r}return e.tree.search(t)},i.prototype.getBetweenBounds=function(t){return this.tree.betweenBounds(t)},i.prototype.getAll=function(){var t=[];return this.tree.executeOnEveryNode(function(e){var n;for(n=0;n<e.data.length;n+=1)t.push(e.data[n])}),t},e.exports=i},{"./model":10,"binary-search-tree":14,underscore:19,util:3}],10:[function(t,e){function n(t,e){if("number"==typeof t&&(t=t.toString()),!("$"!==t[0]||"$$date"===t&&"number"==typeof e||"$$deleted"===t&&e===!0||"$$indexCreated"===t||"$$indexRemoved"===t))throw new Error("Field names cannot begin with the $ character");if(-1!==t.indexOf("."))throw new Error("Field names cannot contain a .")}function r(t){m.isArray(t)&&t.forEach(function(t){r(t)}),"object"==typeof t&&null!==t&&Object.keys(t).forEach(function(e){n(e,t[e]),r(t[e])})}function i(t){var e;return e=JSON.stringify(t,function(t,e){return n(t,e),void 0===e?void 0:null===e?null:"function"==typeof this[t].getTime?{$$date:this[t].getTime()}:e})}function o(t){return JSON.parse(t,function(t,e){return"$$date"===t?new Date(e):"string"==typeof e||"number"==typeof e||"boolean"==typeof e||null===e?e:e&&e.$$date?e.$$date:e})}function a(t,e){var n;return"boolean"==typeof t||"number"==typeof t||"string"==typeof t||null===t||m.isDate(t)?t:m.isArray(t)?(n=[],t.forEach(function(t){n.push(a(t,e))}),n):"object"==typeof t?(n={},Object.keys(t).forEach(function(r){(!e||"$"!==r[0]&&-1===r.indexOf("."))&&(n[r]=a(t[r],e))}),n):void 0}function u(t){return"boolean"==typeof t||"number"==typeof t||"string"==typeof t||null===t||m.isDate(t)||m.isArray(t)}function s(t,e){return e>t?-1:t>e?1:0}function c(t,e){var n,r;for(n=0;n<Math.min(t.length,e.length);n+=1)if(r=f(t[n],e[n]),0!==r)return r;return s(t.length,e.length)}function f(t,e,n){var r,i,o,a,u=n||s;if(void 0===t)return void 0===e?0:-1;if(void 0===e)return void 0===t?0:1;if(null===t)return null===e?0:-1;if(null===e)return null===t?0:1;if("number"==typeof t)return"number"==typeof e?s(t,e):-1;if("number"==typeof e)return"number"==typeof t?s(t,e):1;if("string"==typeof t)return"string"==typeof e?u(t,e):-1;if("string"==typeof e)return"string"==typeof t?u(t,e):1;if("boolean"==typeof t)return"boolean"==typeof e?s(t,e):-1;if("boolean"==typeof e)return"boolean"==typeof t?s(t,e):1;if(m.isDate(t))return m.isDate(e)?s(t.getTime(),e.getTime()):-1;if(m.isDate(e))return m.isDate(t)?s(t.getTime(),e.getTime()):1;if(m.isArray(t))return m.isArray(e)?c(t,e):-1;if(m.isArray(e))return m.isArray(t)?c(t,e):1;for(r=Object.keys(t).sort(),i=Object.keys(e).sort(),a=0;a<Math.min(r.length,i.length);a+=1)if(o=f(t[r[a]],e[i[a]]),0!==o)return o;return s(r.length,i.length)}function l(t){return function(e,n,r){var i="string"==typeof n?n.split("."):n;if(1===i.length)_[t](e,n,r);else{if(void 0===e[i[0]]){if("$unset"===t)return;e[i[0]]={}}w[t](e[i[0]],i.slice(1),r)}}}function h(t,e){var n,i,o=Object.keys(e),u=b.map(o,function(t){return t[0]}),s=b.filter(u,function(t){return"$"===t});if(-1!==o.indexOf("_id")&&e._id!==t._id)throw new Error("You cannot change a document's _id");if(0!==s.length&&s.length!==u.length)throw new Error("You cannot mix modifiers and normal fields");if(0===s.length?(n=a(e),n._id=t._id):(i=b.uniq(o),n=a(t),i.forEach(function(t){var r;if(!w[t])throw new Error("Unknown modifier "+t);if("object"!=typeof e[t])throw new Error("Modifier "+t+"'s argument must be an object");r=Object.keys(e[t]),r.forEach(function(r){w[t](n,r,e[t][r])})})),r(n),t._id!==n._id)throw new Error("You can't change a document's _id");return n}function p(t,e){var n,r,i="string"==typeof e?e.split("."):e;if(!t)return void 0;if(0===i.length)return t;if(1===i.length)return t[i[0]];if(m.isArray(t[i[0]])){if(n=parseInt(i[1],10),"number"==typeof n&&!isNaN(n))return p(t[i[0]][n],i.slice(2));for(r=new Array,n=0;n<t[i[0]].length;n+=1)r.push(p(t[i[0]][n],i.slice(1)));return r}return p(t[i[0]],i.slice(1))}function d(t,e){var n,r,i;if(null===t||"string"==typeof t||"boolean"==typeof t||"number"==typeof t||null===e||"string"==typeof e||"boolean"==typeof e||"number"==typeof e)return t===e;if(m.isDate(t)||m.isDate(e))return m.isDate(t)&&m.isDate(e)&&t.getTime()===e.getTime();if((!m.isArray(t)||!m.isArray(e))&&(m.isArray(t)||m.isArray(e))||void 0===t||void 0===e)return!1;try{n=Object.keys(t),r=Object.keys(e)}catch(o){return!1}if(n.length!==r.length)return!1;for(i=0;i<n.length;i+=1){if(-1===r.indexOf(n[i]))return!1;if(!d(t[n[i]],e[n[i]]))return!1}return!0}function y(t,e){return"string"==typeof t||"number"==typeof t||m.isDate(t)||"string"==typeof e||"number"==typeof e||m.isDate(e)?typeof t!=typeof e?!1:!0:!1}function v(t,e){var n,r,i,o;if(u(t)||u(e))return g({needAKey:t},"needAKey",e);for(n=Object.keys(e),o=0;o<n.length;o+=1)if(r=n[o],i=e[r],"$"===r[0]){if(!x[r])throw new Error("Unknown logical operator "+r);if(!x[r](t,i))return!1}else if(!g(t,r,i))return!1;return!0}function g(t,e,n,r){var i,o,a,u,s=p(t,e);if(m.isArray(s)&&!r){if(m.isArray(n))return g(t,e,n,!0);if(null!==n&&"object"==typeof n&&!m.isRegExp(n))for(o=Object.keys(n),i=0;i<o.length;i+=1)if(E[o[i]])return g(t,e,n,!0);for(i=0;i<s.length;i+=1)if(g({k:s[i]},"k",n))return!0;return!1}if(null!==n&&"object"==typeof n&&!m.isRegExp(n)&&!m.isArray(n)){if(o=Object.keys(n),a=b.map(o,function(t){return t[0]}),u=b.filter(a,function(t){return"$"===t}),0!==u.length&&u.length!==a.length)throw new Error("You cannot mix operators and normal fields");if(u.length>0){for(i=0;i<o.length;i+=1){if(!k[o[i]])throw new Error("Unknown comparison function "+o[i]);if(!k[o[i]](s,n[o[i]]))return!1}return!0}}return m.isRegExp(n)?k.$regex(s,n):d(s,n)?!0:!1}var m=t("util"),b=t("underscore"),w={},_={},k={},x={},E={};_.$set=function(t,e,n){t[e]=n},_.$unset=function(t,e){delete t[e]},_.$push=function(t,e,n){if(t.hasOwnProperty(e)||(t[e]=[]),!m.isArray(t[e]))throw new Error("Can't $push an element on non-array values");if(null!==n&&"object"==typeof n&&n.$slice&&void 0===n.$each&&(n.$each=[]),null!==n&&"object"==typeof n&&n.$each){if(Object.keys(n).length>=3||2===Object.keys(n).length&&void 0===n.$slice)throw new Error("Can only use $slice in cunjunction with $each when $push to array");if(!m.isArray(n.$each))throw new Error("$each requires an array value");if(n.$each.forEach(function(n){t[e].push(n)}),void 0===n.$slice||"number"!=typeof n.$slice)return;if(0===n.$slice)t[e]=[];else{var r,i,o=t[e].length;n.$slice<0?(r=Math.max(0,o+n.$slice),i=o):n.$slice>0&&(r=0,i=Math.min(o,n.$slice)),t[e]=t[e].slice(r,i)}}else t[e].push(n)},_.$addToSet=function(t,e,n){var r=!0;if(t.hasOwnProperty(e)||(t[e]=[]),!m.isArray(t[e]))throw new Error("Can't $addToSet an element on non-array values");if(null!==n&&"object"==typeof n&&n.$each){if(Object.keys(n).length>1)throw new Error("Can't use another field in conjunction with $each");if(!m.isArray(n.$each))throw new Error("$each requires an array value");n.$each.forEach(function(n){_.$addToSet(t,e,n)})}else t[e].forEach(function(t){0===f(t,n)&&(r=!1)}),r&&t[e].push(n)},_.$pop=function(t,e,n){if(!m.isArray(t[e]))throw new Error("Can't $pop an element from non-array values");if("number"!=typeof n)throw new Error(n+" isn't an integer, can't use it with $pop");0!==n&&(t[e]=n>0?t[e].slice(0,t[e].length-1):t[e].slice(1))},_.$pull=function(t,e,n){var r,i;if(!m.isArray(t[e]))throw new Error("Can't $pull an element from non-array values");for(r=t[e],i=r.length-1;i>=0;i-=1)v(r[i],n)&&r.splice(i,1)},_.$inc=function(t,e,n){if("number"!=typeof n)throw new Error(n+" must be a number");if("number"!=typeof t[e]){if(b.has(t,e))throw new Error("Don't use the $inc modifier on non-number fields");t[e]=n}else t[e]+=n},_.$max=function(t,e,n){"undefined"==typeof t[e]?t[e]=n:n>t[e]&&(t[e]=n)},_.$min=function(t,e,n){"undefined"==typeof t[e]?t[e]=n:n<t[e]&&(t[e]=n)},Object.keys(_).forEach(function(t){w[t]=l(t)}),k.$lt=function(t,e){return y(t,e)&&e>t},k.$lte=function(t,e){return y(t,e)&&e>=t},k.$gt=function(t,e){return y(t,e)&&t>e},k.$gte=function(t,e){return y(t,e)&&t>=e},k.$ne=function(t,e){return void 0===t?!0:!d(t,e)},k.$in=function(t,e){var n;if(!m.isArray(e))throw new Error("$in operator called with a non-array");for(n=0;n<e.length;n+=1)if(d(t,e[n]))return!0;return!1},k.$nin=function(t,e){if(!m.isArray(e))throw new Error("$nin operator called with a non-array");return!k.$in(t,e)},k.$regex=function(t,e){if(!m.isRegExp(e))throw new Error("$regex operator called with non regular expression");return"string"!=typeof t?!1:e.test(t)},k.$exists=function(t,e){return e=e||""===e?!0:!1,void 0===t?!e:e},k.$size=function(t,e){if(!m.isArray(t))return!1;if(0!==e%1)throw new Error("$size operator called without an integer");return t.length==e},k.$elemMatch=function(t,e){if(!m.isArray(t))return!1;for(var n=t.length,r=!1;n--;)if(v(t[n],e)){r=!0;break}return r},E.$size=!0,E.$elemMatch=!0,x.$or=function(t,e){var n;if(!m.isArray(e))throw new Error("$or operator used without an array");for(n=0;n<e.length;n+=1)if(v(t,e[n]))return!0;return!1},x.$and=function(t,e){var n;if(!m.isArray(e))throw new Error("$and operator used without an array");for(n=0;n<e.length;n+=1)if(!v(t,e[n]))return!1;return!0},x.$not=function(t,e){return!v(t,e)},x.$where=function(t,e){var n;if(!b.isFunction(e))throw new Error("$where operator used without a function");if(n=e.call(t),!b.isBoolean(n))throw new Error("$where function must return boolean");return n},e.exports.serialize=i,e.exports.deserialize=o,e.exports.deepCopy=a,e.exports.checkObject=r,e.exports.isPrimitiveType=u,e.exports.modify=h,e.exports.getDotValue=p,e.exports.match=v,e.exports.areThingsEqual=d,e.exports.compareThings=f},{underscore:19,util:3}],11:[function(t,e){function n(t){var e,r,i;if(this.db=t.db,this.inMemoryOnly=this.db.inMemoryOnly,this.filename=this.db.filename,this.corruptAlertThreshold=void 0!==t.corruptAlertThreshold?t.corruptAlertThreshold:.1,!this.inMemoryOnly&&this.filename&&"~"===this.filename.charAt(this.filename.length-1))throw new Error("The datafile name can't end with a ~, which is reserved for crash safe backup files");if(t.afterSerialization&&!t.beforeDeserialization)throw new Error("Serialization hook defined but deserialization hook undefined, cautiously refusing to start NeDB to prevent dataloss");if(!t.afterSerialization&&t.beforeDeserialization)throw new Error("Serialization hook undefined but deserialization hook defined, cautiously refusing to start NeDB to prevent dataloss");for(this.afterSerialization=t.afterSerialization||function(t){return t},this.beforeDeserialization=t.beforeDeserialization||function(t){return t},e=1;30>e;e+=1)for(r=0;10>r;r+=1)if(i=s.uid(e),this.beforeDeserialization(this.afterSerialization(i))!==i)throw new Error("beforeDeserialization is not the reverse of afterSerialization, cautiously refusing to start NeDB to prevent dataloss");this.filename&&t.nodeWebkitAppName&&(console.log("=================================================================="),console.log("WARNING: The nodeWebkitAppName option is deprecated"),console.log("To get the path to the directory where Node Webkit stores the data"),console.log("for your app, use the internal nw.gui module like this"),console.log("require('nw.gui').App.dataPath"),console.log("See https://github.com/rogerwang/node-webkit/issues/500"),console.log("=================================================================="),this.filename=n.getNWAppFilename(t.nodeWebkitAppName,this.filename))}var r=t("__browserify_process"),i=t("./storage"),o=t("path"),a=t("./model"),u=t("async"),s=t("./customUtils"),c=t("./indexes");n.ensureDirectoryExists=function(t,e){var n=e||function(){};i.mkdirp(t,function(t){return n(t)})},n.getNWAppFilename=function(t,e){var n;switch(r.platform){case"win32":case"win64":if(n=r.env.LOCALAPPDATA||r.env.APPDATA,!n)throw new Error("Couldn't find the base application data folder");n=o.join(n,t);break;case"darwin":if(n=r.env.HOME,!n)throw new Error("Couldn't find the base application data directory");n=o.join(n,"Library","Application Support",t);break;case"linux":if(n=r.env.HOME,!n)throw new Error("Couldn't find the base application data directory");n=o.join(n,".config",t);break;default:throw new Error("Can't use the Node Webkit relative path for platform "+r.platform)}return o.join(n,"nedb-data",e)},n.prototype.persistCachedDatabase=function(t){var e=t||function(){},n="",r=this;return this.inMemoryOnly?e(null):(this.db.getAllData().forEach(function(t){n+=r.afterSerialization(a.serialize(t))+"\n"}),Object.keys(this.db.indexes).forEach(function(t){"_id"!=t&&(n+=r.afterSerialization(a.serialize({$$indexCreated:{fieldName:t,unique:r.db.indexes[t].unique,sparse:r.db.indexes[t].sparse}}))+"\n")}),i.crashSafeWriteFile(this.filename,n,function(t){return t?e(t):(r.db.emit("compaction.done"),e(null))}),void 0)},n.prototype.compactDatafile=function(){this.db.executor.push({"this":this,fn:this.persistCachedDatabase,arguments:[]})},n.prototype.setAutocompactionInterval=function(t){var e=this,n=5e3,r=Math.max(t||0,n);this.stopAutocompaction(),this.autocompactionIntervalId=setInterval(function(){e.compactDatafile()},r)},n.prototype.stopAutocompaction=function(){this.autocompactionIntervalId&&clearInterval(this.autocompactionIntervalId)},n.prototype.persistNewState=function(t,e){var n=this,r="",o=e||function(){};return n.inMemoryOnly?o(null):(t.forEach(function(t){r+=n.afterSerialization(a.serialize(t))+"\n"}),0===r.length?o(null):(i.appendFile(n.filename,r,"utf8",function(t){return o(t)}),void 0))},n.prototype.treatRawData=function(t){var e,n=t.split("\n"),r={},i=[],o={},u=-1;for(e=0;e<n.length;e+=1){var s;try{s=a.deserialize(this.beforeDeserialization(n[e])),s._id?s.$$deleted===!0?delete r[s._id]:r[s._id]=s:s.$$indexCreated&&void 0!=s.$$indexCreated.fieldName?o[s.$$indexCreated.fieldName]=s.$$indexCreated:"string"==typeof s.$$indexRemoved&&delete o[s.$$indexRemoved]}catch(c){u+=1}}if(n.length>0&&u/n.length>this.corruptAlertThreshold)throw new Error("More than "+Math.floor(100*this.corruptAlertThreshold)+"% of the data file is corrupt, the wrong beforeDeserialization hook may be used. Cautiously refusing to start NeDB to prevent dataloss");return Object.keys(r).forEach(function(t){i.push(r[t])}),{data:i,indexes:o}},n.prototype.loadDatabase=function(t){var e=t||function(){},r=this;return r.db.resetIndexes(),r.inMemoryOnly?e(null):(u.waterfall([function(t){n.ensureDirectoryExists(o.dirname(r.filename),function(){i.ensureDatafileIntegrity(r.filename,function(){i.readFile(r.filename,"utf8",function(e,n){if(e)return t(e);try{var i=r.treatRawData(n)}catch(o){return t(o)}Object.keys(i.indexes).forEach(function(t){r.db.indexes[t]=new c(i.indexes[t])});try{r.db.resetIndexes(i.data)}catch(o){return r.db.resetIndexes(),t(o)}r.db.persistence.persistCachedDatabase(t)})})})}],function(t){return t?e(t):(r.db.executor.processBuffer(),e(null))}),void 0)},e.exports=n},{"./customUtils":6,"./indexes":9,"./model":10,"./storage":12,__browserify_process:4,async:13,path:2}],12:[function(t,e){function n(t,e){f.getItem(t,function(t,n){return null!==n?e(!0):e(!1)})}function r(t,e,n){f.getItem(t,function(r,i){null===i?f.removeItem(e,function(){return n()}):f.setItem(e,i,function(){f.removeItem(t,function(){return n()})})})}function i(t,e,n,r){"function"==typeof n&&(r=n),f.setItem(t,e,function(){return r()})}function o(t,e,n,r){"function"==typeof n&&(r=n),f.getItem(t,function(n,i){i=i||"",i+=e,f.setItem(t,i,function(){return r()})})}function a(t,e,n){"function"==typeof e&&(n=e),f.getItem(t,function(t,e){return n(null,e||"")})}function u(t,e){f.removeItem(t,function(){return e()})}function s(t,e){return e()}function c(t,e){return e(null)}var f=t("localforage");f.config({name:"NeDB",storeName:"nedbdata"}),e.exports.exists=n,e.exports.rename=r,e.exports.writeFile=i,e.exports.crashSafeWriteFile=i,e.exports.appendFile=o,e.exports.readFile=a,e.exports.unlink=u,e.exports.mkdirp=s,e.exports.ensureDatafileIntegrity=c},{localforage:18}],13:[function(e,n){var r=e("__browserify_process");!function(){function e(t){var e=!1;return function(){if(e)throw new Error("Callback was already called.");e=!0,t.apply(i,arguments)}}var i,o,a={};i=this,null!=i&&(o=i.async),a.noConflict=function(){return i.async=o,a};var u=function(t,e){if(t.forEach)return t.forEach(e);for(var n=0;n<t.length;n+=1)e(t[n],n,t)},s=function(t,e){if(t.map)return t.map(e);var n=[];return u(t,function(t,r,i){n.push(e(t,r,i))}),n},c=function(t,e,n){return t.reduce?t.reduce(e,n):(u(t,function(t,r,i){n=e(n,t,r,i)}),n)},f=function(t){if(Object.keys)return Object.keys(t);var e=[];for(var n in t)t.hasOwnProperty(n)&&e.push(n);return e};"undefined"!=typeof r&&r.nextTick?(a.nextTick=r.nextTick,a.setImmediate="undefined"!=typeof setImmediate?function(t){setImmediate(t)}:a.nextTick):"function"==typeof setImmediate?(a.nextTick=function(t){setImmediate(t)},a.setImmediate=a.nextTick):(a.nextTick=function(t){setTimeout(t,0)},a.setImmediate=a.nextTick),a.each=function(t,n,r){if(r=r||function(){},!t.length)return r();var i=0;u(t,function(o){n(o,e(function(e){e?(r(e),r=function(){}):(i+=1,i>=t.length&&r(null))}))})},a.forEach=a.each,a.eachSeries=function(t,e,n){if(n=n||function(){},!t.length)return n();var r=0,i=function(){e(t[r],function(e){e?(n(e),n=function(){}):(r+=1,r>=t.length?n(null):i())})};i()},a.forEachSeries=a.eachSeries,a.eachLimit=function(t,e,n,r){var i=l(e);i.apply(null,[t,n,r])},a.forEachLimit=a.eachLimit;var l=function(t){return function(e,n,r){if(r=r||function(){},!e.length||0>=t)return r();var i=0,o=0,a=0;!function u(){if(i>=e.length)return r();for(;t>a&&o<e.length;)o+=1,a+=1,n(e[o-1],function(t){t?(r(t),r=function(){}):(i+=1,a-=1,i>=e.length?r():u())})}()}},h=function(t){return function(){var e=Array.prototype.slice.call(arguments);return t.apply(null,[a.each].concat(e))}},p=function(t,e){return function(){var n=Array.prototype.slice.call(arguments);return e.apply(null,[l(t)].concat(n))}},d=function(t){return function(){var e=Array.prototype.slice.call(arguments);return t.apply(null,[a.eachSeries].concat(e))}},y=function(t,e,n,r){var i=[];e=s(e,function(t,e){return{index:e,value:t}}),t(e,function(t,e){n(t.value,function(n,r){i[t.index]=r,e(n)})},function(t){r(t,i)})};a.map=h(y),a.mapSeries=d(y),a.mapLimit=function(t,e,n,r){return v(e)(t,n,r)};var v=function(t){return p(t,y)};a.reduce=function(t,e,n,r){a.eachSeries(t,function(t,r){n(e,t,function(t,n){e=n,r(t)})},function(t){r(t,e)})},a.inject=a.reduce,a.foldl=a.reduce,a.reduceRight=function(t,e,n,r){var i=s(t,function(t){return t}).reverse();a.reduce(i,e,n,r)},a.foldr=a.reduceRight;var g=function(t,e,n,r){var i=[];e=s(e,function(t,e){return{index:e,value:t}}),t(e,function(t,e){n(t.value,function(n){n&&i.push(t),e()})},function(){r(s(i.sort(function(t,e){return t.index-e.index}),function(t){return t.value}))})};a.filter=h(g),a.filterSeries=d(g),a.select=a.filter,a.selectSeries=a.filterSeries;var m=function(t,e,n,r){var i=[];e=s(e,function(t,e){return{index:e,value:t}}),t(e,function(t,e){n(t.value,function(n){n||i.push(t),e()})},function(){r(s(i.sort(function(t,e){return t.index-e.index}),function(t){return t.value}))})};a.reject=h(m),a.rejectSeries=d(m);var b=function(t,e,n,r){t(e,function(t,e){n(t,function(n){n?(r(t),r=function(){}):e()})},function(){r()})};a.detect=h(b),a.detectSeries=d(b),a.some=function(t,e,n){a.each(t,function(t,r){e(t,function(t){t&&(n(!0),n=function(){}),r()})},function(){n(!1)})},a.any=a.some,a.every=function(t,e,n){a.each(t,function(t,r){e(t,function(t){t||(n(!1),n=function(){}),r()})},function(){n(!0)})},a.all=a.every,a.sortBy=function(t,e,n){a.map(t,function(t,n){e(t,function(e,r){e?n(e):n(null,{value:t,criteria:r})})},function(t,e){if(t)return n(t);var r=function(t,e){var n=t.criteria,r=e.criteria;return r>n?-1:n>r?1:0};n(null,s(e.sort(r),function(t){return t.value}))})},a.auto=function(t,e){e=e||function(){};var n=f(t);if(!n.length)return e(null);var r={},i=[],o=function(t){i.unshift(t)},s=function(t){for(var e=0;e<i.length;e+=1)if(i[e]===t)return i.splice(e,1),void 0},l=function(){u(i.slice(0),function(t){t()})};o(function(){f(r).length===n.length&&(e(null,r),e=function(){})}),u(n,function(n){var i=t[n]instanceof Function?[t[n]]:t[n],h=function(t){var i=Array.prototype.slice.call(arguments,1);if(i.length<=1&&(i=i[0]),t){var o={};u(f(r),function(t){o[t]=r[t]}),o[n]=i,e(t,o),e=function(){}}else r[n]=i,a.setImmediate(l)},p=i.slice(0,Math.abs(i.length-1))||[],d=function(){return c(p,function(t,e){return t&&r.hasOwnProperty(e)},!0)&&!r.hasOwnProperty(n)};if(d())i[i.length-1](h,r);else{var y=function(){d()&&(s(y),i[i.length-1](h,r))};o(y)}})},a.waterfall=function(t,e){if(e=e||function(){},t.constructor!==Array){var n=new Error("First argument to waterfall must be an array of functions");return e(n)}if(!t.length)return e();var r=function(t){return function(n){if(n)e.apply(null,arguments),e=function(){};else{var i=Array.prototype.slice.call(arguments,1),o=t.next();o?i.push(r(o)):i.push(e),a.setImmediate(function(){t.apply(null,i)})}}};r(a.iterator(t))()};var w=function(t,e,n){if(n=n||function(){},e.constructor===Array)t.map(e,function(t,e){t&&t(function(t){var n=Array.prototype.slice.call(arguments,1);n.length<=1&&(n=n[0]),e.call(null,t,n)})},n);else{var r={};t.each(f(e),function(t,n){e[t](function(e){var i=Array.prototype.slice.call(arguments,1);i.length<=1&&(i=i[0]),r[t]=i,n(e)})},function(t){n(t,r)})}};a.parallel=function(t,e){w({map:a.map,each:a.each},t,e)},a.parallelLimit=function(t,e,n){w({map:v(e),each:l(e)},t,n)},a.series=function(t,e){if(e=e||function(){},t.constructor===Array)a.mapSeries(t,function(t,e){t&&t(function(t){var n=Array.prototype.slice.call(arguments,1);n.length<=1&&(n=n[0]),e.call(null,t,n)})},e);else{var n={};a.eachSeries(f(t),function(e,r){t[e](function(t){var i=Array.prototype.slice.call(arguments,1);i.length<=1&&(i=i[0]),n[e]=i,r(t)})},function(t){e(t,n)})}},a.iterator=function(t){var e=function(n){var r=function(){return t.length&&t[n].apply(null,arguments),r.next()};return r.next=function(){return n<t.length-1?e(n+1):null},r};return e(0)},a.apply=function(t){var e=Array.prototype.slice.call(arguments,1);return function(){return t.apply(null,e.concat(Array.prototype.slice.call(arguments)))}};var _=function(t,e,n,r){var i=[];t(e,function(t,e){n(t,function(t,n){i=i.concat(n||[]),e(t)})},function(t){r(t,i)})};a.concat=h(_),a.concatSeries=d(_),a.whilst=function(t,e,n){t()?e(function(r){return r?n(r):(a.whilst(t,e,n),void 0)}):n()},a.doWhilst=function(t,e,n){t(function(r){return r?n(r):(e()?a.doWhilst(t,e,n):n(),void 0)})},a.until=function(t,e,n){t()?n():e(function(r){return r?n(r):(a.until(t,e,n),void 0)})},a.doUntil=function(t,e,n){t(function(r){return r?n(r):(e()?n():a.doUntil(t,e,n),void 0)})},a.queue=function(t,n){function r(t,e,r,i){e.constructor!==Array&&(e=[e]),u(e,function(e){var o={data:e,callback:"function"==typeof i?i:null};r?t.tasks.unshift(o):t.tasks.push(o),t.saturated&&t.tasks.length===n&&t.saturated(),a.setImmediate(t.process)})}void 0===n&&(n=1);var i=0,o={tasks:[],concurrency:n,saturated:null,empty:null,drain:null,push:function(t,e){r(o,t,!1,e)},unshift:function(t,e){r(o,t,!0,e)},process:function(){if(i<o.concurrency&&o.tasks.length){var n=o.tasks.shift();o.empty&&0===o.tasks.length&&o.empty(),i+=1;var r=function(){i-=1,n.callback&&n.callback.apply(n,arguments),o.drain&&0===o.tasks.length+i&&o.drain(),o.process()},a=e(r);t(n.data,a)}},length:function(){return o.tasks.length},running:function(){return i}};return o},a.cargo=function(t,e){var n=!1,r=[],i={tasks:r,payload:e,saturated:null,empty:null,drain:null,push:function(t,n){t.constructor!==Array&&(t=[t]),u(t,function(t){r.push({data:t,callback:"function"==typeof n?n:null}),i.saturated&&r.length===e&&i.saturated()}),a.setImmediate(i.process)},process:function o(){if(!n){if(0===r.length)return i.drain&&i.drain(),void 0;var a="number"==typeof e?r.splice(0,e):r.splice(0),c=s(a,function(t){return t.data});i.empty&&i.empty(),n=!0,t(c,function(){n=!1;var t=arguments;u(a,function(e){e.callback&&e.callback.apply(null,t)}),o()})}},length:function(){return r.length},running:function(){return n}};return i};var k=function(t){return function(e){var n=Array.prototype.slice.call(arguments,1);e.apply(null,n.concat([function(e){var n=Array.prototype.slice.call(arguments,1);"undefined"!=typeof console&&(e?console.error&&console.error(e):console[t]&&u(n,function(e){console[t](e)}))}]))}};a.log=k("log"),a.dir=k("dir"),a.memoize=function(t,e){var n={},r={};e=e||function(t){return t};var i=function(){var i=Array.prototype.slice.call(arguments),o=i.pop(),a=e.apply(null,i);a in n?o.apply(null,n[a]):a in r?r[a].push(o):(r[a]=[o],t.apply(null,i.concat([function(){n[a]=arguments;var t=r[a];delete r[a];for(var e=0,i=t.length;i>e;e++)t[e].apply(null,arguments)}])))};return i.memo=n,i.unmemoized=t,i},a.unmemoize=function(t){return function(){return(t.unmemoized||t).apply(null,arguments)}},a.times=function(t,e,n){for(var r=[],i=0;t>i;i++)r.push(i);return a.map(r,e,n)},a.timesSeries=function(t,e,n){for(var r=[],i=0;t>i;i++)r.push(i);return a.mapSeries(r,e,n)},a.compose=function(){var t=Array.prototype.reverse.call(arguments);return function(){var e=this,n=Array.prototype.slice.call(arguments),r=n.pop();a.reduce(t,n,function(t,n,r){n.apply(e,t.concat([function(){var t=arguments[0],e=Array.prototype.slice.call(arguments,1);r(t,e)}]))},function(t,n){r.apply(e,[t].concat(n))})}};var x=function(t,e){var n=function(){var n=this,r=Array.prototype.slice.call(arguments),i=r.pop();return t(e,function(t,e){t.apply(n,r.concat([e]))},i)};if(arguments.length>2){var r=Array.prototype.slice.call(arguments,2);return n.apply(this,r)}return n};a.applyEach=h(x),a.applyEachSeries=d(x),a.forever=function(t,e){function n(r){if(r){if(e)return e(r);throw r}t(n)}n()},"undefined"!=typeof t&&t.amd?t([],function(){return a}):"undefined"!=typeof n&&n.exports?n.exports=a:i.async=a}()},{__browserify_process:4}],14:[function(t,e){e.exports.BinarySearchTree=t("./server/bst"),e.exports.AVLTree=t("./server/avltree")},{"./server/avltree":15,"./server/bst":16}],15:[function(t,e){function n(t){this.tree=new r(t)}function r(t){t=t||{},this.left=null,this.right=null,this.parent=void 0!==t.parent?t.parent:null,t.hasOwnProperty("key")&&(this.key=t.key),this.data=t.hasOwnProperty("value")?[t.value]:[],this.unique=t.unique||!1,this.compareKeys=t.compareKeys||o.defaultCompareKeysFunction,this.checkValueEquality=t.checkValueEquality||o.defaultCheckValueEquality}var i=t("./bst"),o=t("./customUtils"),a=t("util");t("underscore"),a.inherits(r,i),n._AVLTree=r,r.prototype.checkHeightCorrect=function(){var t,e;if(this.hasOwnProperty("key")){if(this.left&&void 0===this.left.height)throw new Error("Undefined height for node "+this.left.key);if(this.right&&void 0===this.right.height)throw new Error("Undefined height for node "+this.right.key);if(void 0===this.height)throw new Error("Undefined height for node "+this.key);if(t=this.left?this.left.height:0,e=this.right?this.right.height:0,this.height!==1+Math.max(t,e))throw new Error("Height constraint failed for node "+this.key);this.left&&this.left.checkHeightCorrect(),this.right&&this.right.checkHeightCorrect()}},r.prototype.balanceFactor=function(){var t=this.left?this.left.height:0,e=this.right?this.right.height:0;return t-e},r.prototype.checkBalanceFactors=function(){if(Math.abs(this.balanceFactor())>1)throw new Error("Tree is unbalanced at node "+this.key);this.left&&this.left.checkBalanceFactors(),this.right&&this.right.checkBalanceFactors()},r.prototype.checkIsAVLT=function(){r.super_.prototype.checkIsBST.call(this),this.checkHeightCorrect(),this.checkBalanceFactors()},n.prototype.checkIsAVLT=function(){this.tree.checkIsAVLT()},r.prototype.rightRotation=function(){var t,e,n,r,i=this,o=this.left;return o?(t=o.right,i.parent?(o.parent=i.parent,i.parent.left===i?i.parent.left=o:i.parent.right=o):o.parent=null,o.right=i,i.parent=o,i.left=t,t&&(t.parent=i),e=o.left?o.left.height:0,n=t?t.height:0,r=i.right?i.right.height:0,i.height=Math.max(n,r)+1,o.height=Math.max(e,i.height)+1,o):this},r.prototype.leftRotation=function(){var t,e,n,r,i=this,o=this.right;return o?(t=o.left,i.parent?(o.parent=i.parent,i.parent.left===i?i.parent.left=o:i.parent.right=o):o.parent=null,o.left=i,i.parent=o,i.right=t,t&&(t.parent=i),e=i.left?i.left.height:0,n=t?t.height:0,r=o.right?o.right.height:0,i.height=Math.max(e,n)+1,o.height=Math.max(r,i.height)+1,o):this},r.prototype.rightTooSmall=function(){return this.balanceFactor()<=1?this:(this.left.balanceFactor()<0&&this.left.leftRotation(),this.rightRotation())},r.prototype.leftTooSmall=function(){return this.balanceFactor()>=-1?this:(this.right.balanceFactor()>0&&this.right.rightRotation(),this.leftRotation())},r.prototype.rebalanceAlongPath=function(t){var e,n,r=this;if(!this.hasOwnProperty("key"))return delete this.height,this;for(n=t.length-1;n>=0;n-=1)t[n].height=1+Math.max(t[n].left?t[n].left.height:0,t[n].right?t[n].right.height:0),t[n].balanceFactor()>1&&(e=t[n].rightTooSmall(),0===n&&(r=e)),t[n].balanceFactor()<-1&&(e=t[n].leftTooSmall(),0===n&&(r=e));return r},r.prototype.insert=function(t,e){var n=[],r=this;if(!this.hasOwnProperty("key"))return this.key=t,this.data.push(e),this.height=1,this;for(;;){if(0===r.compareKeys(r.key,t)){if(r.unique){var i=new Error("Can't insert key "+t+", it violates the unique constraint");throw i.key=t,i.errorType="uniqueViolated",i}return r.data.push(e),this}if(n.push(r),r.compareKeys(t,r.key)<0){if(!r.left){n.push(r.createLeftChild({key:t,value:e}));break}r=r.left}else{if(!r.right){n.push(r.createRightChild({key:t,value:e}));break}r=r.right}}return this.rebalanceAlongPath(n)},n.prototype.insert=function(t,e){var n=this.tree.insert(t,e);n&&(this.tree=n)},r.prototype.delete=function(t,e){var n,r=[],i=this,o=[];if(!this.hasOwnProperty("key"))return this;for(;;){if(0===i.compareKeys(t,i.key))break;if(o.push(i),i.compareKeys(t,i.key)<0){if(!i.left)return this;i=i.left}else{if(!i.right)return this;i=i.right}}if(i.data.length>1&&e)return i.data.forEach(function(t){i.checkValueEquality(t,e)||r.push(t)}),i.data=r,this;if(!i.left&&!i.right)return i===this?(delete i.key,i.data=[],delete i.height,this):(i.parent.left===i?i.parent.left=null:i.parent.right=null,this.rebalanceAlongPath(o));if(!i.left||!i.right)return n=i.left?i.left:i.right,i===this?(n.parent=null,n):(i.parent.left===i?(i.parent.left=n,n.parent=i.parent):(i.parent.right=n,n.parent=i.parent),this.rebalanceAlongPath(o));if(o.push(i),n=i.left,!n.right)return i.key=n.key,i.data=n.data,i.left=n.left,n.left&&(n.left.parent=i),this.rebalanceAlongPath(o);for(;;){if(!n.right)break;o.push(n),n=n.right}return i.key=n.key,i.data=n.data,n.parent.right=n.left,n.left&&(n.left.parent=n.parent),this.rebalanceAlongPath(o)},n.prototype.delete=function(t,e){var n=this.tree.delete(t,e);n&&(this.tree=n)},["getNumberOfKeys","search","betweenBounds","prettyPrint","executeOnEveryNode"].forEach(function(t){n.prototype[t]=function(){return this.tree[t].apply(this.tree,arguments)}}),e.exports=n},{"./bst":16,"./customUtils":17,underscore:19,util:3}],16:[function(t,e){function n(t){t=t||{},this.left=null,this.right=null,this.parent=void 0!==t.parent?t.parent:null,t.hasOwnProperty("key")&&(this.key=t.key),this.data=t.hasOwnProperty("value")?[t.value]:[],this.unique=t.unique||!1,this.compareKeys=t.compareKeys||i.defaultCompareKeysFunction,this.checkValueEquality=t.checkValueEquality||i.defaultCheckValueEquality}function r(t,e){var n;for(n=0;n<e.length;n+=1)t.push(e[n])}var i=t("./customUtils");n.prototype.getMaxKeyDescendant=function(){return this.right?this.right.getMaxKeyDescendant():this},n.prototype.getMaxKey=function(){return this.getMaxKeyDescendant().key},n.prototype.getMinKeyDescendant=function(){return this.left?this.left.getMinKeyDescendant():this},n.prototype.getMinKey=function(){return this.getMinKeyDescendant().key},n.prototype.checkAllNodesFullfillCondition=function(t){this.hasOwnProperty("key")&&(t(this.key,this.data),this.left&&this.left.checkAllNodesFullfillCondition(t),this.right&&this.right.checkAllNodesFullfillCondition(t))},n.prototype.checkNodeOrdering=function(){var t=this;this.hasOwnProperty("key")&&(this.left&&(this.left.checkAllNodesFullfillCondition(function(e){if(t.compareKeys(e,t.key)>=0)throw new Error("Tree with root "+t.key+" is not a binary search tree")}),this.left.checkNodeOrdering()),this.right&&(this.right.checkAllNodesFullfillCondition(function(e){if(t.compareKeys(e,t.key)<=0)throw new Error("Tree with root "+t.key+" is not a binary search tree")}),this.right.checkNodeOrdering()))},n.prototype.checkInternalPointers=function(){if(this.left){if(this.left.parent!==this)throw new Error("Parent pointer broken for key "+this.key);this.left.checkInternalPointers()}if(this.right){if(this.right.parent!==this)throw new Error("Parent pointer broken for key "+this.key);this.right.checkInternalPointers()}},n.prototype.checkIsBST=function(){if(this.checkNodeOrdering(),this.checkInternalPointers(),this.parent)throw new Error("The root shouldn't have a parent")},n.prototype.getNumberOfKeys=function(){var t;return this.hasOwnProperty("key")?(t=1,this.left&&(t+=this.left.getNumberOfKeys()),this.right&&(t+=this.right.getNumberOfKeys()),t):0},n.prototype.createSimilar=function(t){return t=t||{},t.unique=this.unique,t.compareKeys=this.compareKeys,t.checkValueEquality=this.checkValueEquality,new this.constructor(t)},n.prototype.createLeftChild=function(t){var e=this.createSimilar(t);return e.parent=this,this.left=e,e},n.prototype.createRightChild=function(t){var e=this.createSimilar(t);return e.parent=this,this.right=e,e},n.prototype.insert=function(t,e){if(!this.hasOwnProperty("key"))return this.key=t,this.data.push(e),void 0;if(0===this.compareKeys(this.key,t)){if(this.unique){var n=new Error("Can't insert key "+t+", it violates the unique constraint");throw n.key=t,n.errorType="uniqueViolated",n}return this.data.push(e),void 0}this.compareKeys(t,this.key)<0?this.left?this.left.insert(t,e):this.createLeftChild({key:t,value:e}):this.right?this.right.insert(t,e):this.createRightChild({key:t,value:e})},n.prototype.search=function(t){return this.hasOwnProperty("key")?0===this.compareKeys(this.key,t)?this.data:this.compareKeys(t,this.key)<0?this.left?this.left.search(t):[]:this.right?this.right.search(t):[]:[]},n.prototype.getLowerBoundMatcher=function(t){var e=this;return t.hasOwnProperty("$gt")||t.hasOwnProperty("$gte")?t.hasOwnProperty("$gt")&&t.hasOwnProperty("$gte")?0===e.compareKeys(t.$gte,t.$gt)?function(n){return e.compareKeys(n,t.$gt)>0}:e.compareKeys(t.$gte,t.$gt)>0?function(n){return e.compareKeys(n,t.$gte)>=0}:function(n){return e.compareKeys(n,t.$gt)>0}:t.hasOwnProperty("$gt")?function(n){return e.compareKeys(n,t.$gt)>0}:function(n){return e.compareKeys(n,t.$gte)>=0}:function(){return!0}},n.prototype.getUpperBoundMatcher=function(t){var e=this;return t.hasOwnProperty("$lt")||t.hasOwnProperty("$lte")?t.hasOwnProperty("$lt")&&t.hasOwnProperty("$lte")?0===e.compareKeys(t.$lte,t.$lt)?function(n){return e.compareKeys(n,t.$lt)<0}:e.compareKeys(t.$lte,t.$lt)<0?function(n){return e.compareKeys(n,t.$lte)<=0}:function(n){return e.compareKeys(n,t.$lt)<0}:t.hasOwnProperty("$lt")?function(n){return e.compareKeys(n,t.$lt)<0}:function(n){return e.compareKeys(n,t.$lte)<=0}:function(){return!0}},n.prototype.betweenBounds=function(t,e,n){var i=[];return this.hasOwnProperty("key")?(e=e||this.getLowerBoundMatcher(t),n=n||this.getUpperBoundMatcher(t),e(this.key)&&this.left&&r(i,this.left.betweenBounds(t,e,n)),e(this.key)&&n(this.key)&&r(i,this.data),n(this.key)&&this.right&&r(i,this.right.betweenBounds(t,e,n)),i):[]},n.prototype.deleteIfLeaf=function(){return this.left||this.right?!1:this.parent?(this.parent.left===this?this.parent.left=null:this.parent.right=null,!0):(delete this.key,this.data=[],!0)},n.prototype.deleteIfOnlyOneChild=function(){var t;return this.left&&!this.right&&(t=this.left),!this.left&&this.right&&(t=this.right),t?this.parent?(this.parent.left===this?(this.parent.left=t,t.parent=this.parent):(this.parent.right=t,t.parent=this.parent),!0):(this.key=t.key,this.data=t.data,this.left=null,t.left&&(this.left=t.left,t.left.parent=this),this.right=null,t.right&&(this.right=t.right,t.right.parent=this),!0):!1},n.prototype.delete=function(t,e){var n,r=[],i=this;if(this.hasOwnProperty("key")){if(this.compareKeys(t,this.key)<0)return this.left&&this.left.delete(t,e),void 0;if(this.compareKeys(t,this.key)>0)return this.right&&this.right.delete(t,e),void 0;if(0!==!this.compareKeys(t,this.key))return this.data.length>1&&void 0!==e?(this.data.forEach(function(t){i.checkValueEquality(t,e)||r.push(t)}),i.data=r,void 0):(this.deleteIfLeaf()||this.deleteIfOnlyOneChild()||(Math.random()>=.5?(n=this.left.getMaxKeyDescendant(),this.key=n.key,this.data=n.data,this===n.parent?(this.left=n.left,n.left&&(n.left.parent=n.parent)):(n.parent.right=n.left,n.left&&(n.left.parent=n.parent))):(n=this.right.getMinKeyDescendant(),this.key=n.key,this.data=n.data,this===n.parent?(this.right=n.right,n.right&&(n.right.parent=n.parent)):(n.parent.left=n.right,n.right&&(n.right.parent=n.parent)))),void 0)}},n.prototype.executeOnEveryNode=function(t){this.left&&this.left.executeOnEveryNode(t),t(this),this.right&&this.right.executeOnEveryNode(t)},n.prototype.prettyPrint=function(t,e){e=e||"",console.log(e+"* "+this.key),t&&console.log(e+"* "+this.data),(this.left||this.right)&&(this.left?this.left.prettyPrint(t,e+"  "):console.log(e+"  *"),this.right?this.right.prettyPrint(t,e+"  "):console.log(e+"  *"))},e.exports=n},{"./customUtils":17}],17:[function(t,e){function n(t){var e,r;return 0===t?[]:1===t?[0]:(e=n(t-1),r=Math.floor(Math.random()*t),e.splice(r,0,t-1),e)}function r(t,e){if(e>t)return-1;if(t>e)return 1;if(t===e)return 0;var n=new Error("Couldn't compare elements");throw n.a=t,n.b=e,n}function i(t,e){return t===e}e.exports.getRandomArray=n,e.exports.defaultCompareKeysFunction=r,e.exports.defaultCheckValueEquality=i},{}],18:[function(e,n,r){var i=e("__browserify_process"),o=self;!function(){var t,e,n,r;!function(){var i={},o={};t=function(t,e,n){i[t]={deps:e,callback:n}},r=n=e=function(t){function n(e){if("."!==e.charAt(0))return e;for(var n=e.split("/"),r=t.split("/").slice(0,-1),i=0,o=n.length;o>i;i++){var a=n[i];if(".."===a)r.pop();else{if("."===a)continue;r.push(a)}}return r.join("/")}if(r._eak_seen=i,o[t])return o[t];if(o[t]={},!i[t])throw new Error("Could not find module "+t);for(var a,u=i[t],s=u.deps,c=u.callback,f=[],l=0,h=s.length;h>l;l++)"exports"===s[l]?f.push(a={}):f.push(e(n(s[l])));var p=c.apply(this,f);return o[t]=a||p}}(),t("promise/all",["./utils","exports"],function(t,e){"use strict";function n(t){var e=this;if(!r(t))throw new TypeError("You must pass an array to all.");return new e(function(e,n){function r(t){return function(e){o(t,e)}}function o(t,n){u[t]=n,0===--s&&e(u)}var a,u=[],s=t.length;0===s&&e([]);for(var c=0;c<t.length;c++)a=t[c],a&&i(a.then)?a.then(r(c),n):o(c,a)})}var r=t.isArray,i=t.isFunction;e.all=n}),t("promise/asap",["exports"],function(t){"use strict";function e(){return function(){i.nextTick(a)}}function n(){var t=0,e=new f(a),n=document.createTextNode("");return e.observe(n,{characterData:!0}),function(){n.data=t=++t%2}}function r(){return function(){l.setTimeout(a,1)}}function a(){for(var t=0;t<h.length;t++){var e=h[t],n=e[0],r=e[1];n(r)}h=[]}function u(t,e){var n=h.push([t,e]);1===n&&s()}var s,c="undefined"!=typeof window?window:{},f=c.MutationObserver||c.WebKitMutationObserver,l="undefined"!=typeof o?o:void 0===this?window:this,h=[];s="undefined"!=typeof i&&"[object process]"==={}.toString.call(i)?e():f?n():r(),t.asap=u}),t("promise/config",["exports"],function(t){"use strict";function e(t,e){return 2!==arguments.length?n[t]:(n[t]=e,void 0)}var n={instrument:!1};t.config=n,t.configure=e}),t("promise/polyfill",["./promise","./utils","exports"],function(t,e,n){"use strict";function r(){var t;t="undefined"!=typeof o?o:"undefined"!=typeof window&&window.document?window:self;var e="Promise"in t&&"resolve"in t.Promise&&"reject"in t.Promise&&"all"in t.Promise&&"race"in t.Promise&&function(){var e;return new t.Promise(function(t){e=t}),a(e)}();e||(t.Promise=i)}var i=t.Promise,a=e.isFunction;n.polyfill=r}),t("promise/promise",["./config","./utils","./all","./race","./resolve","./reject","./asap","exports"],function(t,e,n,r,i,o,a,u){"use strict";function s(t){if(!_(t))throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");if(!(this instanceof s))throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");this._subscribers=[],c(t,this)}function c(t,e){function n(t){d(e,t)}function r(t){v(e,t)}try{t(n,r)}catch(i){r(i)}}function f(t,e,n,r){var i,o,a,u,s=_(n);if(s)try{i=n(r),a=!0}catch(c){u=!0,o=c}else i=r,a=!0;p(e,i)||(s&&a?d(e,i):u?v(e,o):t===I?d(e,i):t===$&&v(e,i))}function l(t,e,n,r){var i=t._subscribers,o=i.length;i[o]=e,i[o+I]=n,i[o+$]=r}function h(t,e){for(var n,r,i=t._subscribers,o=t._detail,a=0;a<i.length;a+=3)n=i[a],r=i[a+e],f(e,n,r,o);t._subscribers=null}function p(t,e){var n,r=null;try{if(t===e)throw new TypeError("A promises callback cannot return that same promise.");if(w(e)&&(r=e.then,_(r)))return r.call(e,function(r){return n?!0:(n=!0,e!==r?d(t,r):y(t,r),void 0)},function(e){return n?!0:(n=!0,v(t,e),void 0)}),!0}catch(i){return n?!0:(v(t,i),!0)}return!1}function d(t,e){t===e?y(t,e):p(t,e)||y(t,e)}function y(t,e){t._state===S&&(t._state=j,t._detail=e,b.async(g,t))}function v(t,e){t._state===S&&(t._state=j,t._detail=e,b.async(m,t))}function g(t){h(t,t._state=I)}function m(t){h(t,t._state=$)}var b=t.config;t.configure;var w=e.objectOrFunction,_=e.isFunction;e.now;var k=n.all,x=r.race,E=i.resolve,A=o.reject,O=a.asap;b.async=O;var S=void 0,j=0,I=1,$=2;s.prototype={constructor:s,_state:void 0,_detail:void 0,_subscribers:void 0,then:function(t,e){var n=this,r=new this.constructor(function(){});if(this._state){var i=arguments;b.async(function(){f(n._state,r,i[n._state-1],n._detail)})}else l(this,r,t,e);return r},"catch":function(t){return this.then(null,t)}},s.all=k,s.race=x,s.resolve=E,s.reject=A,u.Promise=s}),t("promise/race",["./utils","exports"],function(t,e){"use strict";function n(t){var e=this;if(!r(t))throw new TypeError("You must pass an array to race.");return new e(function(e,n){for(var r,i=0;i<t.length;i++)r=t[i],r&&"function"==typeof r.then?r.then(e,n):e(r)})}var r=t.isArray;e.race=n}),t("promise/reject",["exports"],function(t){"use strict";function e(t){var e=this;return new e(function(e,n){n(t)})}t.reject=e}),t("promise/resolve",["exports"],function(t){"use strict";function e(t){if(t&&"object"==typeof t&&t.constructor===this)return t;var e=this;return new e(function(e){e(t)})}t.resolve=e}),t("promise/utils",["exports"],function(t){"use strict";function e(t){return n(t)||"object"==typeof t&&null!==t}function n(t){return"function"==typeof t}function r(t){return"[object Array]"===Object.prototype.toString.call(t)}var i=Date.now||function(){return(new Date).getTime()};t.objectOrFunction=e,t.isFunction=n,t.isArray=r,t.now=i}),e("promise/polyfill").polyfill()}(),function(e,i){"object"==typeof r&&"object"==typeof n?n.exports=i():"function"==typeof t&&t.amd?t([],i):"object"==typeof r?r.localforage=i():e.localforage=i()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return t[r].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){"use strict";function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}e.__esModule=!0,function(){function t(t,e){t[e]=function(){var n=arguments;return t.ready().then(function(){return t[e].apply(t,n)})}}function i(){for(var t=1;t<arguments.length;t++){var e=arguments[t];if(e)for(var n in e)e.hasOwnProperty(n)&&(arguments[0][n]=h(e[n])?e[n].slice():e[n])}return arguments[0]}function o(t){for(var e in u)if(u.hasOwnProperty(e)&&u[e]===t)return!0;return!1}var a={},u={INDEXEDDB:"asyncStorage",LOCALSTORAGE:"localStorageWrapper",WEBSQL:"webSQLStorage"},s=[u.INDEXEDDB,u.WEBSQL,u.LOCALSTORAGE],c=["clear","getItem","iterate","key","keys","length","removeItem","setItem"],f={description:"",driver:s.slice(),name:"localforage",size:4980736,storeName:"keyvaluepairs",version:1},l=function(t){var e=e||t.indexedDB||t.webkitIndexedDB||t.mozIndexedDB||t.OIndexedDB||t.msIndexedDB,n={};return n[u.WEBSQL]=!!t.openDatabase,n[u.INDEXEDDB]=!!function(){if("undefined"!=typeof t.openDatabase&&t.navigator&&t.navigator.userAgent&&/Safari/.test(t.navigator.userAgent)&&!/Chrome/.test(t.navigator.userAgent))return!1;try{return e&&"function"==typeof e.open&&"undefined"!=typeof t.IDBKeyRange}catch(n){return!1}}(),n[u.LOCALSTORAGE]=!!function(){try{return t.localStorage&&"setItem"in t.localStorage&&t.localStorage.setItem}catch(e){return!1}}(),n}(this),h=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)},p=function(){function e(t){r(this,e),this.INDEXEDDB=u.INDEXEDDB,this.LOCALSTORAGE=u.LOCALSTORAGE,this.WEBSQL=u.WEBSQL,this._defaultConfig=i({},f),this._config=i({},this._defaultConfig,t),this._driverSet=null,this._initDriver=null,this._ready=!1,this._dbInfo=null,this._wrapLibraryMethodsWithReady(),this.setDriver(this._config.driver)}return e.prototype.config=function(t){if("object"==typeof t){if(this._ready)return new Error("Can't call config() after localforage has been used.");for(var e in t)"storeName"===e&&(t[e]=t[e].replace(/\W/g,"_")),this._config[e]=t[e];return"driver"in t&&t.driver&&this.setDriver(this._config.driver),!0}return"string"==typeof t?this._config[t]:this._config},e.prototype.defineDriver=function(t,e,n){var r=new Promise(function(e,n){try{var r=t._driver,i=new Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver"),u=new Error("Custom driver name already in use: "+t._driver);if(!t._driver)return n(i),void 0;if(o(t._driver))return n(u),void 0;for(var s=c.concat("_initStorage"),f=0;f<s.length;f++){var h=s[f];if(!h||!t[h]||"function"!=typeof t[h])return n(i),void 0}var p=Promise.resolve(!0);"_support"in t&&(p=t._support&&"function"==typeof t._support?t._support():Promise.resolve(!!t._support)),p.then(function(n){l[r]=n,a[r]=t,e()},n)}catch(d){n(d)}});return r.then(e,n),r},e.prototype.driver=function(){return this._driver||null},e.prototype.getDriver=function(t,e,r){var i=this,u=function(){if(o(t))switch(t){case i.INDEXEDDB:return new Promise(function(t){t(n(1))});case i.LOCALSTORAGE:return new Promise(function(t){t(n(2))});case i.WEBSQL:return new Promise(function(t){t(n(4))})}else if(a[t])return Promise.resolve(a[t]);return Promise.reject(new Error("Driver not found."))}();return u.then(e,r),u},e.prototype.getSerializer=function(t){var e=new Promise(function(t){t(n(3))});return t&&"function"==typeof t&&e.then(function(e){t(e)}),e},e.prototype.ready=function(t){var e=this,n=e._driverSet.then(function(){return null===e._ready&&(e._ready=e._initDriver()),e._ready});return n.then(t,t),n},e.prototype.setDriver=function(t,e,n){function r(){o._config.driver=o.driver()}function i(t){return function(){function e(){for(;n<t.length;){var i=t[n];return n++,o._dbInfo=null,o._ready=null,o.getDriver(i).then(function(t){return o._extend(t),r(),o._ready=o._initStorage(o._config),o._ready})["catch"](e)}r();var a=new Error("No available storage method found.");return o._driverSet=Promise.reject(a),o._driverSet}var n=0;return e()}}var o=this;h(t)||(t=[t]);var a=this._getSupportedDrivers(t),u=null!==this._driverSet?this._driverSet["catch"](function(){return Promise.resolve()}):Promise.resolve();return this._driverSet=u.then(function(){var t=a[0];return o._dbInfo=null,o._ready=null,o.getDriver(t).then(function(t){o._driver=t._driver,r(),o._wrapLibraryMethodsWithReady(),o._initDriver=i(a)})})["catch"](function(){r();var t=new Error("No available storage method found.");return o._driverSet=Promise.reject(t),o._driverSet}),this._driverSet.then(e,n),this._driverSet},e.prototype.supports=function(t){return!!l[t]},e.prototype._extend=function(t){i(this,t)},e.prototype._getSupportedDrivers=function(t){for(var e=[],n=0,r=t.length;r>n;n++){var i=t[n];this.supports(i)&&e.push(i)}return e},e.prototype._wrapLibraryMethodsWithReady=function(){for(var e=0;e<c.length;e++)t(this,c[e])},e.prototype.createInstance=function(t){return new e(t)},e}(),d=new p;e["default"]=d}.call("undefined"!=typeof window?window:self),t.exports=e["default"]},function(t,e){"use strict";e.__esModule=!0,function(){function t(t,e){t=t||[],e=e||{};try{return new Blob(t,e)}catch(n){if("TypeError"!==n.name)throw n;for(var r=x.BlobBuilder||x.MSBlobBuilder||x.MozBlobBuilder||x.WebKitBlobBuilder,i=new r,o=0;o<t.length;o+=1)i.append(t[o]);return i.getBlob(e.type)}}function n(t){for(var e=t.length,n=new ArrayBuffer(e),r=new Uint8Array(n),i=0;e>i;i++)r[i]=t.charCodeAt(i);return n}function r(t){return new Promise(function(e,n){var r=new XMLHttpRequest;r.open("GET",t),r.withCredentials=!0,r.responseType="arraybuffer",r.onreadystatechange=function(){return 4===r.readyState?200===r.status?e({response:r.response,type:r.getResponseHeader("Content-Type")}):(n({status:r.status,response:r.response}),void 0):void 0},r.send()})}function i(e){return new Promise(function(n,i){var o=t([""],{type:"image/png"}),a=e.transaction([S],"readwrite");a.objectStore(S).put(o,"key"),a.oncomplete=function(){var t=e.transaction([S],"readwrite"),o=t.objectStore(S).get("key");o.onerror=i,o.onsuccess=function(t){var e=t.target.result,i=URL.createObjectURL(e);r(i).then(function(t){n(!(!t||"image/png"!==t.type))},function(){n(!1)}).then(function(){URL.revokeObjectURL(i)})}}})["catch"](function(){return!1})}function o(t){return"boolean"==typeof A?Promise.resolve(A):i(t).then(function(t){return A=t})}function a(t){return new Promise(function(e,n){var r=new FileReader;r.onerror=n,r.onloadend=function(n){var r=btoa(n.target.result||"");e({__local_forage_encoded_blob:!0,data:r,type:t.type})},r.readAsBinaryString(t)})}function u(e){var r=n(atob(e.data));return t([r],{type:e.type})}function s(t){return t&&t.__local_forage_encoded_blob}function c(t){function e(){return Promise.resolve()}var n=this,r={db:null};if(t)for(var i in t)r[i]=t[i];O||(O={});var o=O[r.name];o||(o={forages:[],db:null},O[r.name]=o),o.forages.push(this);for(var a=[],u=0;u<o.forages.length;u++){var s=o.forages[u];s!==this&&a.push(s.ready()["catch"](e))}var c=o.forages.slice(0);return Promise.all(a).then(function(){return r.db=o.db,f(r)}).then(function(t){return r.db=t,p(r,n._defaultConfig.version)?l(r):t}).then(function(t){r.db=o.db=t,n._dbInfo=r;for(var e in c){var i=c[e];i!==n&&(i._dbInfo.db=r.db,i._dbInfo.version=r.version)}})}function f(t){return h(t,!1)}function l(t){return h(t,!0)}function h(t,e){return new Promise(function(n,r){if(t.db){if(!e)return n(t.db);t.db.close()}var i=[t.name];e&&i.push(t.version);var o=E.open.apply(E,i);e&&(o.onupgradeneeded=function(e){var n=o.result;try{n.createObjectStore(t.storeName),e.oldVersion<=1&&n.createObjectStore(S)}catch(r){if("ConstraintError"!==r.name)throw r;x.console.warn('The database "'+t.name+'"'+" has been upgraded from version "+e.oldVersion+" to version "+e.newVersion+', but the storage "'+t.storeName+'" already exists.')}}),o.onerror=function(){r(o.error)},o.onsuccess=function(){n(o.result)}})}function p(t,e){if(!t.db)return!0;var n=!t.db.objectStoreNames.contains(t.storeName),r=t.version<t.db.version,i=t.version>t.db.version;if(r&&(t.version!==e&&x.console.warn('The database "'+t.name+'"'+" can't be downgraded from version "+t.db.version+" to version "+t.version+"."),t.version=t.db.version),i||n){if(n){var o=t.db.version+1;o>t.version&&(t.version=o)}return!0}return!1}function d(t,e){var n=this;"string"!=typeof t&&(x.console.warn(t+" used as a key, but it is not a string."),t=String(t));var r=new Promise(function(e,r){n.ready().then(function(){var i=n._dbInfo,o=i.db.transaction(i.storeName,"readonly").objectStore(i.storeName),a=o.get(t);a.onsuccess=function(){var t=a.result;void 0===t&&(t=null),s(t)&&(t=u(t)),e(t)},a.onerror=function(){r(a.error)}})["catch"](r)});return k(r,e),r}function y(t,e){var n=this,r=new Promise(function(e,r){n.ready().then(function(){var i=n._dbInfo,o=i.db.transaction(i.storeName,"readonly").objectStore(i.storeName),a=o.openCursor(),c=1;a.onsuccess=function(){var n=a.result;if(n){var r=n.value;s(r)&&(r=u(r));var i=t(r,n.key,c++);void 0!==i?e(i):n["continue"]()}else e()},a.onerror=function(){r(a.error)}})["catch"](r)});return k(r,e),r}function v(t,e,n){var r=this;"string"!=typeof t&&(x.console.warn(t+" used as a key, but it is not a string."),t=String(t));var i=new Promise(function(n,i){var u;r.ready().then(function(){return u=r._dbInfo,o(u.db)}).then(function(t){return!t&&e instanceof Blob?a(e):e}).then(function(e){var r=u.db.transaction(u.storeName,"readwrite"),o=r.objectStore(u.storeName);null===e&&(e=void 0);var a=o.put(e,t);r.oncomplete=function(){void 0===e&&(e=null),n(e)},r.onabort=r.onerror=function(){var t=a.error?a.error:a.transaction.error;i(t)}})["catch"](i)});return k(i,n),i}function g(t,e){var n=this;"string"!=typeof t&&(x.console.warn(t+" used as a key, but it is not a string."),t=String(t));var r=new Promise(function(e,r){n.ready().then(function(){var i=n._dbInfo,o=i.db.transaction(i.storeName,"readwrite"),a=o.objectStore(i.storeName),u=a["delete"](t);o.oncomplete=function(){e()},o.onerror=function(){r(u.error)},o.onabort=function(){var t=u.error?u.error:u.transaction.error;r(t)}})["catch"](r)});return k(r,e),r}function m(t){var e=this,n=new Promise(function(t,n){e.ready().then(function(){var r=e._dbInfo,i=r.db.transaction(r.storeName,"readwrite"),o=i.objectStore(r.storeName),a=o.clear();i.oncomplete=function(){t()},i.onabort=i.onerror=function(){var t=a.error?a.error:a.transaction.error;n(t)}})["catch"](n)});return k(n,t),n}function b(t){var e=this,n=new Promise(function(t,n){e.ready().then(function(){var r=e._dbInfo,i=r.db.transaction(r.storeName,"readonly").objectStore(r.storeName),o=i.count();o.onsuccess=function(){t(o.result)},o.onerror=function(){n(o.error)}})["catch"](n)});return k(n,t),n}function w(t,e){var n=this,r=new Promise(function(e,r){return 0>t?(e(null),void 0):(n.ready().then(function(){var i=n._dbInfo,o=i.db.transaction(i.storeName,"readonly").objectStore(i.storeName),a=!1,u=o.openCursor();u.onsuccess=function(){var n=u.result;return n?(0===t?e(n.key):a?e(n.key):(a=!0,n.advance(t)),void 0):(e(null),void 0)},u.onerror=function(){r(u.error)}})["catch"](r),void 0)});return k(r,e),r}function _(t){var e=this,n=new Promise(function(t,n){e.ready().then(function(){var r=e._dbInfo,i=r.db.transaction(r.storeName,"readonly").objectStore(r.storeName),o=i.openCursor(),a=[];o.onsuccess=function(){var e=o.result;return e?(a.push(e.key),e["continue"](),void 0):(t(a),void 0)},o.onerror=function(){n(o.error)}})["catch"](n)});return k(n,t),n}function k(t,e){e&&t.then(function(t){e(null,t)},function(t){e(t)})}var x=this,E=E||this.indexedDB||this.webkitIndexedDB||this.mozIndexedDB||this.OIndexedDB||this.msIndexedDB;if(E){var A,O,S="local-forage-detect-blob-support",j={_driver:"asyncStorage",_initStorage:c,iterate:y,getItem:d,setItem:v,removeItem:g,clear:m,length:b,key:w,keys:_};e["default"]=j}}.call("undefined"!=typeof window?window:self),t.exports=e["default"]},function(t,e,n){"use strict";e.__esModule=!0,function(){function t(t){var e=this,r={};if(t)for(var i in t)r[i]=t[i];return r.keyPrefix=r.name+"/",r.storeName!==e._defaultConfig.storeName&&(r.keyPrefix+=r.storeName+"/"),e._dbInfo=r,new Promise(function(t){t(n(3))}).then(function(t){return r.serializer=t,Promise.resolve()})}function r(t){var e=this,n=e.ready().then(function(){for(var t=e._dbInfo.keyPrefix,n=p.length-1;n>=0;n--){var r=p.key(n);0===r.indexOf(t)&&p.removeItem(r)}});return l(n,t),n}function i(t,e){var n=this;"string"!=typeof t&&(h.console.warn(t+" used as a key, but it is not a string."),t=String(t));var r=n.ready().then(function(){var e=n._dbInfo,r=p.getItem(e.keyPrefix+t);return r&&(r=e.serializer.deserialize(r)),r});return l(r,e),r}function o(t,e){var n=this,r=n.ready().then(function(){for(var e=n._dbInfo,r=e.keyPrefix,i=r.length,o=p.length,a=1,u=0;o>u;u++){var s=p.key(u);if(0===s.indexOf(r)){var c=p.getItem(s);if(c&&(c=e.serializer.deserialize(c)),c=t(c,s.substring(i),a++),void 0!==c)return c}}});return l(r,e),r}function a(t,e){var n=this,r=n.ready().then(function(){var e,r=n._dbInfo;try{e=p.key(t)}catch(i){e=null}return e&&(e=e.substring(r.keyPrefix.length)),e});return l(r,e),r}function u(t){var e=this,n=e.ready().then(function(){for(var t=e._dbInfo,n=p.length,r=[],i=0;n>i;i++)0===p.key(i).indexOf(t.keyPrefix)&&r.push(p.key(i).substring(t.keyPrefix.length));return r});return l(n,t),n}function s(t){var e=this,n=e.keys().then(function(t){return t.length});return l(n,t),n}function c(t,e){var n=this;"string"!=typeof t&&(h.console.warn(t+" used as a key, but it is not a string."),t=String(t));var r=n.ready().then(function(){var e=n._dbInfo;p.removeItem(e.keyPrefix+t)});return l(r,e),r}function f(t,e,n){var r=this;"string"!=typeof t&&(h.console.warn(t+" used as a key, but it is not a string."),t=String(t));var i=r.ready().then(function(){void 0===e&&(e=null);var n=e;return new Promise(function(i,o){var a=r._dbInfo;a.serializer.serialize(e,function(e,r){if(r)o(r);else try{p.setItem(a.keyPrefix+t,e),i(n)}catch(u){("QuotaExceededError"===u.name||"NS_ERROR_DOM_QUOTA_REACHED"===u.name)&&o(u),o(u)}})})});return l(i,n),i}function l(t,e){e&&t.then(function(t){e(null,t)},function(t){e(t)})}var h=this,p=null;try{if(!(this.localStorage&&"setItem"in this.localStorage))return;p=this.localStorage}catch(d){return}var y={_driver:"localStorageWrapper",_initStorage:t,iterate:o,getItem:i,setItem:f,removeItem:c,clear:r,length:s,key:a,keys:u};e["default"]=y}.call("undefined"!=typeof window?window:self),t.exports=e["default"]},function(t,e){"use strict";e.__esModule=!0,function(){function t(t,e){t=t||[],e=e||{};try{return new Blob(t,e)}catch(n){if("TypeError"!==n.name)throw n;for(var r=x.BlobBuilder||x.MSBlobBuilder||x.MozBlobBuilder||x.WebKitBlobBuilder,i=new r,o=0;o<t.length;o+=1)i.append(t[o]);return i.getBlob(e.type)}}function n(t,e){var n="";if(t&&(n=t.toString()),t&&("[object ArrayBuffer]"===t.toString()||t.buffer&&"[object ArrayBuffer]"===t.buffer.toString())){var r,i=c;t instanceof ArrayBuffer?(r=t,i+=l):(r=t.buffer,"[object Int8Array]"===n?i+=p:"[object Uint8Array]"===n?i+=d:"[object Uint8ClampedArray]"===n?i+=y:"[object Int16Array]"===n?i+=v:"[object Uint16Array]"===n?i+=m:"[object Int32Array]"===n?i+=g:"[object Uint32Array]"===n?i+=b:"[object Float32Array]"===n?i+=w:"[object Float64Array]"===n?i+=_:e(new Error("Failed to get type for BinaryArray"))),e(i+o(r))}else if("[object Blob]"===n){var a=new FileReader;a.onload=function(){var n=u+t.type+"~"+o(this.result);e(c+h+n)},a.readAsArrayBuffer(t)}else try{e(JSON.stringify(t))}catch(s){console.error("Couldn't convert value into a JSON string: ",t),e(null,s)}}function r(e){if(e.substring(0,f)!==c)return JSON.parse(e);var n,r=e.substring(k),o=e.substring(f,k);if(o===h&&s.test(r)){var a=r.match(s);n=a[1],r=r.substring(a[0].length)}var u=i(r);switch(o){case l:return u;case h:return t([u],{type:n});case p:return new Int8Array(u);case d:return new Uint8Array(u);case y:return new Uint8ClampedArray(u);case v:return new Int16Array(u);case m:return new Uint16Array(u);case g:return new Int32Array(u);case b:return new Uint32Array(u);case w:return new Float32Array(u);case _:return new Float64Array(u);default:throw new Error("Unkown type: "+o)}}function i(t){var e,n,r,i,o,u=.75*t.length,s=t.length,c=0;"="===t[t.length-1]&&(u--,"="===t[t.length-2]&&u--);var f=new ArrayBuffer(u),l=new Uint8Array(f);for(e=0;s>e;e+=4)n=a.indexOf(t[e]),r=a.indexOf(t[e+1]),i=a.indexOf(t[e+2]),o=a.indexOf(t[e+3]),l[c++]=n<<2|r>>4,l[c++]=(15&r)<<4|i>>2,l[c++]=(3&i)<<6|63&o;return f}function o(t){var e,n=new Uint8Array(t),r="";for(e=0;e<n.length;e+=3)r+=a[n[e]>>2],r+=a[(3&n[e])<<4|n[e+1]>>4],r+=a[(15&n[e+1])<<2|n[e+2]>>6],r+=a[63&n[e+2]];return 2===n.length%3?r=r.substring(0,r.length-1)+"=":1===n.length%3&&(r=r.substring(0,r.length-2)+"=="),r}var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",u="~~local_forage_type~",s=/^~~local_forage_type~([^~]+)~/,c="__lfsc__:",f=c.length,l="arbf",h="blob",p="si08",d="ui08",y="uic8",v="si16",g="si32",m="ur16",b="ui32",w="fl32",_="fl64",k=f+l.length,x=this,E={serialize:n,deserialize:r,stringToBuffer:i,bufferToString:o};e["default"]=E}.call("undefined"!=typeof window?window:self),t.exports=e["default"]},function(t,e,n){"use strict";e.__esModule=!0,function(){function t(t){var e=this,r={db:null};if(t)for(var i in t)r[i]="string"!=typeof t[i]?t[i].toString():t[i];var o=new Promise(function(n,i){try{r.db=p(r.name,String(r.version),r.description,r.size)}catch(o){return e.setDriver(e.LOCALSTORAGE).then(function(){return e._initStorage(t)}).then(n)["catch"](i)}r.db.transaction(function(t){t.executeSql("CREATE TABLE IF NOT EXISTS "+r.storeName+" (id INTEGER PRIMARY KEY, key unique, value)",[],function(){e._dbInfo=r,n()},function(t,e){i(e)})})});return new Promise(function(t){t(n(3))}).then(function(t){return r.serializer=t,o})}function r(t,e){var n=this;"string"!=typeof t&&(h.console.warn(t+" used as a key, but it is not a string."),t=String(t));var r=new Promise(function(e,r){n.ready().then(function(){var i=n._dbInfo;i.db.transaction(function(n){n.executeSql("SELECT * FROM "+i.storeName+" WHERE key = ? LIMIT 1",[t],function(t,n){var r=n.rows.length?n.rows.item(0).value:null;r&&(r=i.serializer.deserialize(r)),e(r)},function(t,e){r(e)})})})["catch"](r)});return l(r,e),r}function i(t,e){var n=this,r=new Promise(function(e,r){n.ready().then(function(){var i=n._dbInfo;i.db.transaction(function(n){n.executeSql("SELECT * FROM "+i.storeName,[],function(n,r){for(var o=r.rows,a=o.length,u=0;a>u;u++){var s=o.item(u),c=s.value;if(c&&(c=i.serializer.deserialize(c)),c=t(c,s.key,u+1),void 0!==c)return e(c),void 0}e()},function(t,e){r(e)})})})["catch"](r)});return l(r,e),r}function o(t,e,n){var r=this;"string"!=typeof t&&(h.console.warn(t+" used as a key, but it is not a string."),t=String(t));var i=new Promise(function(n,i){r.ready().then(function(){void 0===e&&(e=null);var o=e,a=r._dbInfo;a.serializer.serialize(e,function(e,r){r?i(r):a.db.transaction(function(r){r.executeSql("INSERT OR REPLACE INTO "+a.storeName+" (key, value) VALUES (?, ?)",[t,e],function(){n(o)},function(t,e){i(e)})},function(t){t.code===t.QUOTA_ERR&&i(t)})})})["catch"](i)});return l(i,n),i}function a(t,e){var n=this;"string"!=typeof t&&(h.console.warn(t+" used as a key, but it is not a string."),t=String(t));var r=new Promise(function(e,r){n.ready().then(function(){var i=n._dbInfo;i.db.transaction(function(n){n.executeSql("DELETE FROM "+i.storeName+" WHERE key = ?",[t],function(){e()},function(t,e){r(e)})})})["catch"](r)});return l(r,e),r}function u(t){var e=this,n=new Promise(function(t,n){e.ready().then(function(){var r=e._dbInfo;r.db.transaction(function(e){e.executeSql("DELETE FROM "+r.storeName,[],function(){t()},function(t,e){n(e)})})})["catch"](n)});return l(n,t),n}function s(t){var e=this,n=new Promise(function(t,n){e.ready().then(function(){var r=e._dbInfo;r.db.transaction(function(e){e.executeSql("SELECT COUNT(key) as c FROM "+r.storeName,[],function(e,n){var r=n.rows.item(0).c;t(r)},function(t,e){n(e)})})})["catch"](n)});return l(n,t),n}function c(t,e){var n=this,r=new Promise(function(e,r){n.ready().then(function(){var i=n._dbInfo;i.db.transaction(function(n){n.executeSql("SELECT key FROM "+i.storeName+" WHERE id = ? LIMIT 1",[t+1],function(t,n){var r=n.rows.length?n.rows.item(0).key:null;e(r)},function(t,e){r(e)})})})["catch"](r)});return l(r,e),r}function f(t){var e=this,n=new Promise(function(t,n){e.ready().then(function(){var r=e._dbInfo;r.db.transaction(function(e){e.executeSql("SELECT key FROM "+r.storeName,[],function(e,n){for(var r=[],i=0;i<n.rows.length;i++)r.push(n.rows.item(i).key);t(r)},function(t,e){n(e)})})})["catch"](n)});return l(n,t),n}function l(t,e){e&&t.then(function(t){e(null,t)},function(t){e(t)})}var h=this,p=this.openDatabase;if(p){var d={_driver:"webSQLStorage",_initStorage:t,iterate:i,getItem:r,setItem:o,removeItem:a,clear:u,length:s,key:c,keys:f};e["default"]=d}}.call("undefined"!=typeof window?window:self),t.exports=e["default"]}])})},{__browserify_process:4}],19:[function(t,e,n){!function(){var t=this,r=t._,i={},o=Array.prototype,a=Object.prototype,u=Function.prototype,s=o.push,c=o.slice,f=o.concat,l=a.toString,h=a.hasOwnProperty,p=o.forEach,d=o.map,y=o.reduce,v=o.reduceRight,g=o.filter,m=o.every,b=o.some,w=o.indexOf,_=o.lastIndexOf,k=Array.isArray,x=Object.keys,E=u.bind,A=function(t){return t instanceof A?t:this instanceof A?(this._wrapped=t,void 0):new A(t)};"undefined"!=typeof n?("undefined"!=typeof e&&e.exports&&(n=e.exports=A),n._=A):t._=A,A.VERSION="1.4.4";var O=A.each=A.forEach=function(t,e,n){if(null!=t)if(p&&t.forEach===p)t.forEach(e,n);else if(t.length===+t.length){for(var r=0,o=t.length;o>r;r++)if(e.call(n,t[r],r,t)===i)return}else for(var a in t)if(A.has(t,a)&&e.call(n,t[a],a,t)===i)return};A.map=A.collect=function(t,e,n){var r=[];return null==t?r:d&&t.map===d?t.map(e,n):(O(t,function(t,i,o){r[r.length]=e.call(n,t,i,o)}),r)};var S="Reduce of empty array with no initial value";A.reduce=A.foldl=A.inject=function(t,e,n,r){var i=arguments.length>2;if(null==t&&(t=[]),y&&t.reduce===y)return r&&(e=A.bind(e,r)),i?t.reduce(e,n):t.reduce(e);if(O(t,function(t,o,a){i?n=e.call(r,n,t,o,a):(n=t,i=!0)}),!i)throw new TypeError(S);return n},A.reduceRight=A.foldr=function(t,e,n,r){var i=arguments.length>2;if(null==t&&(t=[]),v&&t.reduceRight===v)return r&&(e=A.bind(e,r)),i?t.reduceRight(e,n):t.reduceRight(e);var o=t.length;if(o!==+o){var a=A.keys(t);o=a.length}if(O(t,function(u,s,c){s=a?a[--o]:--o,i?n=e.call(r,n,t[s],s,c):(n=t[s],i=!0)}),!i)throw new TypeError(S);return n},A.find=A.detect=function(t,e,n){var r;return j(t,function(t,i,o){return e.call(n,t,i,o)?(r=t,!0):void 0}),r},A.filter=A.select=function(t,e,n){var r=[];return null==t?r:g&&t.filter===g?t.filter(e,n):(O(t,function(t,i,o){e.call(n,t,i,o)&&(r[r.length]=t)}),r)},A.reject=function(t,e,n){return A.filter(t,function(t,r,i){return!e.call(n,t,r,i)},n)},A.every=A.all=function(t,e,n){e||(e=A.identity);var r=!0;return null==t?r:m&&t.every===m?t.every(e,n):(O(t,function(t,o,a){return(r=r&&e.call(n,t,o,a))?void 0:i}),!!r)};var j=A.some=A.any=function(t,e,n){e||(e=A.identity);var r=!1;return null==t?r:b&&t.some===b?t.some(e,n):(O(t,function(t,o,a){return r||(r=e.call(n,t,o,a))?i:void 0}),!!r)};A.contains=A.include=function(t,e){return null==t?!1:w&&t.indexOf===w?-1!=t.indexOf(e):j(t,function(t){return t===e})},A.invoke=function(t,e){var n=c.call(arguments,2),r=A.isFunction(e);return A.map(t,function(t){return(r?e:t[e]).apply(t,n)})},A.pluck=function(t,e){return A.map(t,function(t){return t[e]})},A.where=function(t,e,n){return A.isEmpty(e)?n?null:[]:A[n?"find":"filter"](t,function(t){for(var n in e)if(e[n]!==t[n])return!1;return!0})},A.findWhere=function(t,e){return A.where(t,e,!0)},A.max=function(t,e,n){if(!e&&A.isArray(t)&&t[0]===+t[0]&&t.length<65535)return Math.max.apply(Math,t);if(!e&&A.isEmpty(t))return-1/0;var r={computed:-1/0,value:-1/0};return O(t,function(t,i,o){var a=e?e.call(n,t,i,o):t;a>=r.computed&&(r={value:t,computed:a})}),r.value},A.min=function(t,e,n){if(!e&&A.isArray(t)&&t[0]===+t[0]&&t.length<65535)return Math.min.apply(Math,t);if(!e&&A.isEmpty(t))return 1/0;var r={computed:1/0,value:1/0};return O(t,function(t,i,o){var a=e?e.call(n,t,i,o):t;a<r.computed&&(r={value:t,computed:a})}),r.value},A.shuffle=function(t){var e,n=0,r=[];return O(t,function(t){e=A.random(n++),r[n-1]=r[e],r[e]=t}),r};var I=function(t){return A.isFunction(t)?t:function(e){return e[t]}};A.sortBy=function(t,e,n){var r=I(e);return A.pluck(A.map(t,function(t,e,i){return{value:t,index:e,criteria:r.call(n,t,e,i)}}).sort(function(t,e){var n=t.criteria,r=e.criteria;if(n!==r){if(n>r||void 0===n)return 1;if(r>n||void 0===r)return-1}return t.index<e.index?-1:1}),"value")};var $=function(t,e,n,r){var i={},o=I(e||A.identity);return O(t,function(e,a){var u=o.call(n,e,a,t);r(i,u,e)}),i};A.groupBy=function(t,e,n){return $(t,e,n,function(t,e,n){(A.has(t,e)?t[e]:t[e]=[]).push(n)})},A.countBy=function(t,e,n){return $(t,e,n,function(t,e){A.has(t,e)||(t[e]=0),t[e]++})},A.sortedIndex=function(t,e,n,r){n=null==n?A.identity:I(n);for(var i=n.call(r,e),o=0,a=t.length;a>o;){var u=o+a>>>1;n.call(r,t[u])<i?o=u+1:a=u}return o},A.toArray=function(t){return t?A.isArray(t)?c.call(t):t.length===+t.length?A.map(t,A.identity):A.values(t):[]},A.size=function(t){return null==t?0:t.length===+t.length?t.length:A.keys(t).length},A.first=A.head=A.take=function(t,e,n){return null==t?void 0:null==e||n?t[0]:c.call(t,0,e)},A.initial=function(t,e,n){return c.call(t,0,t.length-(null==e||n?1:e))},A.last=function(t,e,n){return null==t?void 0:null==e||n?t[t.length-1]:c.call(t,Math.max(t.length-e,0))},A.rest=A.tail=A.drop=function(t,e,n){return c.call(t,null==e||n?1:e)},A.compact=function(t){return A.filter(t,A.identity)};var D=function(t,e,n){return O(t,function(t){A.isArray(t)?e?s.apply(n,t):D(t,e,n):n.push(t)}),n};A.flatten=function(t,e){return D(t,e,[])},A.without=function(t){return A.difference(t,c.call(arguments,1))},A.uniq=A.unique=function(t,e,n,r){A.isFunction(e)&&(r=n,n=e,e=!1);var i=n?A.map(t,n,r):t,o=[],a=[];return O(i,function(n,r){(e?r&&a[a.length-1]===n:A.contains(a,n))||(a.push(n),o.push(t[r]))}),o},A.union=function(){return A.uniq(f.apply(o,arguments))},A.intersection=function(t){var e=c.call(arguments,1);return A.filter(A.uniq(t),function(t){return A.every(e,function(e){return A.indexOf(e,t)>=0})})},A.difference=function(t){var e=f.apply(o,c.call(arguments,1));return A.filter(t,function(t){return!A.contains(e,t)})},A.zip=function(){for(var t=c.call(arguments),e=A.max(A.pluck(t,"length")),n=new Array(e),r=0;e>r;r++)n[r]=A.pluck(t,""+r);return n},A.object=function(t,e){if(null==t)return{};for(var n={},r=0,i=t.length;i>r;r++)e?n[t[r]]=e[r]:n[t[r][0]]=t[r][1];return n},A.indexOf=function(t,e,n){if(null==t)return-1;var r=0,i=t.length;if(n){if("number"!=typeof n)return r=A.sortedIndex(t,e),t[r]===e?r:-1;r=0>n?Math.max(0,i+n):n}if(w&&t.indexOf===w)return t.indexOf(e,n);for(;i>r;r++)if(t[r]===e)return r;return-1},A.lastIndexOf=function(t,e,n){if(null==t)return-1;var r=null!=n;if(_&&t.lastIndexOf===_)return r?t.lastIndexOf(e,n):t.lastIndexOf(e);for(var i=r?n:t.length;i--;)if(t[i]===e)return i;return-1},A.range=function(t,e,n){arguments.length<=1&&(e=t||0,t=0),n=arguments[2]||1;for(var r=Math.max(Math.ceil((e-t)/n),0),i=0,o=new Array(r);r>i;)o[i++]=t,t+=n;return o},A.bind=function(t,e){if(t.bind===E&&E)return E.apply(t,c.call(arguments,1));var n=c.call(arguments,2);return function(){return t.apply(e,n.concat(c.call(arguments)))}},A.partial=function(t){var e=c.call(arguments,1);return function(){return t.apply(this,e.concat(c.call(arguments)))}},A.bindAll=function(t){var e=c.call(arguments,1);return 0===e.length&&(e=A.functions(t)),O(e,function(e){t[e]=A.bind(t[e],t)}),t},A.memoize=function(t,e){var n={};return e||(e=A.identity),function(){var r=e.apply(this,arguments);return A.has(n,r)?n[r]:n[r]=t.apply(this,arguments)}},A.delay=function(t,e){var n=c.call(arguments,2);return setTimeout(function(){return t.apply(null,n)},e)},A.defer=function(t){return A.delay.apply(A,[t,1].concat(c.call(arguments,1)))},A.throttle=function(t,e){var n,r,i,o,a=0,u=function(){a=new Date,i=null,o=t.apply(n,r)};return function(){var s=new Date,c=e-(s-a);return n=this,r=arguments,0>=c?(clearTimeout(i),i=null,a=s,o=t.apply(n,r)):i||(i=setTimeout(u,c)),o}},A.debounce=function(t,e,n){var r,i;return function(){var o=this,a=arguments,u=function(){r=null,n||(i=t.apply(o,a))},s=n&&!r;return clearTimeout(r),r=setTimeout(u,e),s&&(i=t.apply(o,a)),i}},A.once=function(t){var e,n=!1;return function(){return n?e:(n=!0,e=t.apply(this,arguments),t=null,e)}},A.wrap=function(t,e){return function(){var n=[t];return s.apply(n,arguments),e.apply(this,n)}},A.compose=function(){var t=arguments;return function(){for(var e=arguments,n=t.length-1;n>=0;n--)e=[t[n].apply(this,e)];return e[0]}},A.after=function(t,e){return 0>=t?e():function(){return--t<1?e.apply(this,arguments):void 0}},A.keys=x||function(t){if(t!==Object(t))throw new TypeError("Invalid object");var e=[];for(var n in t)A.has(t,n)&&(e[e.length]=n);return e},A.values=function(t){var e=[];for(var n in t)A.has(t,n)&&e.push(t[n]);return e},A.pairs=function(t){var e=[];for(var n in t)A.has(t,n)&&e.push([n,t[n]]);return e},A.invert=function(t){var e={};for(var n in t)A.has(t,n)&&(e[t[n]]=n);return e},A.functions=A.methods=function(t){var e=[];for(var n in t)A.isFunction(t[n])&&e.push(n);return e.sort()},A.extend=function(t){return O(c.call(arguments,1),function(e){if(e)for(var n in e)t[n]=e[n]}),t},A.pick=function(t){var e={},n=f.apply(o,c.call(arguments,1));return O(n,function(n){n in t&&(e[n]=t[n])}),e},A.omit=function(t){var e={},n=f.apply(o,c.call(arguments,1));for(var r in t)A.contains(n,r)||(e[r]=t[r]);return e},A.defaults=function(t){return O(c.call(arguments,1),function(e){if(e)for(var n in e)null==t[n]&&(t[n]=e[n])}),t},A.clone=function(t){return A.isObject(t)?A.isArray(t)?t.slice():A.extend({},t):t},A.tap=function(t,e){return e(t),t};var N=function(t,e,n,r){if(t===e)return 0!==t||1/t==1/e;if(null==t||null==e)return t===e;t instanceof A&&(t=t._wrapped),e instanceof A&&(e=e._wrapped);var i=l.call(t);if(i!=l.call(e))return!1;switch(i){case"[object String]":return t==String(e);case"[object Number]":return t!=+t?e!=+e:0==t?1/t==1/e:t==+e;case"[object Date]":case"[object Boolean]":return+t==+e;case"[object RegExp]":return t.source==e.source&&t.global==e.global&&t.multiline==e.multiline&&t.ignoreCase==e.ignoreCase}if("object"!=typeof t||"object"!=typeof e)return!1;for(var o=n.length;o--;)if(n[o]==t)return r[o]==e;n.push(t),r.push(e);var a=0,u=!0;if("[object Array]"==i){if(a=t.length,u=a==e.length)for(;a--&&(u=N(t[a],e[a],n,r)););}else{var s=t.constructor,c=e.constructor;if(s!==c&&!(A.isFunction(s)&&s instanceof s&&A.isFunction(c)&&c instanceof c))return!1;for(var f in t)if(A.has(t,f)&&(a++,!(u=A.has(e,f)&&N(t[f],e[f],n,r))))break;if(u){for(f in e)if(A.has(e,f)&&!a--)break;u=!a}}return n.pop(),r.pop(),u};A.isEqual=function(t,e){return N(t,e,[],[])},A.isEmpty=function(t){if(null==t)return!0;if(A.isArray(t)||A.isString(t))return 0===t.length;for(var e in t)if(A.has(t,e))return!1;return!0},A.isElement=function(t){return!(!t||1!==t.nodeType)},A.isArray=k||function(t){return"[object Array]"==l.call(t)},A.isObject=function(t){return t===Object(t)},O(["Arguments","Function","String","Number","Date","RegExp"],function(t){A["is"+t]=function(e){return l.call(e)=="[object "+t+"]"}}),A.isArguments(arguments)||(A.isArguments=function(t){return!(!t||!A.has(t,"callee"))}),"function"!=typeof/./&&(A.isFunction=function(t){return"function"==typeof t}),A.isFinite=function(t){return isFinite(t)&&!isNaN(parseFloat(t))},A.isNaN=function(t){return A.isNumber(t)&&t!=+t},A.isBoolean=function(t){return t===!0||t===!1||"[object Boolean]"==l.call(t)},A.isNull=function(t){return null===t},A.isUndefined=function(t){return void 0===t},A.has=function(t,e){return h.call(t,e)},A.noConflict=function(){return t._=r,this},A.identity=function(t){return t},A.times=function(t,e,n){for(var r=Array(t),i=0;t>i;i++)r[i]=e.call(n,i);return r},A.random=function(t,e){return null==e&&(e=t,t=0),t+Math.floor(Math.random()*(e-t+1))};var P={escape:{"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"}};P.unescape=A.invert(P.escape);var T={escape:new RegExp("["+A.keys(P.escape).join("")+"]","g"),unescape:new RegExp("("+A.keys(P.unescape).join("|")+")","g")};A.each(["escape","unescape"],function(t){A[t]=function(e){return null==e?"":(""+e).replace(T[t],function(e){return P[t][e]})}}),A.result=function(t,e){if(null==t)return null;var n=t[e];return A.isFunction(n)?n.call(t):n},A.mixin=function(t){O(A.functions(t),function(e){var n=A[e]=t[e];A.prototype[e]=function(){var t=[this._wrapped];return s.apply(t,arguments),R.call(this,n.apply(A,t))}})};var C=0;A.uniqueId=function(t){var e=++C+"";return t?t+e:e},A.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var M=/(.)^/,B={"'":"'","\\":"\\","\r":"r","\n":"n"," ":"t","\u2028":"u2028","\u2029":"u2029"},F=/\\|'|\r|\n|\t|\u2028|\u2029/g;A.template=function(t,e,n){var r;n=A.defaults({},n,A.templateSettings);var i=new RegExp([(n.escape||M).source,(n.interpolate||M).source,(n.evaluate||M).source].join("|")+"|$","g"),o=0,a="__p+='";t.replace(i,function(e,n,r,i,u){return a+=t.slice(o,u).replace(F,function(t){return"\\"+B[t]}),n&&(a+="'+\n((__t=("+n+"))==null?'':_.escape(__t))+\n'"),r&&(a+="'+\n((__t=("+r+"))==null?'':__t)+\n'"),i&&(a+="';\n"+i+"\n__p+='"),o=u+e.length,e}),a+="';\n",n.variable||(a="with(obj||{}){\n"+a+"}\n"),a="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+a+"return __p;\n";try{r=new Function(n.variable||"obj","_",a)}catch(u){throw u.source=a,u}if(e)return r(e,A);var s=function(t){return r.call(this,t,A)};return s.source="function("+(n.variable||"obj")+"){\n"+a+"}",s},A.chain=function(t){return A(t).chain()};var R=function(t){return this._chain?A(t).chain():t};A.mixin(A),O(["pop","push","reverse","shift","sort","splice","unshift"],function(t){var e=o[t];A.prototype[t]=function(){var n=this._wrapped;return e.apply(n,arguments),"shift"!=t&&"splice"!=t||0!==n.length||delete n[0],R.call(this,n)}}),O(["concat","join","slice"],function(t){var e=o[t];A.prototype[t]=function(){return R.call(this,e.apply(this._wrapped,arguments))}}),A.extend(A.prototype,{chain:function(){return this._chain=!0,this},value:function(){return this._wrapped}})}.call(this)},{}]},{},[7])(7)});kiss.db.offline={mode:"offline",collections:{},toId(record){record.id=record._id
delete record._id
return record},toIds(records){records.forEach(record=>{record.id=record._id
delete record._id})
return records},toMongoId(record){record._id=record.id
delete record.id
return record},toMongoIds(records){records.forEach(record=>{record._id=record.id
delete record.id})
return records},async createCollection(modelId,dbMode="offline"){log(`kiss.db.offline - createCollection <${modelId}> in mode <${(dbMode == "memory") ? "memory" : "offline"}>`)
const newCollection=new Nedb({filename:modelId,autoload:true,timestampData:true,inMemoryOnly:(dbMode==="memory")})
const collection=this.collections[modelId]=this.nedbWrapper.fromInstance(newCollection)
await collection.loadDatabase()
return collection},async getCollection(modelId,dbMode="offline"){if(!this.collections[modelId])await this.createCollection(modelId,dbMode)
return this.collections[modelId]},async deleteCollection(modelId){this.collections[modelId].remove({},{multi:true},function(err,numRemoved){if(err){log("kiss.db.offline - deleteCollection - Error:",4,err)}
else{log("kiss.db.offline - deleteCollection - Num removed: "+numRemoved,2)}})
this.collections[modelId]=null},async createCollectionIndex(modelId,fieldName,dbMode="offline"){const collection=await this.getCollection(modelId,dbMode)
collection.ensureIndex({fieldName:fieldName})},async insertOne(modelId,record,dbMode="offline"){log("kiss.db -"+dbMode+" - insertOne - Model "+modelId,0,record)
const collection=await this.getCollection(modelId,dbMode)
record.createdBy=kiss.session.getUserId()
this.toMongoId(record)
const insertedRecord=await collection.insert(record)
this.toId(record)
const channel="EVT_DB_INSERT:"+modelId.toUpperCase()
kiss.pubsub.publish(channel,{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),modelId,id:record.id,data:record})
return insertedRecord},async insertMany(modelId,records,dbMode="offline"){log("kiss.db - "+dbMode+" - insertMany - Model"+modelId+" / "+records.length+" record(s)",0,records)
const collection=await this.getCollection(modelId,dbMode)
const createdBy=kiss.session.getUserId()
records.forEach(record=>record.createdBy=createdBy)
this.toMongoIds(records)
const insertedRecords=await collection.insert(records)
this.toIds(records)
const channel="EVT_DB_INSERT_MANY:"+modelId.toUpperCase()
kiss.pubsub.publish(channel,{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),modelId,data:records})
return insertedRecords},async updateOne(modelId,recordId,update,dbMode="offline"){log("kiss.db - "+dbMode+" - updateOne - Model "+modelId+" / Record "+recordId,0,update)
const collection=await this.getCollection(modelId,dbMode)
update.updatedBy=kiss.session.getUserId()
const result=await collection.update({_id:recordId},{$set:update},{upsert:false})
const channel="EVT_DB_UPDATE:"+modelId.toUpperCase()
kiss.pubsub.publish(channel,{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),modelId,id:recordId,data:update})
return result},async updateMany(modelId,query,update,dbMode="offline"){log("kiss.db - "+dbMode+" - updateMany - Model "+modelId,0,update)
const collection=await this.getCollection(modelId,dbMode)
update.updatedBy=kiss.session.getUserId()
const result=await collection.update(query,{$set:update},{multi:true})
const channel="EVT_DB_UPDATE_MANY:"+modelId.toUpperCase()
kiss.pubsub.publish(channel,{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),modelId,data:update})
return result},async updateBulk(operations,dbMode="offline"){log("kiss.db - "+dbMode+" - updateBulk",0,operations)
const updatedBy=kiss.session.getUserId()
for(let operation of operations){const collection=await this.getCollection(operation.modelId,dbMode)
operation.updates.updatedBy=updatedBy
await collection.update({_id:operation.recordId},{$set:operation.updates},{upsert:false})}
const channel="EVT_DB_UPDATE_BULK"
kiss.pubsub.publish(channel,{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),data:operations})
return{}},async findOne(modelId,recordId,dbMode="offline"){log("kiss.db - "+dbMode+" - findOne - Model "+modelId+" / Record "+recordId)
const collection=await this.getCollection(modelId,dbMode)
const record=await collection.findOne({_id:recordId})
if(record)this.toId(record)
return record},async find(modelId,query,dbMode="offline"){log("kiss.db - "+dbMode+" - find - Model "+modelId+" / Query:",0,query)
let records
const collection=await this.getCollection(modelId,dbMode)
if(!query){records=await collection.find({})
return this.toIds(records)}
const search={operation:"search",filter:query.filter||{},filterSyntax:query.filterSyntax||"normalized",sort:query.sort||{},sortSyntax:query.sortSyntax||"normalized",group:query.group||[],projection:query.projection||{},skip:query.skip,limit:query.limit,groupUnwind:query.groupUnwind}
if(search.filterSyntax=="normalized"){search.filter=kiss.db.mongo.convertFilterGroup(search.filter)}
if(search.sortSyntax=="normalized"){search.sort=kiss.db.mongo.convertSort(search.sort)}
records=await collection.cfind(search.filter,search.projection).sort(search.sort).exec()
return this.toIds(records)},async deleteOne(modelId,recordId,sendToTrash,dbMode="offline"){log("kiss.db - "+dbMode+" - deleteOne - Model "+modelId+" / Record "+recordId)
const collection=await this.getCollection(modelId,dbMode)
if(sendToTrash){await this.copyOneToTrash(modelId,recordId,dbMode)}
const result=await collection.remove({_id:recordId})
const channel="EVT_DB_DELETE:"+modelId.toUpperCase()
kiss.pubsub.publish(channel,{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),modelId,id:recordId})
return result},async deleteMany(modelId,query,sendToTrash,dbMode="offline"){log("kiss.db - "+dbMode+" - deleteMany - Model "+modelId,0,query)
const collection=await this.getCollection(modelId,dbMode)
if(sendToTrash){await this.copyManyToTrash(modelId,query,dbMode)}
const result=await collection.remove(query,{multi:true})
const channel="EVT_DB_DELETE_MANY:"+modelId.toUpperCase()
kiss.pubsub.publish("EVT_DB_DELETE_MANY:"+modelId.toUpperCase(),{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),modelId,data:query})
return result},async count(modelId,query,dbMode){log("kiss.db - "+dbMode+" - count - Model "+modelId,0,query)
const collection=await this.getCollection(modelId,dbMode)
return await collection.count(query)},async copyOneToTrash(modelId,recordId,dbMode="offline"){const record=await this.findOne(modelId,recordId,dbMode)
record.accountId="anonymous"
record.sourceModelId=modelId
record.deletedAt=new Date().toISOString()
record.deletedBy="anonymous"
await this.insertOne("trash",record,dbMode)
return record},async copyManyToTrash(modelId,query,dbMode="offline"){const records=await this.find(modelId,query,dbMode)
const data=[]
for(record of records){record.accountId="anonymous"
record.sourceModelId=modelId
record.deletedAt=new Date().toISOString()
record.deletedBy="anonymous"
data.push(record)}
await this.insertMany("trash",data,dbMode)
return records},nedbWrapper:{fromInstance(nedbInstance){const newCollection={nedb:nedbInstance}
const methods=['loadDatabase','insert','find','findOne','count','update','remove','ensureIndex','removeIndex']
for(let i=0;i<methods.length;++i){const method=methods[i]
newCollection[method]=kiss.db.offline.nedbWrapper.thenify(nedbInstance[method].bind(nedbInstance))}
newCollection.cfind=function(query,projections){const cursor=nedbInstance.find(query,projections)
cursor.exec=kiss.db.offline.nedbWrapper.thenify(cursor.exec.bind(cursor))
return cursor}
newCollection.cfindOne=function(query,projections){const cursor=nedbInstance.findOne(query,projections)
cursor.exec=kiss.db.offline.nedbWrapper.thenify(cursor.exec.bind(cursor))
return cursor}
newCollection.ccount=function(query){const cursor=nedbInstance.count(query)
cursor.exec=kiss.db.offline.nedbWrapper.thenify(cursor.exec.bind(cursor))
return cursor}
return newCollection},create:function(name,options){name=(name||'').replace(/\s|bound(?!$)/g,'')
options=options||{}
var multiArgs=options.multiArgs!==undefined?options.multiArgs:true
multiArgs='var multiArgs = '+JSON.stringify(multiArgs)+'\n'
var withCallback=options.withCallback?'var lastType = typeof arguments[len - 1]\n'+'if (lastType === "function") return $$__fn__$$.apply(self, arguments)\n':''
return'(function '+name+'() {\n'+'var self = this\n'+'var len = arguments.length\n'+
multiArgs+
withCallback+'var args = new Array(len + 1)\n'+'for (var i = 0; i < len; ++i) args[i] = arguments[i]\n'+'var lastIndex = i\n'+'return new Promise(function (resolve, reject) {\n'+'args[lastIndex] = kiss.db.offline.nedbWrapper.createCallback(resolve, reject, multiArgs)\n'+'$$__fn__$$.apply(self, args)\n'+'})\n'+'})'},thenify:function($$__fn__$$,options){return eval(this.create($$__fn__$$.name,options))},createCallback:function(resolve,reject,multiArgs){return function(err,value){if(err)return reject(err)
const length=arguments.length
if(length<=2||!multiArgs)return resolve(value)
if(Array.isArray(multiArgs)){let values={}
for(let i=1;i<length;i++)values[multiArgs[i-1]]=arguments[i]
return resolve(values)}
let values=new Array(length-1)
for(let i=1;i<length;++i)values[i-1]=arguments[i]
resolve(values)}}}};kiss.db.offline.nedbWrapper.thenify.withCallback=function($$__fn__$$,options){options=options||{}
options.withCallback=true
if(options.multiArgs===undefined)options.multiArgs=true
return eval(kiss.db.offline.nedbWrapper.create($$__fn__$$.name,options))};kiss.db.online={url:"",async insertOne(modelId,record){log("kiss.db - online - insertOne - Model "+modelId,0,record)
const response=await kiss.ajax.request({url:"/"+modelId,method:"post",body:JSON.stringify(record)})
const channel="EVT_DB_INSERT:"+modelId.toUpperCase()
kiss.pubsub.publish(channel,{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),modelId,id:record.id,data:record})
return response},async insertMany(modelId,records){log("kiss.db - online - insertMany - Model"+modelId+" / "+records.length+" record(s)",0,records)
const response=await kiss.ajax.request({url:"/"+modelId,method:"post",body:JSON.stringify(records)})
const channel="EVT_DB_INSERT_MANY:"+modelId.toUpperCase()
kiss.pubsub.publish(channel,{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),modelId,data:records})
return response},async updateOne(modelId,recordId,update){log("kiss.db - online - updateOne - Model "+modelId+" / Record "+recordId,0,update)
const response=await kiss.ajax.request({url:"/"+modelId+"/"+recordId,method:"patch",body:JSON.stringify(update)})
const channel="EVT_DB_UPDATE:"+modelId.toUpperCase()
kiss.pubsub.publish(channel,{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),modelId,id:recordId,data:update})
return response},async updateMany(modelId,query,update){log("kiss.db - online - updateMany - Model "+modelId,0,update)
const response=await kiss.ajax.request({url:"/"+modelId,method:"patch",body:JSON.stringify({query:query,update:update})})
const channel="EVT_DB_UPDATE_MANY:"+modelId.toUpperCase()
kiss.pubsub.publish(channel,{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),modelId,data:update})
return response},async updateBulk(operations){log("kiss.db - online - updateBulk",0,operations)
const response=await kiss.ajax.request({url:"/bulk",method:"patch",body:JSON.stringify(operations)})
const channel="EVT_DB_UPDATE_BULK"
kiss.pubsub.publish(channel,{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),data:operations})
return response},async findOne(modelId,recordId){log("kiss.db - online - findOne - Model "+modelId+" / Record "+recordId)
return await kiss.ajax.request({url:"/"+modelId+"/"+recordId,method:"get"})},async find(modelId,query){log("kiss.db - online - find - Model "+modelId+" / Query:",0,query)
if(!query){return await kiss.ajax.request({url:"/"+modelId,method:"get"})}
const search={operation:"search",filter:query.filter||{},filterSyntax:query.filterSyntax||"normalized",sort:query.sort||{},sortSyntax:query.sortSyntax||"normalized",group:query.group||[],projection:query.projection||{},skip:query.skip,limit:query.limit,groupUnwind:query.groupUnwind}
return await kiss.ajax.request({url:"/"+modelId,method:"post",body:JSON.stringify(search)})},async deleteOne(modelId,recordId,sendToTrash){log("kiss.db - online - deleteOne - Model "+modelId+" / Record "+recordId)
const response=await kiss.ajax.request({url:"/"+modelId+"/"+recordId,method:"delete",body:JSON.stringify({sendToTrash:!!sendToTrash})})
const channel="EVT_DB_DELETE:"+modelId.toUpperCase()
kiss.pubsub.publish(channel,{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),modelId,id:recordId})
return response},async deleteMany(modelId,query,sendToTrash){log("kiss.db - online - deleteMany - Model "+modelId,0,query)
const params={operation:"delete",filter:query||{},sendToTrash:!!sendToTrash}
const response=await kiss.ajax.request({url:"/"+modelId,method:"post",body:JSON.stringify(params)})
const channel="EVT_DB_DELETE_MANY:"+modelId.toUpperCase()
kiss.pubsub.publish("EVT_DB_DELETE_MANY:"+modelId.toUpperCase(),{channel,accountId:kiss.session.getCurrentAccountId(),userId:kiss.session.getUserId(),modelId,data:query})
return response},count(modelId,query){log("kiss.db - online - count - Model "+modelId,0,query)
return 42}};kiss.data.Collection=class Collection{constructor(config){this.id=config.id||uid()
this.mode=config.mode||kiss.db.mode
this.db=kiss.db[this.mode]
this.model=config.model
this.modelId=this.model.id
this.modelName=this.model.name
log(`kiss.data.Collection - Defining collection ${this.id} for <${this.modelName}> in mode <${this.mode}>`)
this.isMaster=config.isMaster||false
this.masterCollection=(this.isMaster)?this:kiss.app.collections[this.modelId]
this.records=config.records||[]
this.isLoaded=false
this.filter=config.filter||{}
this.filterSyntax=config.filterSyntax||"normalized"
this.sort=config.sort||[]
this.sortSyntax=config.sortSyntax||"normalized"
this.projection={}
this.group=config.group||[]
this.groupUnwind=config.groupUnwind||false
this.subscriptions=[subscribe("EVT_DB_INSERT:"+this.modelId.toUpperCase(),(msgData)=>this._insertOne(msgData.data)),subscribe("EVT_DB_UPDATE:"+this.modelId.toUpperCase(),(msgData)=>this._updateOne(msgData.id,msgData.data)),subscribe("EVT_DB_DELETE:"+this.modelId.toUpperCase(),(msgData)=>this._deleteOne(msgData.id)),subscribe("EVT_DB_UPDATE_BULK",(msgData)=>{msgData.data.forEach(operation=>{if(operation.modelId==this.modelId){this._updateOne(operation.recordId,operation.updates)}})}),subscribe("EVT_DB_INSERT_MANY:"+this.modelId.toUpperCase(),(msgData)=>{this.find({},true)},`Collection.insertMany / Model: ${this.model.name}`),subscribe("EVT_DB_DELETE_MANY:"+this.modelId.toUpperCase(),(msgData)=>{this.find({},true)},`Collection.deleteMany / Model: ${this.model.name}`)]
this.hooks={beforeInsert:[],afterInsert:[],beforeUpdate:[],afterUpdate:[],beforeDelete:[],afterDelete:[]}
kiss.app.collections[this.id]=this
return this}
destroy(deleteInMemoryDb){this.subscriptions.forEach(subscriptionId=>kiss.pubsub.unsubscribe(subscriptionId))
if(this.mode=="memory"&&kiss.db.mode!="memory"||deleteInMemoryDb){this.db.deleteCollection(this.modelId)}
delete kiss.app.collections[this.id]
delete this}
setMode(mode){this.mode=mode
this.db=kiss.db[mode]}
addHook(hookType,callback){if(["beforeInsert","beforeUpdate","beforeDelete","afterInsert","afterUpdate","afterDelete"].includes(hookType))this.hooks[hookType].push(callback)
return this}
_hookInsert(type,record){let event=type+"Insert"
if(this.hooks[event].length!=0){this.hooks[event].forEach(hook=>{hook(record)})}}
_hookUpdate(type,recordId,update){let event=type+"Update"
if(this.hooks[event].length!=0){this.hooks[event].forEach(hook=>{hook(recordId,update)})}}
_hookDelete(type,recordId){let event=type+"Delete"
if(this.hooks[event].length!=0){this.hooks[event].forEach(hook=>{hook(recordId)})}}
_insertOne(record){log("kiss.data.Collection - _insertOne in collection "+this.id,0,record)
const existingRecord=this.records.get(record.id)
if(existingRecord){log("kiss.data.Collection - _insertOne rejected because it violates the unique constraint",4)
return}
this._hookInsert("before",record)
const newRecord=this.model.create(record)
this.records.push(newRecord)
this.hasChanged=true
this._hookInsert("after",record)}
_updateOne(recordId,update){log(`kiss.data.Collection - _updateOne in collection ${this.id} / Record: ${recordId}`,0,update)
this._hookUpdate("before",recordId,update)
if(this.groupUnwind!==true){let record=this.records.get(recordId)
if(record)Object.assign(record,update)
if(this.group.length>0){Object.values(this.cachedRecords).forEach(collapsedGroupRecords=>{let record=collapsedGroupRecords.get(recordId)
if(record)Object.assign(record,update)})}}
else{this.records.forEach(record=>{if(record.id==recordId)Object.assign(record,update)})
if(this.group.length>0){Object.values(this.cachedRecords).forEach(collapsedGroupRecords=>{collapsedGroupRecords.forEach(record=>{if(record.id==recordId)Object.assign(record,update)})})}}
this.hasChanged=true
this._hookUpdate("after",recordId,update)}
_deleteOne(recordId){log("kiss.data.Collection - _deleteOne in collection "+this.id,2)
this._hookDelete("before",recordId)
this.records=this.records.filter(record=>record.id!=recordId)
if(this.group.length>0){Object.values(this.cachedRecords).forEach(collapsedGroupRecords=>{collapsedGroupRecords=collapsedGroupRecords.filter(record=>record.id!=recordId)})}
this.hasChanged=true
this._hookDelete("after",recordId)}
async insertMany(records){await this.db.insertMany(this.modelId,records)}
async insertOne(record){await this.db.insertOne(this.modelId,record)}
async updateOne(recordId,update){await this.db.updateOne(this.modelId,recordId,update)}
async deleteOne(recordId,sendToTrash){await this.db.deleteOne(this.modelId,recordId)}
async updateMany(query,update){await this.db.updateMany(this.modelId,query,update)}
async deleteMany(query,sendToTrash){await this.db.deleteMany(this.modelId,query)}
async insertFakeRecords(numberOfRecords){await kiss.db.insertFakeRecords(this.modelId,this.model.getFields(),numberOfRecords)}
async deleteFakeRecords(){await kiss.db.deleteFakeRecords(this.modelId)}
async find(query={},nocache){let loadingId
try{if(this.isLoaded&&this.hasChanged==false&&nocache!=true){log("kiss.data.Collection - find - "+this.id+" - Got data from CACHE",2)
return this.records}
if(this.isLoading&&!this.hasChanged){this.records=await new Promise((resolve,reject)=>{const subscriptionId=subscribe("EVT_COLLECTION_LOADED:"+this.id,(msgData)=>{kiss.pubsub.unsubscribe(subscriptionId)
resolve(msgData)})})
log("kiss.data.Collection - find - "+this.id+" - Got data from PUBSUB",2)
return this.records}
log("kiss.data.Collection - find - "+this.id)
this.isLoading=true
this.isLoaded=false
this.hasChanged=false
this.cachedRecords=[]
if(query.filter)this.filter=query.filter
if(query.filterSyntax)this.filterSyntax=query.filterSyntax
if(query.sort)this.sort=query.sort
if(query.sortSyntax)this.sortSyntax=query.sortSyntax
if(query.group)this.group=query.group
if(query.groupUnwind)this.groupUnwind=query.groupUnwind
if(query.projection)this.projection=query.projection
if(query.skip)this.skip=query.skip
if(query.limit)this.limit=query.limit
let search={operation:"search",filter:this.filter,filterSyntax:this.filterSyntax||"normalized",sort:this.sort,sortSyntax:this.sortSyntax||"normalized",group:this.group,groupUnwind:this.groupUnwind,projection:this.projection,skip:this.skip,limit:this.limit}
if(this.group.length!=0){this.collapsedGroups=[]
this.groupedRecords=await this.db.find(this.modelId,search,this.mode)
this.groupedRecords=this.groupedRecords.map(record=>this.model.create(record))
this.groupedRecords=this._groupBy(this.groupedRecords,this.group,this.groupUnwind)
this._groupBuildHierarchy()}else{this.records=await this.db.find(this.modelId,search,this.mode)
this.records=this.records.map(record=>this.model.create(record))
this.count=this.records.length}
this.hasChanged=false
this.isLoading=false
this.isLoaded=true
publish("EVT_COLLECTION_LOADED:"+this.id,this.records)
log("kiss.data.Collection - find - "+this.id+" - Got data from DATABASE",2)
return this.records}catch(err){if(!this.records)this.records=[]
this.isLoaded=false
this.isLoading=false
this.hasChanged=false
return this.records}}
async findOne(recordId,nocache){log(`kiss.data.Collection - findOne ${this.model.name} - ${this.id} - Record: ${recordId}`)
let record
if(this.isLoaded&&!this.hasChanged&&!nocache){log(`kiss.data.Collection - returning cached record`)
record=this.records.get(recordId)}
if(!record){log(`kiss.data.Collection - retrieving record from db`)
let recordData=await this.db.findOne(this.modelId,recordId)
if(!recordData)return false
record=this.model.create(recordData)}
if(!record)return false
return record}
getRecord(recordId){return this.records.get(recordId)}
async filterBy(filterConfig){this.filter=filterConfig
this.hasChanged=true
await this.find()}
async sortBy(sortConfig){this.sort=sortConfig
this.hasChanged=true
await this.find()}
async groupBy(groupFields){this.group=(groupFields.length!=0)?groupFields:[]
this.hasChanged=true
await this.find()}
groupExpand(groupId,rowIndex){this.collapsedGroups.remove(groupId)
let recordsToInsert=this.cachedRecords[groupId]
this.records.splice(Number(rowIndex)+1,0,...recordsToInsert)
let index=0
this.records.forEach(record=>{if(record.$type!="group")record.$index=index++})
this.count=this.records.length}
groupCollapse(groupId){let recordsKept=[]
let recordsCached=[]
let groupIdToSearch=groupId+"."
this.records.forEach(record=>{if(!(record.$groupId.startsWith(groupIdToSearch))){recordsKept.push(record)}else{recordsCached.push(record)}})
this.records=recordsKept
this.cachedRecords[groupId]=recordsCached
let index=0
this.records.forEach(record=>{if(record.$type!="group")record.$index=index++})
this.count=this.records.length
this.collapsedGroups.push(groupId)}
groupExpandAll(){this.collapsedGroups=[]
this.cachedRecords={}
this._groupBuildHierarchy()}
groupCollapseAll(){this.collapsedGroups=[]
this.cachedRecords={}
this._groupBuildHierarchy(true)}
_groupBy(records,fieldIds,groupUnwind){switch(fieldIds.length){case 1:return this._groupBy1Field(records,fieldIds,groupUnwind)
break
case 2:return this._groupBy2Fields(records,fieldIds,groupUnwind)
break
case 3:return this._groupBy3Fields(records,fieldIds,groupUnwind)
break
case 4:return this._groupBy4Fields(records,fieldIds,groupUnwind)
break
case 5:return this._groupBy5Fields(records,fieldIds,groupUnwind)
break
case 6:return this._groupBy6Fields(records,fieldIds,groupUnwind)
break}}
_groupBy1Field(records,fieldIds,groupUnwind){const fieldId=fieldIds[0]
const groupField=this.model.getField(fieldId)
if(groupField.multiple){return this._groupBy1UnwoundField(records,fieldIds)}
return records.reduce((map,record)=>{let value=record[fieldId]
return map.set(value,[...map.get(value)||[],record])},new Map())}
_groupBy1UnwoundField(records,fieldIds){const fieldId=fieldIds[0]
return records.reduce((map,record)=>{[].concat(record[fieldId]).forEach(value=>{map.set(value,[...map.get(value)||[],record])})
return map},new Map())}
_groupBy2Fields(records,fieldIds){let map=new Map()
records.forEach(record=>{let groupLevel1=record[fieldIds[0]]
let groupLevel2=record[fieldIds[1]]
if(!map.get(groupLevel1))map.set(groupLevel1,new Map())
map.get(groupLevel1).set(groupLevel2,[...map.get(groupLevel1).get(groupLevel2)||[],record])})
return map}
_groupBy3Fields(records,fieldIds){let map=new Map()
records.forEach(record=>{let groupLevel1=record[fieldIds[0]]
let groupLevel2=record[fieldIds[1]]
let groupLevel3=record[fieldIds[2]]
if(!map.get(groupLevel1))map.set(groupLevel1,new Map())
if(!map.get(groupLevel1).get(groupLevel2))map.get(groupLevel1).set(groupLevel2,new Map())
map.get(groupLevel1).get(groupLevel2).set(groupLevel3,[...map.get(groupLevel1).get(groupLevel2).get(groupLevel3)||[],record])})
return map}
_groupBy4Fields(records,fieldIds){let map=new Map()
records.forEach(record=>{let groupLevel1=record[fieldIds[0]]
let groupLevel2=record[fieldIds[1]]
let groupLevel3=record[fieldIds[2]]
let groupLevel4=record[fieldIds[3]]
if(!map.get(groupLevel1))map.set(groupLevel1,new Map())
if(!map.get(groupLevel1).get(groupLevel2))map.get(groupLevel1).set(groupLevel2,new Map())
if(!map.get(groupLevel1).get(groupLevel2).get(groupLevel3))map.get(groupLevel1).get(groupLevel2).set(groupLevel3,new Map())
map.get(groupLevel1).get(groupLevel2).get(groupLevel3).set(groupLevel4,[...map.get(groupLevel1).get(groupLevel2).get(groupLevel3).get(groupLevel4)||[],record])})
return map}
_groupBy5Fields(records,fieldIds){let map=new Map()
records.forEach(record=>{let groupLevel1=record[fieldIds[0]]
let groupLevel2=record[fieldIds[1]]
let groupLevel3=record[fieldIds[2]]
let groupLevel4=record[fieldIds[3]]
let groupLevel5=record[fieldIds[4]]
if(!map.get(groupLevel1))map.set(groupLevel1,new Map())
if(!map.get(groupLevel1).get(groupLevel2))map.get(groupLevel1).set(groupLevel2,new Map())
if(!map.get(groupLevel1).get(groupLevel2).get(groupLevel3))map.get(groupLevel1).get(groupLevel2).set(groupLevel3,new Map())
if(!map.get(groupLevel1).get(groupLevel2).get(groupLevel3).get(groupLevel4))map.get(groupLevel1).get(groupLevel2).get(groupLevel3).set(groupLevel4,new Map())
map.get(groupLevel1).get(groupLevel2).get(groupLevel3).get(groupLevel4).set(groupLevel5,[...map.get(groupLevel1).get(groupLevel2).get(groupLevel3).get(groupLevel4).get(groupLevel5)||[],record])})
return map}
_groupBy6Fields(records,fieldIds){let map=new Map()
records.forEach(record=>{let groupLevel1=record[fieldIds[0]]
let groupLevel2=record[fieldIds[1]]
let groupLevel3=record[fieldIds[2]]
let groupLevel4=record[fieldIds[3]]
let groupLevel5=record[fieldIds[4]]
let groupLevel6=record[fieldIds[5]]
if(!map.get(groupLevel1))map.set(groupLevel1,new Map())
if(!map.get(groupLevel1).get(groupLevel2))map.get(groupLevel1).set(groupLevel2,new Map())
if(!map.get(groupLevel1).get(groupLevel2).get(groupLevel3))map.get(groupLevel1).get(groupLevel2).set(groupLevel3,new Map())
if(!map.get(groupLevel1).get(groupLevel2).get(groupLevel3).get(groupLevel4))map.get(groupLevel1).get(groupLevel2).get(groupLevel3).set(groupLevel4,new Map())
if(!map.get(groupLevel1).get(groupLevel2).get(groupLevel3).get(groupLevel4).get(groupLevel5))map.get(groupLevel1).get(groupLevel2).get(groupLevel3).get(groupLevel4).set(groupLevel5,new Map())
map.get(groupLevel1).get(groupLevel2).get(groupLevel3).get(groupLevel4).get(groupLevel5).set(groupLevel6,[...map.get(groupLevel1).get(groupLevel2).get(groupLevel3).get(groupLevel4).get(groupLevel5).get(groupLevel6)||[],record])})
return map}
_groupBuildHierarchy(collapsed){this.records=[]
this.recordIndex=0
this.numberFields=this.model.getFields().filter(field=>{if(field.type=="number")return true
if((field.type=="summary")&&(field.summary.type=="number"))return true
if((field.type=="lookup")&&(field.lookup.type=="number"))return true
return false})
this.levelIndex=[]
this._groupParse(this.groupedRecords,{},0,collapsed)
this.count=this.records.length}
_groupParse(group,parentGroupData,groupLevel,collapsed){this.levelIndex[groupLevel]=0
group.forEach((subgroup,key,map)=>{this.levelIndex[groupLevel]+=1
const groupId=this.levelIndex.slice(0,groupLevel+1).join(".")
group.get(key).groupId=groupId
const subGroupData={$type:"group",$groupLevel:groupLevel,$groupId:groupId,$size:subgroup.length,$name:key}
if(!collapsed||groupLevel==0){this.records.push(subGroupData)}else{this.cachedRecords[parentGroupData.$groupId]=(this.cachedRecords[parentGroupData.$groupId]||[]).concat(subGroupData)}
if(collapsed)this.collapsedGroups.push(groupId)
if(subgroup instanceof Map){const deeperSubGroup=this._groupParse(subgroup,subGroupData,groupLevel+1,collapsed)
parentGroupData.$size=(parentGroupData.$size||0)+deeperSubGroup.$size
this.numberFields.forEach(field=>{const parentSum=(parentGroupData[field.id])?(parentGroupData[field.id].sum||0)+deeperSubGroup[field.id].sum:deeperSubGroup[field.id].sum
parentGroupData[field.id]={sum:parentSum,avg:parentSum/parentGroupData.$size}})}else{parentGroupData.$size=(parentGroupData.$size||0)+subgroup.length
this.numberFields.forEach(field=>{const sum=subgroup.reduce((sum,record)=>{return sum+(Number(record[field.id])||0)},0)
subGroupData[field.id]={sum,avg:sum/subgroup.length}
const parentSum=(parentGroupData[field.id])?(parentGroupData[field.id].sum||0)+sum:sum
parentGroupData[field.id]={sum:parentSum,avg:parentSum/parentGroupData.$size}})
subgroup.forEach(record=>{record.$groupId=groupId+"."
record.$index=this.recordIndex++})
if(!collapsed){this.records.push(...subgroup)}else{this.cachedRecords[groupId]=subgroup}}})
return parentGroupData}};kiss.data.Model=class Model{constructor(config){log(`kiss.data.Model - Defining model <${config.name}>`,0,config)
this.mode=config.mode||kiss.db.mode
this.db=kiss.db[this.mode]
this.id=config.id||this.namePlural||this.name||uid()
this.name=(config.name||this.id).toTitleCase()
this.namePlural=(config.namePlural||this.id).toTitleCase()
this.icon=config.icon||"fas fa-th"
this.color=config.color||"#00aaee"
this.tags=config.tags||[]
this.domains=config.domains||[]
this.methods=config.methods||{}
this.features=config.features
this.form=config.form
this.acl=(kiss.tools.isUid(this.id))?kiss.app.models["dynamicModel"].acl:config.acl
this.authenticatedCanCreate=config.authenticatedCanCreate
this.authenticatedCanRead=config.authenticatedCanRead
this.authenticatedCanUpdate=config.authenticatedCanUpdate
this.authenticatedCanDelete=config.authenticatedCanDelete
this.ownerCanManage=config.ownerCanManage
this.accessCreate=config.accessCreate
this.accessRead=config.accessRead
this.accessUpdate=config.accessUpdate
this.accessDelete=config.accessDelete
this.accessManage=config.accessManage
if(config.templateId)this.templateId=config.templateId
this.items=this.initItems(config.items)
console.log("-------------------------")
console.log(this.items)
this.fields=this.initFields()
console.log(this.fields)
this.computedFields=this.computedFields||[]
this._prepareFieldFormulae()
kiss.app.models[this.id]=this
kiss.data.Record[this.id]=kiss.data.RecordFactory(this.id)
this._attachMethodsToRecordClass()
this._attachAccessorsToRecordClass()
this.collection=new kiss.data.Collection({id:this.id,mode:this.mode,model:this,isMaster:true,sort:[{[this.getPrimaryKeyField().id]:"asc"}]})
const modelId=this.id.toUpperCase()
this.subscriptions=[subscribe("EVT_DB_UPDATE:MODEL",(msgData)=>{if(this.id==msgData.id){Object.assign(this,msgData.data)}}),subscribe("EVT_DB_UPDATE_BULK",(msgData)=>{if(msgData.data&&msgData.data[0]&&msgData.data[0].modelId=="model"&&msgData.data[0].recordId==this.id){Object.assign(this,msgData.data[0].updates)}}),subscribe("EVT_DB_INSERT:"+modelId,this._notifyUser),subscribe("EVT_DB_UPDATE:"+modelId,this._notifyUser),subscribe("EVT_DB_DELETE:"+modelId,this._notifyUser),subscribe("EVT_DB_UPDATE_BULK",(msgData)=>{let isUpdated=false
for(let operation of msgData.data){if(operation.modelId==this.id){isUpdated=true
break}}
if(isUpdated)this._notifyUser(msgData)}),]
return this}
create(record){return new kiss.data.Record[this.id](record)}
initFields(){const modelFields=this.getFields()
const featureFields=this.getFeatureFields()
this.fields=modelFields.concat(featureFields)
return this.fields}
initItems(items){if(!items)return[]
items=items.filter(item=>item!=null)
items.forEach(item=>{if(!item.id)item.id=shortUid()
if(item.type=="select"){if(!item.options)return
item.options=item.options.map(option=>{if(typeof option=="object")return option
return{value:option}})}
if(item.items)this.initItems(item.items)})
return items}
async saveItems(){const modelRecord=kiss.app.collections.model.getRecord(this.id)
await modelRecord.update({items:this.items})}
getFormItems(items){items=items.filter(item=>item!=null&&item.deleted!=true)
items.forEach(item=>{if(item.items){item.id=kiss.tools.shortUid()
item.items=this.getFormItems(item.items)
item.headerBackgroundColor=this.color}else{if(item.unit){item.label=item.label+" ("+item.unit+")"}}})
return items}
getField(fieldId){const field=this.fields.find(field=>field.id==fieldId)
if(field)return field
return this.getFieldByLabel(fieldId)}
getPrimaryKeyField(){const fields=this.fields
const primaryKeyField=fields.find(field=>field.primary==true)
if(primaryKeyField)return primaryKeyField
return fields[0]}
getFieldByLabel(fieldLabel){const fields=this.fields.filter(field=>!field.deleted)
let field=fields.find(field=>field.label&&field.label.toLowerCase()==fieldLabel.toLowerCase())
if(field)return field
field=fields.find(field=>field.id.toLowerCase()==fieldLabel.toLowerCase())
return field}
getFields(containerItems){let fields=[]
let items=containerItems||this.items||[]
items=items.filter(item=>item!=null)
items.forEach(item=>{if((kiss.global.fieldTypes.map(type=>type.value).indexOf(item.type)!=-1)||(item.dataType!=null)){fields.push(item)}else{if(item.items){fields.push(this.getFields(item.items))}}})
return fields.flat()}
getFeatureFields(){let featureFields=[]
if(this.features){Object.keys(this.features).filter(featureId=>this.features[featureId].active).forEach(featureId=>{const plugin=kiss.plugins.get(featureId)
if(plugin.fields){plugin.fields.forEach(field=>{field.isFromPlugin=true
field.pluginId=featureId
field.label=this._getPluginFieldLabel(field)
featureFields.push(field)})}})}
return featureFields}
getFieldsAsColumns(){let columns=this.fields.map(field=>{if(field.deleted||!field.label)return null
let columnConfig={id:field.id,type:this._convertFieldTypeToColumnType(field),title:field.label.toTitleCase(),}
if(field.isFromPlugin){columnConfig.isFromPlugin=true
columnConfig.pluginId=field.pluginId}
return columnConfig}).filter(column=>column!=null)
this.appendPluginColumns(columns)
return columns}
appendPluginColumns(columns){const fieldIds=this.fields.filter(field=>!field.deleted).map(field=>field.id)
const columnIds=columns.filter(column=>!column.deleted).map(column=>column.id)
const missingIds=fieldIds.filter(item=>!columnIds.includes(item))
if(missingIds.length>0){missingIds.forEach(fieldId=>{const field=this.getField(fieldId)
let columnConfig={id:field.id,type:this._convertFieldTypeToColumnType(field),title:txtTitleCase(field.label),}
if(field.isFromPlugin){columnConfig.isFromPlugin=true
columnConfig.pluginId=field.pluginId}
columns.push(columnConfig)})}
columns.filter(column=>column.isFromPlugin).forEach(column=>column.title=this._getPluginFieldLabel(column))}
async syncViewsWithModelFields(){const viewsToUpdate=this.getViews()
for(let viewRecord of viewsToUpdate){await viewRecord.syncWithModelFields()}}
getVisibleFields(){return this.getFields().filter(field=>!field.deleted)}
getFieldsByType(type){const fields=this.fields
return fields.filter(field=>field.type==type)}
getSortableFields(){return this.fields.filter(field=>field.type!="link"&&field.type!="attachment"&&field.label&&field.deleted!=true)}
getGroupableFields(){return this.fields.filter(field=>field.type!="link"&&field.type!="attachment"&&field.deleted!=true)}
getFilterableFields(){return this.fields.filter(field=>field.type!="link"&&field.type!="xxattachment"&&field.deleted!=true)}
getLinkField(foreignModelId){const fields=this.fields
for(let field of fields){if(field.type=="link"){if(field.link.modelId==foreignModelId)return field}}
return null}
async connectToModel(foreignModelId,fieldSetup){const foreignModel=kiss.app.models[foreignModelId]
const foreignLinkFields=foreignModel.getFieldsByType("link")
log("kiss.data.Model - Connecting model "+this.name+" to model "+foreignModel.name)
let foreignLinkFieldId=null
let existingLinkField=null
let foreignLinkFieldConfig={}
foreignLinkFields.forEach(linkField=>{if(linkField.link.modelId==this.id)existingLinkField=linkField})
if(existingLinkField!=null){log("kiss.data.Model - connectToModel: updating existing link in the foreign model "+foreignModel.name,2)
delete existingLinkField.deleted
existingLinkField.link.field=fieldSetup.label
existingLinkField.link.fieldId=fieldSetup.id
await foreignModel.updateField(existingLinkField.id,existingLinkField)
foreignLinkFieldId=existingLinkField.id}else{log("kiss.data.Model - connectToModel: adding a new link field in the foreign model "+foreignModel.name,2)
foreignLinkFieldConfig={id:shortUid(),label:this.namePlural,type:"link",display:"inline-flex",width:"100%",fieldWidth:"100%",labelWidth:"100%",labelPosition:"top",labelAlign:"left",link:{model:this.name,modelId:this.id,field:fieldSetup.label,fieldId:fieldSetup.id}}
await foreignModel.addField(foreignLinkFieldConfig)
foreignLinkFieldId=foreignLinkFieldConfig.id
log("kiss.data.Model - Foreign link field config:",2,foreignLinkFieldConfig)}
fieldSetup.deleted=fieldSetup.hidden=false
fieldSetup.link.fieldId=foreignLinkFieldId
await this.updateField(fieldSetup.id,fieldSetup)
this.defineRelationships()
foreignModel.defineRelationships()
return foreignLinkFieldConfig}
async addField(config,sectionId){const modelRecord=kiss.app.collections.model.records.get(this.id)
const canUpdate=await kiss.acl.check({action:"update",record:modelRecord})
if(!config.id)config.id=kiss.tools.shortUid()
const modelSections=this.items.filter(item=>item.type=="panel")
const hasSections=(modelSections.length>0)
if(!hasSections){this.items.push(config)}else{if(!sectionId){const lastSection=this.items[this.items.length-1]
lastSection.items.push(config)}else{this.items.find(section=>section.id==sectionId).items.push(config)}}
this._prepareFieldFormulae()
this._attachAccessorsToRecordClass()
await this.saveItems()
this.fields=this.initFields()
if(config.computed)await this.updateFieldFormula(config.id)
await this.syncViewsWithModelFields()
kiss.context.addFieldToSectionId=null
return config.id}
async updateField(fieldId,config,shouldUpdateFormula){this._updateItemInTree(this,fieldId,config)
this._prepareFieldFormulae()
this._attachAccessorsToRecordClass()
await this.saveItems()
this.fields=this.initFields()
if(shouldUpdateFormula)await this.updateFieldFormula(fieldId)
await this.syncViewsWithModelFields()}
async updateFieldFormula(fieldId){if(kiss.session.isOffline())return
const field=this.getField(fieldId)
await kiss.ajax.request({url:"/command/field/updateFormula",method:"post",body:JSON.stringify({modelId:this.id,fieldId,formula:field.formulaCompiled,computedFields:this.computedFields})})}
async deleteField(fieldId){const field=this.getField(fieldId)
log(`kiss.data.Model - deleteField: ${fieldId} / ${field.label}`)
if(field.primary==true){log("kiss.data.Model - deleteField: could not delete primary field",3)
return false}
field.deleted=true
await this.updateField(fieldId,field)
this.fields=this.initFields()
return true}
async createFirstSection(config){const newSectionId=kiss.tools.shortUid()
const newSection={id:newSectionId,type:"panel",collapsible:true,icon:config.icon||"far fa-file-alt",title:config.title||"Section",acl:config.acl,items:this.items}
this.items=[newSection]
await this.saveItems()
return newSectionId}
async createSection(config,breakItemId){const sections=this.items
let breakIndex
let sectionIndex
sections.forEach((section,index)=>{const itemIndex=section.items.findIndex(item=>item.id==breakItemId)
if(itemIndex!=-1){breakIndex=itemIndex
sectionIndex=index}})
const fieldsInPreviousSection=sections[sectionIndex].items.slice(0,breakIndex)
const fieldsInNewSection=sections[sectionIndex].items.slice(breakIndex)
sections[sectionIndex].items=fieldsInPreviousSection
const newSectionId=kiss.tools.shortUid()
const newSection={id:newSectionId,type:"panel",collapsible:true,icon:config.icon||"far fa-file-alt",title:config.title||"Section",acl:config.acl,items:fieldsInNewSection}
sections.splice(sectionIndex+1,0,newSection)
this.items=sections
await this.saveItems()
return newSectionId}
async updateSection(sectionId,newSectionConfig){this._updateItemInTree(this,sectionId,newSectionConfig)
await this.saveItems()}
async deleteSection(sectionId){for(let i=0;i<this.items.length;i++){const section=this.items[i]
if(section.id==sectionId){if(i==0)return false
const fieldsToMove=section.items
let previousSection=this.items[i-1]
previousSection.items.splice(previousSection.items.length,0,...fieldsToMove)
this.items.splice(i,1)
await this.saveItems()
return true}}}
async moveSection(sectionId,direction){const fromIndex=this.items.findIndex(section=>section.id==sectionId)
if(fromIndex==-1)return false
const toIndex=(direction=="down")?fromIndex+1:fromIndex-1
const tempSection=this.items[fromIndex]
this.items[fromIndex]=this.items[toIndex]
this.items[toIndex]=tempSection
await this.saveItems()
return true}
getSection(sectionId){let section=this.items.find(section=>section.id==sectionId)
if(section)return section
return this.getSectionByTitle(sectionId)}
getSectionByTitle(sectionTitle){let section=this.items.find(section=>section.title&&section.title.toLowerCase()==sectionTitle.toLowerCase())
if(section)return section
section=this.items.find(section=>section.id.toLowerCase()==sectionTitle.toLowerCase())
return section}
getViews(){let accountViews=kiss.app.collections["view"]
if(!accountViews)return
let viewRecords=accountViews.records
let connectedViews=viewRecords.filter(view=>view.modelId==this.id)
return connectedViews}
getViewsByUser(userId){const views=this.getViews()
const userACL=kiss.directory.getUserACL(userId)
if(kiss.session.isOwner)return views
return views.filter(view=>{return!!view.authenticatedCanRead==true||kiss.tools.intersects(view.accessRead,userACL)||view.createdBy==userId})}
defineRelationships(){const modelProblems=[]
const fields=this.fields.filter(field=>!field.deleted)
fields.filter(field=>field.type=="link").forEach(field=>{try{let targetLinkModel=kiss.app.getModel(field.link.modelId||field.link.model)
let primaryKeyField=targetLinkModel.getPrimaryKeyField()
const linkToFieldId=field.link.fieldId||field.link.field
if(!linkToFieldId){modelProblems.push(`kiss.data.Model - The link field <${this.name + " / " + field.label}> points to a foreign field that is not properly defined`)
modelProblems.push(`kiss.data.Model - Foreign field config was:`)
modelProblems.push(JSON.stringify(field.link,null,4))
return}
let linkToField=targetLinkModel.getField(linkToFieldId)
if(!linkToField){field.type="text"
modelProblems.push(`kiss.data.Model - The link field <${this.name + " / " + field.label}> points to a foreign field that can't be found`)
return}
field.link.modelId=targetLinkModel.id
field.link.fieldId=linkToField.id
primaryKeyField.sourceFor=primaryKeyField.sourceFor||[]
let newSource={modelId:this.id,modelName:this.name,fieldId:field.id,fieldName:field.label,type:"link"}
if(!primaryKeyField.sourceFor.includesObject(newSource))primaryKeyField.sourceFor.push(newSource)
primaryKeyField.sourceFor=primaryKeyField.sourceFor.uniqueObject("fieldId")
let hasMany=field.multiple
let toModel=(hasMany)?targetLinkModel.namePlural.toTitleCase():targetLinkModel.name.toTitleCase()
let space1=(" ").repeat(40-this.name.length)
let space2=(" ").repeat(40-toModel.length)
log(`kiss.data.Model - ${this.name.toTitleCase() + space1} -> ${(hasMany) ? "N" : "1"} ${toModel}`+space2+" (link field: "+field.label+")",1)}catch(err){field.type="text"
modelProblems.push(`kiss.data.Model - The link field <${this.name + " / " + field.label}> points to a foreign model that can't be found`)}})
fields.filter(field=>field.type=="lookup").forEach(field=>{try{let lookupLinkField=this.getField(field.lookup.linkId||field.lookup.link)
let lookupLinkedModel=kiss.app.models[lookupLinkField.link.modelId]
let lookupSourceField=lookupLinkedModel.getField(field.lookup.fieldId||field.lookup.field)
field.lookup.linkId=lookupLinkField.id
field.lookup.fieldId=lookupSourceField.id
field.lookup.type=lookupSourceField.type
if(field.lookup.type=="number")field.precision=lookupSourceField.precision
lookupSourceField.sourceFor=lookupSourceField.sourceFor||[]
let newSource={modelId:this.id,modelName:this.name,fieldId:field.id,fieldName:field.label,type:"lookup"}
if(!lookupSourceField.sourceFor.includesObject(newSource))lookupSourceField.sourceFor.push(newSource)
lookupSourceField.sourceFor=lookupSourceField.sourceFor.uniqueObject("fieldId")}catch(err){field.type="text"
modelProblems.push(`kiss.data.Model - The lookup field <${this.name + " / " + field.label}> points to a model that can't be found`)}})
fields.filter(field=>field.type=="summary").forEach(field=>{try{let summaryLinkField=this.getField(field.summary.linkId||field.summary.link)
let summaryLinkModel=kiss.app.models[summaryLinkField.link.modelId]
let summaryField=summaryLinkModel.getField(field.summary.field||field.summary.fieldId)
field.summary.linkId=summaryLinkField.id
field.summary.fieldId=summaryField.id
field.summary.type=summaryField.type
if(field.summary.type=="number")field.precision=summaryField.precision
summaryField.sourceFor=summaryField.sourceFor||[]
let newSource={modelId:this.id,modelName:this.name,fieldId:field.id,fieldName:field.label,type:"summary"}
if(!summaryField.sourceFor.includesObject(newSource))summaryField.sourceFor.push(newSource)
summaryField.sourceFor=summaryField.sourceFor.uniqueObject("fieldId")}catch(err){field.type="text"
modelProblems.push(`kiss.data.Model - The summary field <${this.name + " / " + field.label}> points to a model that can't be found`)}})
modelProblems.forEach(warning=>log(warning,3))}
exportAsJSON(){return{id:this.id,name:this.name,namePlural:this.namePlural,icon:this.icon,color:this.color,items:this.items.map(section=>{section.items=section.items.filter(item=>!item.deleted).map(this._sanitizeFieldProperties)
return section}),features:this.features}}
_notifyUser(msgData){if(msgData.userId==kiss.session.getUserId())return
let msgEvent
let object
if(msgData.channel=="EVT_DB_UPDATE_BULK"){msgEvent=txtTitleCase("#msg update")
object="#some data"}else{const event=msgData.channel.split(":")[0]
const modelId=msgData.channel.split(":")[1]
if(event.includes("INSERT"))msgEvent=txtTitleCase("#msg insert")
else if(event.includes("UPDATE"))msgEvent=txtTitleCase("#msg update")
else if(event.includes("DELETE"))msgEvent=txtTitleCase("#msg delete")
if(kiss.tools.isUid(modelId.toLowerCase()))object="#a record"
else if(modelId=="VIEW")object="#a view"
else if(modelId=="MODEL")object="#a model"
else object="#some data"}
createNotification({message:txtTitleCase(msgEvent,null,{user:kiss.directory.getEntryName(msgData.userId),object:txt(object)}),top:0,duration:3000})}
_updateItemInTree(node,itemId,config){if(node.id==itemId){Object.assign(node,config)}else if(node.items){for(let i=0;i<node.items.length;i++){this._updateItemInTree(node.items[i],itemId,config)}}}
_sanitizeFieldProperties(field){delete field.formulaCompiled
delete field.formulaSourceFields
delete field.formulaSourceFieldIds
if((field.type=="lookup")||(field.type=="summary"))delete field.formula
delete field.sourceFor
if(field.type=="link")delete field.link.model
delete field.target
let exportedField={}
Object.keys(field).sortAlpha().forEach(property=>exportedField[property]=field[property])
return exportedField}
_convertFieldTypeToColumnType(field){if(field.type=="lookup"){return field.lookup.type}else if(field.type=="summary"){return field.summary.type}else return field.type}
_prepareFieldFormulae(){const fields=this.getVisibleFields()
for(let i=0;i<fields.length;i++){let field=fields[i]
if(field.type=="lookup"){field.formula=`this._computeLookupField("${field.id}")`}
if(field.type=="summary"){field.formula=`this._computeSummaryField("${field.id}")`}
if(field.computed){this.computedFields.push(field.id)
this.computedFields=this.computedFields.unique()
field.formulaSourceFields=[].concat(this._getFormulaSourceFields(field.formula)).unique()
field.formulaSourceFieldIds=[].concat(field.formulaSourceFields.map(sourceFieldName=>{let sourceField
const fieldIndex=Number(sourceFieldName)
const isFieldIndex=Number.isInteger(fieldIndex)
if(isFieldIndex){sourceField=fields[fieldIndex]}else{sourceField=this.getFieldByLabel(sourceFieldName)}
if(sourceField)return sourceField.id
return sourceFieldName})).unique()
let formula=field.formula
field.formulaSourceFields.forEach(sourceFieldId=>{const fieldIndex=Number(sourceFieldId)
const isFieldIndex=Number.isInteger(fieldIndex)
const search="{{"+sourceFieldId+"}}"
const field=(isFieldIndex)?fields[fieldIndex]:fields.find(sourceField=>sourceField.label==sourceFieldId)
const fieldId=(field)?field.id:sourceFieldId
const replace=`this["${fieldId}"]`
formula=formula.replaceAll(search,replace)})
field.formulaCompiled=formula}}}
_getFormulaSourceFields(formula){let regex=new RegExp("{{(.*?)}}","g")
let text,fieldIds=[]
while(text=regex.exec(formula))fieldIds.push(text[0].substring(2,text[0].length-2))
return fieldIds.unique()}
_getPluginFieldLabel(field){const pluginId=field.pluginId
const plugin=kiss.plugins.get(pluginId)
if(!plugin)return field.label.toTitleCase()
const pluginField=plugin.fields.find(f=>f.id==field.id)
if(!pluginField)return field.label.toTitleCase()
const fieldLabel=pluginField.label
const pluginTexts=plugin.texts
const translatedLabel=(pluginTexts)?txtTitleCase(fieldLabel,pluginTexts):txtTitleCase(fieldLabel)
return translatedLabel}
_attachMethodsToRecordClass(){const RecordClass=kiss.data.Record[this.id]
Object.keys(this.methods).forEach(methodName=>{RecordClass.prototype[methodName]=this.methods[methodName]})}
_attachAccessorsToRecordClass(){const _this=this
const RecordClass=kiss.data.Record[this.id]
const fields=this.fields
fields.filter(field=>field.type=="lookup"||field.type=="summary").forEach(field=>{Object.defineProperty(RecordClass.prototype,field.id,{get:function(){try{return eval(field.formulaCompiled)}catch(err){log("kiss.data.Record - Computed field: couldn't evaluate formula for field <"+field.label+">",4,field.formulaCompiled)
log("kiss.data.Record - Computed field:",4,err)
return"Formula error"}},set:function(value){return},configurable:true})})}};kiss.data.RecordFactory=function(modelId){const Record=class{constructor(recordData){this.model=kiss.app.models[modelId]
this.db=this.model.db
if(!recordData){this.id=uid()
this.createdAt=new Date().toISOString()
this.createdBy=kiss.session.getUserId()
this.setDefaultValues()
this.computeFields()}else{this.id=recordData.id||uid()
Object.assign(this,recordData)}
return this}
setDefaultValues(){const primaryKeyField=this.model.getPrimaryKeyField()
this.model.getFields().forEach(field=>{if(field.value){let defaultValue
switch(field.value){case"username":defaultValue=kiss.session.getUserId()
break
case"today":defaultValue=new Date().toISO()
break
case"now":defaultValue=kiss.tools.getTime()
break
default:defaultValue=field.value}
this[field.id]=defaultValue}else if(field.id==primaryKeyField.id){this[field.id]=primaryKeyField.label}})
return this}
async checkPermission(action){const hasPermission=await kiss.acl.check({action,record:this})
if(!hasPermission){createNotification(txtTitleCase("#not authorized"))
return false}
return true}
hasChanged(data){if(!data)data=this.getSanitizedData()
const currentState=JSON.stringify(data)
if(currentState==this.lastState)return false
this.lastState=currentState
return true}
getSanitizedData(){const data={id:this.id}
this.model.getFields().forEach(field=>{data[field.id]=this[field.id]})
const revisionFields=["createdAt","createdBy","updatedAt","updatedBy","deletedAt","deletedBy"]
revisionFields.forEach(fieldId=>{data[fieldId]=this[fieldId]})
return data}
async save(){let loadingId
try{log("kiss.data.Record - save "+this.id)
const data=this.getSanitizedData()
if(!this.hasChanged(data)){log("kiss.data.Record - save - Record didn't change, exit!")
return false}
console.log("AAA")
const record=this.model.collection.getRecord(this.id)
if(record){return await this.update(data)}
console.log("BBB")
const permission=await this.checkPermission("create")
if(!permission)return false
console.log("CCC")
console.log("---->>>>>>>>>>>>>>>>--------")
console.log(data)
console.log(this.model.id)
loadingId=kiss.loadingSpinner.show()
const response=await this.db.insertOne(this.model.id,data)
console.log("DDD")
kiss.loadingSpinner.hide(loadingId)
return response}catch(err){log("kiss.data.Record - save - Error:",4,err)
kiss.loadingSpinner.hide(loadingId)}}
async read(){let record=await this.db.findOne(this.model.id,this.id)
Object.assign(this,record)
return this}
async update(update){let loadingId
try{log("kiss.data.Record - update "+this.id,0,update)
loadingId=kiss.loadingSpinner.show()
const permission=await this.checkPermission("update")
if(!permission)return false
if(!update)update=this.getSanitizedData()
Object.assign(this,update)
const response=await this.db.updateOne(this.model.id,this.id,update)
kiss.loadingSpinner.hide(loadingId)
return response}catch(err){log("kiss.data.Record - update - Error:",4,err)
kiss.loadingSpinner.hide(loadingId)}}
async delete(sendToTrash){let loadingId
try{log("kiss.data.Record - delete "+this.id)
loadingId=kiss.loadingSpinner.show()
const permission=await this.checkPermission("delete")
if(!permission)return false
await this.db.deleteOne(this.model.id,this.id,sendToTrash)
const transaction=new kiss.data.Transaction()
await this._computeTransactionToDelete(transaction)
const response=await transaction.process()
kiss.loadingSpinner.hide(loadingId)
return response}catch(err){log("kiss.data.Record - update - Error:",4,err)
kiss.loadingSpinner.hide(loadingId)}}
async updateField(fieldId,value,transaction){let loadingId
try{log(`kiss.data.Record - updateField ${this.id} / ${fieldId} / ${value}`)
loadingId=kiss.loadingSpinner.show()
const permission=await this.checkPermission("update")
if(!permission)return false
if(!transaction)transaction=new kiss.data.Transaction()
await this._computeTransactionToUpdate(fieldId,value,transaction)
const response=await transaction.process()
kiss.loadingSpinner.hide(loadingId)
return response}catch(err){log("kiss.data.Record - updateField - Error:",4,err)
kiss.loadingSpinner.hide(loadingId)}}
async linkTo(foreignRecord,localLinkFieldId,foreignLinkFieldId){let loadingId
try{log(`kiss.data.Record - linkTo ${this.id} / ${foreignRecord.id}`)
loadingId=kiss.loadingSpinner.show()
const linkModel=kiss.app.models.link
const newLink=linkModel.create({id:kiss.tools.uid(),mX:this.model.id,fX:localLinkFieldId,rX:this.id,mY:foreignRecord.model.id,fY:foreignLinkFieldId,rY:foreignRecord.id})
await newLink.save()
const transaction=new kiss.data.Transaction()
await this._computeTransactionToUpdateLinks(transaction)
const response=await transaction.process()
kiss.loadingSpinner.hide(loadingId)
return response}catch(err){log("kiss.data.Record - linkTo - Error:",4,err)
kiss.loadingSpinner.hide(loadingId)}}
async deleteLink(linkId){let loadingId
try{log(`kiss.data.Record - deleteLink ${this.id} / ${linkId}`)
loadingId=kiss.loadingSpinner.show()
const linkModel=kiss.app.models.link
const linkRecord=await linkModel.collection.findOne(linkId)
const result=await linkRecord.delete()
if(!result)return false
const transaction=new kiss.data.Transaction()
await this._computeTransactionToUpdateLinks(transaction)
const response=await transaction.process()
kiss.loadingSpinner.hide(loadingId)
return response}catch(err){log("kiss.data.Record - linkTo - Error:",4,err)
kiss.loadingSpinner.hide(loadingId)}}
computeFields(updatedFieldId,changes={},depth=0){if(depth++>5){return changes}
this.model.computedFields.forEach((computedFieldId)=>{const computedField=this.model.getField(computedFieldId)
if(!updatedFieldId||computedField.formulaSourceFieldIds.includes(updatedFieldId)||(computedField.summary&&computedField.summary.linkId==updatedFieldId)||(computedField.lookup&&computedField.lookup.linkId==updatedFieldId)){let newComputedFieldValue
try{newComputedFieldValue=eval(computedField.formulaCompiled)}
catch(err){log("kiss.data.Record - computeFields - Error:")
console.log(err)}
if((newComputedFieldValue!==undefined)||(newComputedFieldValue===0)||(newComputedFieldValue==="")){this[computedField.id]=changes[computedField.id]=newComputedFieldValue
this.computeFields(computedField.id,changes,depth)}}})
return changes}
getLinkedRecords(){this._links={}
this.model.fields.filter(field=>field.type=="link").forEach(field=>{this._links[field.id]=this.getLinkedRecordsFrom(field.id)})
return this._links}
getLinkedRecordsFrom(linkFieldId){const links=this.getLinksFrom(linkFieldId)
return links.map(link=>link.record).uniqueObjectId()}
getLinksFrom(linkFieldId){const model=this.model
const foreignLinkField=model.getField(linkFieldId)
const foreignModelId=foreignLinkField.link.modelId
const foreignLinkFieldId=foreignLinkField.link.fieldId
const foreignModel=kiss.app.models[foreignModelId]
const linkModel=kiss.app.models.link
const left=linkModel.collection.records.filter(record=>record.rX==this.id&&record.fX==linkFieldId).map(record=>{return{linkId:record.id,recordId:record.rY}})
const right=(this.model.id==foreignModelId)?[]:linkModel.collection.records.filter(record=>record.rY==this.id&&record.fX==foreignLinkFieldId).map(record=>{return{linkId:record.id,recordId:record.rX}})
const join=left.concat(right)
return join.map(foreignRecordInfo=>{return{linkId:foreignRecordInfo.linkId,record:foreignModel.collection.getRecord(foreignRecordInfo.recordId)}}).filter(link=>link.record)}
async _computeTransactionToUpdateLinks(transaction){const recordUpdates=this.computeFields(null,{})
Object.keys(recordUpdates).forEach(property=>{if(recordUpdates[property]==undefined)delete recordUpdates[property]})
if(Object.keys(recordUpdates).length>0){transaction.addOperation({modelId:this.model.id,recordId:this.id,updates:recordUpdates})}
this.model.collection._updateOne(this.id,recordUpdates)
let foreignModelTargetFields={}
Object.keys(recordUpdates).forEach(fieldId=>{const field=this.model.getField(fieldId)
if(field.sourceFor){field.sourceFor.forEach(source=>{foreignModelTargetFields[source.modelId]=foreignModelTargetFields[source.modelId]||[]
foreignModelTargetFields[source.modelId].push(source.fieldId)})}})
for(const foreignModelId of Object.keys(foreignModelTargetFields)){const fieldsToUpdateInForeignRecord=foreignModelTargetFields[foreignModelId]
const linkField=this.model.getLinkField(foreignModelId)
if(linkField){const foreignRecordsToUpdate=this.getLinkedRecordsFrom(linkField.id)
for(const foreignRecord of foreignRecordsToUpdate){for(const foreignFieldId of fieldsToUpdateInForeignRecord){const newForeignRecordValue=foreignRecord[foreignFieldId]
await foreignRecord._computeTransactionToUpdate(foreignFieldId,newForeignRecordValue,transaction)}}}}}
async _computeTransactionToUpdate(fieldId,value,transaction){this[fieldId]=value
const recordUpdates=this.computeFields(fieldId,{})
recordUpdates[fieldId]=value
this.model.collection._updateOne(this.id,recordUpdates)
Object.keys(recordUpdates).forEach(property=>{if(recordUpdates[property]==undefined)delete recordUpdates[property]})
if(Object.keys(recordUpdates).length>0){transaction.addOperation({modelId:this.model.id,recordId:this.id,updates:recordUpdates})}
let foreignModelTargetFields={}
Object.keys(recordUpdates).forEach(fieldId=>{const field=this.model.getField(fieldId)
if(field&&field.sourceFor){field.sourceFor.forEach(source=>{foreignModelTargetFields[source.modelId]=foreignModelTargetFields[source.modelId]||[]
foreignModelTargetFields[source.modelId].push(source.fieldId)})}})
for(const foreignModelId of Object.keys(foreignModelTargetFields)){const fieldsToUpdateInForeignRecord=foreignModelTargetFields[foreignModelId]
const linkField=this.model.getLinkField(foreignModelId)
if(linkField){const foreignRecordsToUpdate=this.getLinkedRecordsFrom(linkField.id)
for(const foreignRecord of foreignRecordsToUpdate){for(const foreignFieldId of fieldsToUpdateInForeignRecord){const newForeignRecordValue=foreignRecord[foreignFieldId]
await foreignRecord._computeTransactionToUpdate(foreignFieldId,newForeignRecordValue,transaction)}}}}}
async _computeTransactionToDelete(transaction){let foreignRecordsToUpdate=[]
const linkFields=this.model.fields.filter(field=>field.type=="link")
linkFields.forEach(linkField=>{foreignRecordsToUpdate=foreignRecordsToUpdate.concat(this.getLinkedRecordsFrom(linkField.id))})
for(const foreignRecord of foreignRecordsToUpdate){const recordUpdates=foreignRecord.computeFields(null,{})
Object.keys(recordUpdates).forEach(property=>{if(recordUpdates[property]==undefined)delete recordUpdates[property]})
foreignRecord.model.collection._updateOne(foreignRecord.id,recordUpdates)
for(const foreignFieldId of Object.keys(recordUpdates)){const newForeignRecordValue=foreignRecord[foreignFieldId]
await foreignRecord._computeTransactionToUpdate(foreignFieldId,newForeignRecordValue,transaction)}}}
_computeLookupField(fieldId){let field=this.model.getField(fieldId)
const foreignRecords=this.getLinkedRecordsFrom(field.lookup.linkId)
if(foreignRecords.length==0){return""}else if(foreignRecords.length==1){return foreignRecords[0][field.lookup.fieldId]}else{return this._summarizeField(foreignRecords,field.lookup.fieldId,"LIST")}}
_computeSummaryField(fieldId){let field=this.model.getField(fieldId)
const foreignRecords=this.getLinkedRecordsFrom(field.summary.linkId)
if(foreignRecords.length==0){if(field.summary.type=="number")return 0
return""}
return this._summarizeField(foreignRecords,field.summary.fieldId,field.summary.operation,field.precision)}
_summarizeField(records,fieldId,operation,precision){let values=[]
records.forEach(record=>{if(record)values.push(record[fieldId])})
if(operation=="CONCATENATE"||operation=="LIST"){return kiss.tools[operation](...values)}else{if(precision)return Number((kiss.tools[operation](...values)).toFixed(precision))
return Number(kiss.tools[operation](...values))}}
getData(config={},skipIds){const recordData={id:this.id}
const modelId=this.model.id
const skipModelIds=(Array.isArray(skipIds))?skipIds:[]
skipModelIds.push(modelId)
this.model.getFields().filter(field=>!field.deleted).forEach(field=>{const fieldLabel=(config.useLabels==true)?field.label:(field.id||field.label)
if(field.type=="link"){const linkedModelId=field.link.modelId
if(skipModelIds.indexOf(linkedModelId)==-1){const linkedRecords=this.getLinkedRecordsFrom(field.id)
const connectedRecords=[]
linkedRecords.forEach(linkedRecord=>{connectedRecords.push(linkedRecord.getData(config,skipModelIds))})
recordData[fieldLabel]=connectedRecords}}else{let value=this[field.id]
if(config.numberAsText&&(field.type=="number"||(field.type=="lookup"&&field.lookup.type=="number")||(field.type=="summary"&&field.summary.type=="number"))){const precision=(field.precision!=undefined)?field.precision:2
value=Number(value).round(precision).toFixed(precision)}
if(value==undefined)value=""
recordData[fieldLabel]=value}})
return recordData}
getRawData(){return kiss.tools.snapshot(this)}}
return Record};kiss.data.Transaction=class Transaction{constructor(config={}){this.id=config.id||uid()
this.operations=config.operations||[]
return this}
addOperation(operation){this.operations.push(operation)
return this}
async process(){if(this.operations.length==0){return{success:true}}
kiss.tools.timer.start()
let groupedOperations={}
this.operations.forEach(operation=>{const modelId=operation.modelId
const recordId=operation.recordId
groupedOperations[modelId]=groupedOperations[modelId]||{}
groupedOperations[modelId][recordId]=groupedOperations[modelId][recordId]||{}
Object.assign(groupedOperations[modelId][recordId],operation.updates)})
let flatOperations=[]
Object.keys(groupedOperations).forEach(modelId=>{const modelOperations=groupedOperations[modelId]
Object.keys(modelOperations).forEach(recordId=>{const recordOperations=modelOperations[recordId]
if(Object.keys(recordOperations).length==0)return
flatOperations.push({modelId,recordId,updates:recordOperations})})})
let success
if(flatOperations.length==1){log(`kiss.data.Transaction - updateOne`)
const operation=flatOperations[0]
success=await kiss.db.updateOne(operation.modelId,operation.recordId,operation.updates)}
else{log(`kiss.data.Transaction - updateBulk`)
success=await kiss.db.updateBulk(flatOperations)}
if(!success){this._rollback()}else{this._commit()}
log(`kiss.data.Transaction - Processed ${this.operations.length} operation(s)`)
return success}
_commit(){}
_rollback(){}};kiss.data.trash={async getRecords(modelId){const query={sort:[{deleteAt:"desc"}]}
if(modelId){query.filter={sourceModelId:this.modelId}
query.filterSyntax="mongo"}
return await kiss.app.collections.trash.find(query,true)},async showRecords(config){if(!config)return
if(!config.modelId)return
const temporaryCollection=new kiss.data.Collection({id:"temp_"+uid(),model:kiss.app.models.trash})
Object.assign(temporaryCollection,{filter:config.filter||{sourceModelId:config.modelId},sort:config.sort||[{deletedAt:"desc"}],filterSyntax:config.filterSyntax||"mongo",sortSyntax:config.sortSyntax||"normalized"})
const model=kiss.app.models[config.modelId]
if(!model)return
const columns=model.getFieldsAsColumns().slice(0,10)
const tempPanelId=kiss.tools.shortUid()
const datatable=createDatatable({type:"datatable",model:model,collection:temporaryCollection,columns,canFilter:false,canGroup:false,color:model.color,showHeader:true,showToolbar:true,canSelect:false,canEdit:false,canAddField:false,canEditField:false,canCreateRecord:false,iconAction:"fas fa-recycle",methods:{selectRecord:async(record)=>{createDialog({title:txtTitleCase("#restore"),icon:"fas fa-recycle",message:txtTitleCase("#restore confirm"),action:async()=>{const success=await kiss.data.trash.restoreRecord(record.id)
if(!success)createNotification(txtTitleCase("#restore error"))
$(tempPanelId).close()}})}}})
createPanel({id:tempPanelId,modal:true,closable:true,expandable:true,draggable:true,title:txtTitleCase("#deleted records")+" <b>"+model.namePlural+"</b>",icon:model.icon,headerBackgroundColor:model.color,display:"flex",layout:"vertical",width:()=>kiss.screen.current.width-200,height:()=>kiss.screen.current.height-200,align:"center",verticalAlign:"center",autoSize:true,items:[{flex:1,layout:"vertical",items:[datatable]}],events:{onclose:()=>temporaryCollection.destroy()}}).render()},async restoreRecord(recordId){log("kiss.data.trash - Restore record "+recordId)
const record=await kiss.app.collections.trash.findOne(recordId,true)
const recordData=record.getRawData()
const model=kiss.app.models[recordData.sourceModelId]
delete recordData.sourceModelId
const newRecord=model.create(recordData)
const success=await newRecord.save()
if(success){await record.delete()
return true}
return false}};kiss.acl={async check({action,record}){const userACL=kiss.session.getACL()
const model=record.model
try{const acl=model.acl
if(!acl)return true
const permissions=acl.permissions
if(!permissions)return true
const permissionRules=permissions[action]
if(!permissionRules)return true
for(rule of permissionRules){let hasPermission=true
const validators=Object.keys(rule)
for(validator of validators){const ruleTestValue=rule[validator]
const ruleFunction=acl.validators[validator]
if(ruleFunction){const permissionCheck=await ruleFunction({userACL,model,record})
if(permissionCheck!=ruleTestValue)hasPermission=false
log(`kiss.acl - check (client) - ${action} - Model: ${model.name} ${record.id.slice(0, 7)}... Permission: ${validator} = ${permissionCheck} - Access ${(hasPermission) ? "granted" :  "denied"}`,(hasPermission)?2:4)}
else{log(`kiss.acl - check (client) - Error: validator function <${validator}> is not defined for model ${model.id}`,4)}}
if(hasPermission)return true}
return false}catch(err){log(`kiss.acl - check (client) - Validator error - Model: ${record.model.id}`,4,err)
return false}},async filter({data}){const userACL=kiss.session.getACL()
const firstRecord=data[0]
const model=firstRecord.model
try{const acl=model.acl
if(!acl)return true
const permissions=acl.permissions
if(!permissions)return true
const permissionRules=permissions.read
if(!permissionRules)return true
let hasPermission
let result=[]
for(record of data){for(rule of permissionRules){const validators=Object.keys(rule)
hasPermission=true
for(validator of validators){const ruleTestValue=rule[validator]
const ruleFunction=acl.validators[validator]
if(ruleFunction){const permissionCheck=await ruleFunction({userACL,record})
log("kiss.acl - filter (client) - Permission: "+validator+" / "+permissionCheck,(permissionCheck)?2:4)
if(permissionCheck!=ruleTestValue){hasPermission=false
break}}}
if(hasPermission)break}
if(hasPermission)result.push(record)}
return result}catch(err){log(`kiss.acl - filter (client) - Validator error - Model: ${model.id} / Validator: ${validator}`,4,err)
return false}}};kiss.ajax={timeout:30000,headers:{"Accept":"application/json","Content-Type":"application/json; charset=UTF-8"},setHeaders(headers){kiss.ajax.headers=headers},async request(params){log(`kiss.ajax - request - ${params.method}: ${params.url}`)
let options={method:params?.method?.toUpperCase()||"GET",headers:kiss.ajax.headers}
const token=kiss.session.getToken()
if(token)options.headers["Authorization"]="Bearer "+token
if(params.accept)options.headers["Accept"]=params.accept
if(params.authorization)options.headers["Authorization"]=params.authorization
if(params.accessControlAllowOrigin)options.headers["Access-Control-Allow-Origin"]=params.accessControlAllowOrigin
if(params.accessControlAllowHeaders)options.headers["Access-Control-Allow-Headers"]=params.accessControlAllowHeaders
if(params.body)options.body=params.body
if(params.contentType){if(params.contentType=="multipart/form-data"){delete options.headers["Content-Type"]}else{options.headers["Content-Type"]=params.contentType}}else{options.headers["Content-Type"]="application/json; charset=UTF-8"}
const timeout=params.timeout||kiss.ajax.timeout
const abortController=new AbortController()
options.signal=abortController.signal
setTimeout(()=>abortController.abort(),timeout)
let loadingId
if(params.showLoading){loadingId=kiss.loadingSpinner.show()}
return fetch(params.url,options).then(async response=>{if(params.showLoading){loadingId=kiss.loadingSpinner.hide(loadingId)}
switch(response.status){case 401:kiss.session.showLogin()
return false
case 498:const newToken=await kiss.session.getNewToken()
if(newToken){const originalResponse=await kiss.ajax.request(params)
return originalResponse}
break
case 403:createNotification(txtTitleCase("#not authorized"))
default:return response.json().then(data=>{return data}).catch(err=>{})}}).catch(err=>{if(err.name=="AbortError"){log("kiss.ajax - request - Timeout!",4)
createNotification(txtTitleCase("#error slow connection"))}else{log("kiss.ajax - request - Error:",4,err)
log("kiss.ajax - The original request was:",4,params)}
if(params.showLoading){loadingId=kiss.loadingSpinner.hide(loadingId)}
return false})},setTimeout(timeout){if(typeof timeout==="number")kiss.ajax.timeout=timeout}};kiss.app={isLoaded:false,formTemplates:{},viewTemplates:{},models:{},collections:{},defineModel(model){return new kiss.data.Model(model)},defineModelRelationships(){Object.values(kiss.app.models).filter(model=>kiss.tools.isUid(model.id)).forEach(model=>model.defineRelationships())},getModel(modelId){const model=kiss.app.models[modelId]
if(model)return model
return kiss.app.getModelByName(modelId)},getModelByName(modelName){return Object.values(kiss.app.models).find(model=>(model.name.toLowerCase()==modelName.toLowerCase()))},getCollectionByModelName(modelName){return Object.values(kiss.app.collections).find(collection=>(collection.model.name.toLowerCase()==modelName.toLowerCase()))},listCollections(){Object.values(kiss.app.collections).forEach(collection=>{console.log(`id: ${collection.id}, name: ${collection.model.name}, records: ${collection.records.length}`)})},defineView(id,viewBuilder){kiss.views.addView(id,viewBuilder)},defineViewController(id,viewController){kiss.views.addViewController(id,viewController)},definePlugin(plugin){kiss.plugins.add(plugin)},async init(){kiss.theme.init()
kiss.language.init()
kiss.screen.observe()
kiss.router.init()
const newRoute=kiss.router.getRoute()
if(!kiss.router.isPublicRoute())await kiss.session.restore()
kiss.router.navigateTo(newRoute)
log("😘 Powered by KissJS, Keep It Simple Stupid Javascript. You can explore the library in the object below:",0,kiss)}};const templates=kiss.app.viewTemplates
const formTemplates=kiss.app.formTemplates;kiss.context={history:[],lastContext:{},changes:{},update(newContext){let{history,...currentContext}=kiss.tools.snapshot(kiss.context)
kiss.context.lastContext=currentContext
kiss.context.history.push(currentContext)
Object.keys(newContext).forEach(key=>kiss.context[key]=newContext[key])},hasChanged(contextName){let isNew=(this.history.length<=1)
let propertiesToCheck=Object.keys(kiss.tools.snapshot(this))
let lastContext=kiss.context.history[kiss.context.history.length-1]
propertiesToCheck.forEach(property=>{if(property!="history")this.changes[property]=(isNew)?false:(kiss.context[property]!=lastContext[property])})
if(contextName)return this.changes[contextName]
return this.changes}};kiss.directory={users:[],groups:[],colors:{},async init(){this.users=await kiss.app.collections.user.find()
this.groups=await kiss.app.collections.group.find()
if(this.users)this.directory=this.users.concat(this.groups)
kiss.directory.rolePublic={type:"role",label:txtTitleCase("public"),value:"*"}
kiss.directory.roleAuthenticated={type:"role",label:txtTitleCase("authenticated users"),value:"$authenticated"}
kiss.directory.roleCreator={type:"role",label:txtTitleCase("the creator of the record"),value:"$creator"}
this._buildIndex()},_buildIndex(){this.index={}
this.users.forEach(user=>this.index[user.email]=user)
this.groups.forEach(group=>this.index[group.id]=group)},getEntry(entryId){return this.index[entryId]},getEntries(entryIds){return entryIds.map(id=>this.index[id]).filter(entry=>entry!=undefined)},getEntryName(userId){const entry=this.getEntry(userId)
if(!entry)return userId
if(entry.users){return entry.name}
else{if(entry.firstName&&entry.lastName){return entry.firstName+" "+entry.lastName}
return entry.email}},getEntryNames(entryIds){const entries=this.getEntries(entryIds)
return entries.map(this.getEntryName)},getUserACL(userId){const userACL=["*",userId]
this.groups.forEach(group=>{if(group.users.includes(userId))userACL.push(group.id)})
return userACL},getUserInitials(user){if(!user.firstName||!user.lastName)return"??"
return(user.firstName[0]+user.lastName[0]).toUpperCase()},getEntryColor(userId){let userColor=kiss.directory.colors[userId]
if(userColor)return userColor
userColor=kiss.tools.getRandomColor(20)
kiss.directory.colors[userId]=userColor
return userColor},getUsers(sortBy="lastName",nameOrder="lastName",sortOrder="asc"){const compareFunction=(sortBy=="firstName")?this._sortByFirstName:this._sortByLastName
const users=kiss.directory.users.filter(user=>user.active!==false).map(user=>{return{type:"user",id:user.email,firstName:user.firstName,lastName:user.lastName,email:user.email,name:(user.firstName&&user.lastName)?((nameOrder=="firstName")?(user.firstName+" "+user.lastName):(user.lastName+" "+user.firstName)):user.email}}).sort(compareFunction)
if(sortOrder=="desc")return users.reverse()
return users},getGroups(sortOrder="asc"){const groups=kiss.directory.groups.map(group=>{return{type:"group",id:group.id,name:group.name}}).sort(this._sortByName)
if(sortOrder=="desc")return groups.reverse()
return groups},_sortByFirstName(a,b){if(a.firstName.toLowerCase()<b.firstName.toLowerCase())return-1
if(a.firstName.toLowerCase()>b.firstName.toLowerCase())return 1
return 0},_sortByLastName(a,b){if(a.lastName.toLowerCase()<b.lastName.toLowerCase())return-1
if(a.lastName.toLowerCase()>b.lastName.toLowerCase())return 1
return 0},_sortByName(a,b){if(a.name.toLowerCase()<b.name.toLowerCase())return-1
if(a.name.toLowerCase()>b.name.toLowerCase())return 1
return 0}};kiss.global={host:window.location.host,viewTypes:[{name:"datatable",icon:"fas fa-table",description:"datatable view"},{name:"calendar",icon:"far fa-calendar-alt",description:"calendar view"},{name:"gallery",icon:"fas fa-th",description:"gallery view"},{name:"kanban",icon:"fab fa-trello",description:"kanban view"}],fieldTypes:[{value:"text",label:"text",icon:"fas fa-font"},{value:"textarea",label:"paragraph",icon:"fas fa-comment-dots"},{value:"number",label:"number",icon:"fas fa-hashtag"},{value:"date",label:"date",icon:"fas fa-calendar"},{value:"time",label:"time",icon:"fas fa-clock"},{value:"select",label:"select",icon:"fas fa-mouse-pointer"},{value:"checkbox",label:"checkbox",icon:"fas fa-check-square"},{value:"attachment",label:"attachment",icon:"fas fa-paperclip"},{value:"directory",label:"collaborators",icon:"fas fa-users"},{value:"color",label:"color",icon:"fas fa-palette"},{value:"colorPicker",label:"color picker",icon:"fas fa-palette"},{value:"icon",label:"icon",icon:"far fa-heart"},{value:"iconPicker",label:"icon picker",icon:"far fa-heart"},{value:"link",label:"link to other records",icon:"fas fa-link"},{value:"lookup",label:"lookup a value on linked records",icon:"fas fa-eye"},{value:"summary",label:"summarize data from linked records",icon:"fas fa-calculator"},{value:"password",label:"password",icon:"fas fa-key"}],componentCount:0,palette:["00CCEE","00AAEE","0075FF","0088CC","004499","007766","008833","00AA99","55CC00","88CC00","FFD139","FFAA00","F77D05","B22222","CC0055","ED3757","EE00AA","CC0088","8833EE","772288","77DDEE","77CCEE","429AFF","66AACC","447799","537772","528866","6FAAA4","91CC66","C3E673","EACD64","FFD480","CCA266","B25959","CC6690","FF8080","EE77CC","AD77EE","7B68EE","815F88","BEDBE0","B4DDED","87BFFF","A1BDCC","6B8699","6E8777","899E91","8AA8A4","BACCAD","D0D8BC","E2D7A1","CCBB99","AFA495","B28C8C","CCBBBB","EAABAB","BBBBBB","999999","777777","555555"]};kiss.language={current:"en",texts:{},missingTexts:[],init(){kiss.language.get()
if(kiss.app.texts)Object.assign(kiss.language.texts,kiss.app.texts)},initHash(){kiss.language.hash={}
Object.keys(kiss.language.texts).forEach(key=>{kiss.language.hash[key.hashCode()]=key})},get(){const navigatorLanguage=(navigator.languages?navigator.languages[0]:navigator.language).substring(0,2)
const storedLanguage=localStorage.getItem("config-language")
kiss.language.current=storedLanguage||navigatorLanguage||"en"
return kiss.language.current},translate(key,customSourceTexts,merge){let translationKey=(!customSourceTexts)?kiss.language.texts[key]:customSourceTexts[key]
let translation=(translationKey)?translationKey[kiss.language.current]:null
let isMissing=false
if(!translation){translation=key
isMissing=true}
if(merge){Object.keys(merge).forEach(key=>{let tag=new RegExp("%"+key,"g")
translation=translation.replace(tag,merge[key])})}
if(isMissing&&kiss.language.missingTexts.indexOf(key)==-1){kiss.language.missingTexts.push(key)
log(`kiss.language - Missing [${kiss.language.current}] translation for [${key}]`,4)}
return translation},set(newLanguage){kiss.language.current=newLanguage
localStorage.setItem("config-language",newLanguage)
document.location.reload()},showMissingTexts(){let i=0
kiss.language.missingTexts.forEach(text=>{console.log(text)
i++})
console.log(`kiss.language - Result: ${i} missing texts for language ${kiss.language.current}`)},showTranslationWindow(){const containerId=kiss.tools.uid()
const items=kiss.language.missingTexts.map(text=>{return{type:"text",label:text,labelPosition:"top",width:"100%",events:{onchange:()=>$(containerId).update()}}})
createPanel({title:"Quick translation for "+kiss.language.current.toUpperCase(),width:()=>kiss.screen.current.width-100,height:()=>kiss.screen.current.height-100,align:"center",verticalAlign:"center",modal:true,draggable:true,closable:true,layout:"horizontal",overflowY:"auto",defaultConfig:{margin:10,borderRadius:10,boxShadow:"var(--shadow-4)"},items:[{id:containerId,layout:"vertical",flex:1,overflowY:"auto",padding:10,items:items,methods:{update:function(){const translationFields=$(containerId).items
const translations={}
translationFields.forEach(field=>{const translation=field.getValue()
if(translation){const translationKey=field.getLabel()
translations[translationKey]={[kiss.language.current]:translation}}})
$("export").setValue(JSON.stringify(translations,null,4))}}},{id:"export",type:"textarea",label:"Export",labelPosition:"top",flex:1,fieldHeight:"100%"}]}).render()},select(){createLanguageWindow()}};const txt=kiss.language.translate
const txtUpperCase=(key,customSourceTexts,merge)=>txt(key,customSourceTexts,merge).toUpperCase()
const txtLowerCase=(key,customSourceTexts,merge)=>txt(key,customSourceTexts,merge).toLowerCase()
const txtTitleCase=(key,customSourceTexts,merge)=>txt(key,customSourceTexts,merge).toTitleCase();kiss.language.texts={"new":{fr:"nouveau"},"edit":{fr:"modifier"},"validate":{fr:"valider"},"cancel":{fr:"annuler"},"delete":{fr:"supprimer"},"back":{fr:"retour"},"save":{fr:"sauver"},"save and exit":{fr:"sauver et sortir"},"#not authorized":{en:"you are not authorized to perform this operation",fr:"vous n'êtes pas autorisé à effectuer cette opération"},"color":{fr:"couleur"},"geometry":{fr:"géométrie"},"#error slow connection":{en:"sorry, your connection is too slow to load data properly",fr:"désolé, votre connexion est trop lente pour charger les données correctement"},"authentication-error":{en:"sorry, we could not authenticate you properly with third party service...",fr:"désolé, nous n'avons pas pu vous authentifier correctement auprès du service externe"},"connection-error":{en:"sorry, it seems you've lost real-time connection with the server...",fr:"désolé, il semble que vous ayez perdu la connexion temps réel avec le serveur..."},"#coming soon":{en:"coming soon",fr:"bientôt disponible"},"#not available yet":{en:"this feature is not available yet but we're working on it!",fr:"cette fonctionnalité n'est pas encore disponible mais nous travaillons dessus !"},"switch language":{fr:"changer de langue"},"select a theme":{fr:"choisir un thème"},"open the map":{fr:"ouvrir la carte"},"logout":{fr:"se déconnecter"},"text":{fr:"texte"},"paragraph":{fr:"paragraphe"},"number":{fr:"nombre"},"date":{fr:"date"},"time":{fr:"heure"},"select":{fr:"liste déroulante"},"checkbox":{fr:"case à cocher"},"attachment":{fr:"fichiers attachés"},"collaborators":{fr:"collaborateurs"},"color picker":{fr:"palette de couleur"},"icon picker":{fr:"palette d'icônes"},"#pick a view type":{en:"pick a view type to display your data",fr:"choisissez un type de vue pour afficher vos données"},"datatable":{fr:"grille de données"},"datatable view":{en:"create a grid view to manage your data as easily as in a spreadsheet",fr:"créez une vue table pour gérer vos données aussi facilement que dans un tableur"},"calendar":{fr:"calendrier"},"calendar view":{en:"visualize your data in a calendar according to the date fields of your forms",fr:"visualisez vos données dans un agenda en fonction des champs date de vos formulaires"},"gallery":{fr:"gallerie"},"gallery view":{en:"display your data by highlighting attached images in your forms",fr:"affichez vos données en mettant en évidence les images jointes à vos formulaires"},"kanban":{fr:"kanban"},"kanban view":{en:"follow your tasks or activity pipelines on a kanban board",fr:"suivez vos tâches ou pipelines d'activités sur un tableau kanban"},"attach files":{fr:"attacher des fichiers"},"select files to upload":{fr:"sélectionner les fichiers à télécharger"},"choose your upload method":{fr:"choisissez votre méthode de téléchargement"},"my device":{fr:"mon ordinateur"},"#upload local help":{en:"drag and drop some files here, or click on the button below to browse your disk...",fr:"glissez déposez des fichiers ici, ou cliquez sur le bouton ci-dessous pour rechercher sur votre disque"},"link (URL)":{fr:"hyperlien (URL)"},"add file from URL":{fr:"ajouter le fichier depuis l'URL"},"enter an URL here":{fr:"entez une URL ici"},"#upload link help":{en:"copy/paste the URL of a file in the field below, click Add file from URL then Upload...",fr:"copiez/collez l'URL d'un fichier dans le champ ci-dessous, cliquez sur Ajouter le fichier depuis l'URL, puis Télécharger"},"web search":{fr:"recherche web"},"take photo":{fr:"prendre une photo"},"#upload webcam help":{en:"please click on Open Webcam button to capture an image...",fr:"merci de cliquer sur Ouvrir la Webcam pour capturer une image..."},"open webcam":{fr:"Ouvrir la webcam"},"#take photo":{en:"click Take photo to add image",fr:"cliquez sur Prendre une photo pour ajouter une image"},"#upload web search help":{en:"search images on the web using the search field below",fr:"recherchez des images sur le web via le champ de recherche ci-dessous"},"enter your search term and press Enter":{fr:"entrez votre recherche et pressez Enter"},"add images from Web search":{fr:"ajouter les images trouvées"},"upload":{fr:"télécharger les fichiers"},"upload %n file(s)":{fr:"télécharger %n fichier(s)"},"#upload drive help":{en:"select files from your %drive account then click on Upload...",fr:"sélectionnez des fichiers depuis votre compte %drive puis cliquez sur Télécharger"},"connect to your %drive account":{fr:"connectez-vous à votre compte %drive"},"#no preview":{en:"sorry, we can't preview this file type:",fr:"désolé, le navigateur ne peut pas prévisualiser ce type de fichier :"},"#connect records":{en:"connecting 2 records",fr:"connecter 2 données"},"#connect confirmation":{en:"are you sure you want to link this record?",fr:"êtes-vous sûr de vouloir connecter cette donnée ?"},"#link to":{en:"link to a record from the table:",fr:"lier à une donnée de la table :"},"#table updated":{en:"user <b> %user </b> updated the form",fr:"l'utilisateur <b> %user </b> a mis à jour le formulaire"},"add a table":{fr:"ajouter une table"},"select your fields":{fr:"Choisissez vos champs"},"columns":{fr:"colonnes"},"select columns":{fr:"sélectionner les colonnes"},"add a column":{fr:"ajouter une colonne"},"sorting options":{fr:"Options de tri"},"to sort":{en:"sort",fr:"trier"},"sort by":{fr:"trier par"},"then by":{fr:"puis par"},"inverse order":{fr:"ordre inverse"},"select a field to sort by":{fr:"Sélectionner le champ à trier"},"add a subgroup":{fr:"ajouter un sous-groupe"},"filter your data":{fr:"Filtrez vos données"},"where field":{fr:"Où le champ"},"operator":{fr:"Opérateur"},"value":{fr:"valeur"},"add a filter":{fr:"ajouter un filtre"},"to filter":{en:"filter",fr:"filtrer"},"actions":{fr:"actions"},"hide all":{fr:"tout cacher"},"show all":{fr:"tout afficher"},"expand all":{fr:"tout déployer"},"collapse all":{fr:"tout condenser"},"group by":{en:"group data by",fr:"grouper par"},"seriously":{en:"seriously?",fr:"Sérieusement ?"},"#too many groups":{en:"grouping on more than 6 fields is not healthy...",fr:"grouper sur plus de 6 champs n'est pas bon pour la santé..."},"#understood":{en:"ok, I understand that",fr:"ok, je comprends bien..."},"show group hierarchy":{fr:"afficher la hiérarchie des groupes"},"download file":{fr:"télécharger le fichier"},"#no links":{en:"this record has no links to %table",fr:"cette donnée n'a pas de liens vers %table"},"#summary":{en:"summary",fr:"aggrégation"},"sum":{fr:"somme"},"#sum":{en:"sum",fr:"som."},"average":{fr:"moyenne"},"#avg":{en:"avg.",fr:"moy."},"#summary sum":{en:"display sum",fr:"afficher les sommes"},"#summary avg":{en:"display average",fr:"afficher les moyennes"},"#no summary":{en:"no summary",fr:"pas de calculs"},"sort ascending":{fr:"trier dans l'ordre croissant"},"sort descending":{fr:"trier dans l'ordre décroissant"},"reset column width":{fr:"réinitialiser la largeur des colonnes"},"cell size":{fr:"taille des cellules"},"compact":{fr:"compact"},"medium":{fr:"moyen"},"tall":{fr:"grand"},"very tall":{fr:"très grand"},"#realtime sync":{en:`Real time update
        <br>
        <br>Warning: if you enable this feature, the view will be updated each time it is modified, by you or another user`,fr:`<b>Mise à jour en temps réel</b>
        <br>
        <br>Attention: si vous activez cette fonctionnalité, la vue sera mise à jour à chaque modification, par vous ou un autre utilisateur`},"#msg insert":{en:"user <b> %user </b> created <b> %object </b>",fr:"l'utilisateur <b> %user </b> a créé <b> %object </b>"},"#msg update":{en:"user <b> %user </b> updated <b> %object </b>",fr:"l'utilisateur <b> %user </b> a mis à jour <b> %object </b>"},"#msg delete":{en:"user <b> %user </b> deleted <b> %object </b>",fr:"l'utilisateur <b> %user </b> a supprimé <b> %object </b>"},"#a record":{en:"a record",fr:"une donnée"},"#a view":{en:"a view",fr:"une vue"},"#a model":{en:"a form / table",fr:"un formulaire / une table"},"#some data":{en:"some data",fr:"des données"}};kiss.loadingSpinner={components:[],_isLoading(){return(this.components.length!=0)},_init(){this.loadingLayer=document.createElement("div")
this.loadingLayer.setAttribute("id","loading-layer")
this.loadingLayer.style.display="fixed"
this.loadingLayer.style.width="100%"
this.loadingLayer.style.height="100%"
document.body.append(this.loadingLayer)},show(){if(!this.loadingLayer)this._init()
this.loadingId=shortUid()
this.components.push(this.loadingId)
this.loadingLayer.showLoading({fullscreen:true,spinnerSize:128})
return this.loadingId},hide(loadingId){this.components=this.components.filter(componentId=>componentId!=loadingId)
if(this.components.length==0)this.loadingLayer.hideLoading()}};kiss.logger={history:[],maxLength:200,types:["*"],categories:["*"],data:true,init(config){kiss.maxLength=config.maxLength||200
kiss.logger.types=config.types||[]
kiss.logger.categories=config.categories||[]
if(config.data===false)kiss.logger.data=false},log(msg,type=0,data){if(typeof msg!="string")return console.log(msg)
const msgCategory=msg.split(" ")[0]
if(!kiss.logger.categories.includes(msgCategory)&&!kiss.logger.categories.includes("*"))return
if(!kiss.logger.types.includes(type)&&!kiss.logger.types.includes("*"))return
let style
switch(type){case 0:style="color: black"
break
case 1:style="color: blue"
break
case 2:style="color: green"
break
case 3:style="color: orange"
break
case 4:style="color: red"
break}
console.log("%c%s",style,msg)
if(data&&kiss.logger.data)console.log(data)
kiss.logger.history.push({msg,type})
if(kiss.logger.history.length>kiss.logger.maxLength)kiss.logger.history.splice(0,1)},show(){console.log(kiss.logger.history)},replay(){kiss.logger.history.forEach(event=>log(event.msg,event.type))}}
const log=kiss.logger.log;kiss.plugins={plugins:[],add(plugin){try{kiss.language.get()
plugin.name=txtTitleCase("name",plugin.texts)
plugin.description=txtTitleCase("description",plugin.texts)
plugin.instructions=txtTitleCase("instructions",plugin.texts)
log("kiss.plugins - Adding plugin <"+plugin.name+">",1,plugin)
kiss.plugins.plugins.push(plugin)}catch(err){log("kiss.plugins - The plugin "+plugin.id+" is not well formatted",4,plugin)}},get(pluginId){if(!pluginId)return kiss.plugins.plugins
return kiss.plugins.plugins.find(plugin=>plugin.id==pluginId)},async init(){for(let plugin of kiss.plugins.plugins){if(plugin.init)await plugin.init()}}};String.prototype.removeExtraSpaces=function(){return this.replace(/\s+/g,' ')}
String.prototype.toTitleCase=function(){return this.charAt(0).toUpperCase()+this.substring(1)}
String.prototype.isNumeric=function(){return!isNaN(parseFloat(this))&&isFinite(this)}
String.prototype.hashCode=function(){let hash=0
let chr
if(this.length===0)return hash
for(let i=0;i<this.length;i++){chr=this.charCodeAt(i)
hash=hash*31+chr
hash|=0}
return hash}
Date.prototype.toISO=function(){return this.toISOString().split("T")[0]}
Date.prototype.toISODateTime=function(){return this.toISO()+" "+this.toLocaleTimeString()}
Date.prototype.addDays=function(days){let date=new Date(this.valueOf())
date.setDate(date.getDate()+days)
return date}
Number.prototype.round=function(precision){return+(Math.round(this+"e+"+precision)+"e-"+precision)}
Number.prototype.toFileSize=function(){let fileSizeMb=Math.round(this/1024/1024)
if(fileSizeMb>0)return fileSizeMb+" MB"
let fileSizeKb=Math.round(this/1024)
if(fileSizeKb>0)return fileSizeKb+" kB"
return this+" B"}
Number.prototype.format=function(precision){return this.toLocaleString(undefined,{minimumFractionDigits:precision,maximumFractionDigits:precision})}
Number.prototype.pad=function(width){if(typeof width!=="number")return this
return String(this).padStart(width,"0")}
Array.prototype.flat=function(){return[].concat.apply([],this)}
Array.prototype.swap=function(idx1,idx2){const tmp=this[idx1]
this[idx1]=this[idx2]
this[idx2]=tmp
return this}
Array.prototype.unique=function(){let arr=[]
for(let i=0;i<this.length;i++){if(!arr.includes(this[i]))arr.push(this[i])}
return arr}
Array.prototype.uniqueObjectId=function(){const ids=this.map(o=>o.id)
return this.filter(({id},index)=>!ids.includes(id,index+1))}
Array.prototype.uniqueObject=function(propertyName){const arr=[]
const references=[]
for(let i=0;i<this.length;i++){const reference=this[i][propertyName]
if(!references.includes(reference)){references.push(reference)
arr.push(this[i])}}
return arr}
Array.prototype.intersect=function(otherArray){return this.filter(item=>otherArray.includes(item))}
Array.prototype.remove=function(item){let index=this.indexOf(item)
if(index!=-1)this.splice(index,1)
return this}
Array.prototype.get=function(itemId){return this.find(item=>item.id===itemId)}
Array.prototype.sortBy=function(propertyName){return this.sort(function(a,b){if(a[propertyName]<=b[propertyName])return-1
return 1})}
Array.prototype.sortAlpha=function(){return this.sort((a,b)=>a.localeCompare(b))}
Array.prototype.removeById=function(itemId){const index=this.findIndex(item=>item.id==itemId)
if(index>-1)this.splice(index,1)
return this}
Array.prototype.forEachAsync=function(fn){return this.reduce((prom,val,idx,arr)=>prom.finally(()=>fn(val,idx,arr)),Promise.resolve())}
Array.prototype.includesObject=function(object){return(JSON.stringify(this).indexOf(JSON.stringify(object))!=-1)}
Event.prototype.stop=function(){this.stopPropagation()
this.preventDefault()}
Element.prototype.deepDelete=function(deleteRoot){while(this.firstElementChild)this.lastElementChild.deepDelete()
if(deleteRoot!==false){if((this.subscriptions)&&(this.subscriptions.length!=0))this.subscriptions.forEach(subscriptionId=>kiss.pubsub.unsubscribe(subscriptionId))
if(this.isContainer)kiss.screen.getResizeObserver().unobserve(this)
if(this._beforeDelete)this._beforeDelete()
if(this.parentNode)this.parentNode.removeChild(this)}};kiss.pubsub={subscriptions:{},channelsNotLogged:["EVT_ROUTE_UPDATED","EVT_CONTAINERS_RESIZED"],publish(channel,messageData){let targetChannel=kiss.pubsub.subscriptions[channel]
if(!targetChannel)return
if(!kiss.pubsub.channelsNotLogged.includes(channel.toUpperCase())){log("kiss.pubsub - publish on channel: "+channel,1,messageData)}
Object.keys(targetChannel).forEach(subscriptionId=>{let fn=targetChannel[subscriptionId]
try{fn(messageData)}
catch(err){log("kiss.pubsub - publish - Error with subscription id: "+subscriptionId,4,err)}})},subscribe(channel,fn,description){let subscriptionId=shortUid()
if(!kiss.pubsub.subscriptions[channel])kiss.pubsub.subscriptions[channel]={}
kiss.pubsub.subscriptions[channel][subscriptionId]=fn
kiss.pubsub.subscriptions[channel][subscriptionId].description=description
return subscriptionId},unsubscribe(subscriptionId){Object.keys(kiss.pubsub.subscriptions).forEach(channel=>{let channelSubscriptions=kiss.pubsub.subscriptions[channel]
Object.keys(channelSubscriptions).forEach(channelSubscriptionId=>{if(channelSubscriptionId==subscriptionId){delete kiss.pubsub.subscriptions[channel][subscriptionId]
return}})})},getCount(){let count=0
Object.keys(kiss.pubsub.subscriptions).forEach(channel=>{let channelSubscriptions=kiss.pubsub.subscriptions[channel]
Object.keys(channelSubscriptions).forEach(()=>count++)})
return count},get(subscriptionId){let subscription
Object.keys(kiss.pubsub.subscriptions).forEach(channel=>{let channelSubscriptions=kiss.pubsub.subscriptions[channel]
Object.keys(channelSubscriptions).forEach(channelSubscriptionId=>{if(channelSubscriptionId==subscriptionId){subscription=kiss.pubsub.subscriptions[channel][subscriptionId]}})})
return subscription},list(showFunction){let counter=0
Object.keys(kiss.pubsub.subscriptions).forEach(channel=>{let channelSubscriptions=kiss.pubsub.subscriptions[channel]
Object.keys(channelSubscriptions).forEach(channelSubscriptionId=>{let subscription=kiss.pubsub.subscriptions[channel][channelSubscriptionId]
let description=kiss.pubsub.subscriptions[channel][channelSubscriptionId].description
log("-----------------------------------------------------------------")
log("Subscription "+counter.pad(5)+" - subscription id: "+channelSubscriptionId,1)
if(description)log("Description: ",2,description)
if(showFunction)log("Function: ",2,subscription)
counter++})})
log("Total number of subscriptions: "+counter)}};const publish=kiss.pubsub.publish
const subscribe=kiss.pubsub.subscribe
const unsubscribe=kiss.pubsub.unsubscribe;kiss.router={publicRoutes:[],init(setup={}){if(setup.beforeRouting)Object.assign(kiss.router.hooks,{beforeRouting:setup.beforeRouting})
if(setup.afterRouting)Object.assign(kiss.router.hooks,{afterRouting:setup.afterRouting})
if(setup.publicRoutes)kiss.router.publicRoutes=setup.publicRoutes
window.onhashchange=async function(){const newRoute=kiss.router.getRoute()
kiss.context.update(newRoute)
if(kiss.router.hooks.afterRouting)await kiss.router.hooks.afterRouting()}},setPublicRoutes(publicRoutes){kiss.router.publicRoutes=publicRoutes},isPublicRoute(){const currentRoute=kiss.router.getRoute().ui
if(!currentRoute)return false
if(kiss.router.publicRoutes.includes(currentRoute))return true
return false},async navigateTo(newRoute,reset){if(typeof newRoute==="string")newRoute={ui:newRoute}
kiss.router.updateUrlHash(newRoute,reset)
if(kiss.router.hooks.beforeRouting){const doRoute=await kiss.router.hooks.beforeRouting(newRoute)
if(!doRoute)return}
window.dispatchEvent(new HashChangeEvent("hashchange"))},getRoute(){return kiss.router._toRoute(window.location.hash.slice(1))},updateUrlHash(newRoute,reset){const currentRoute=kiss.router.getRoute()
const toRoute=(reset)?newRoute:Object.assign(currentRoute,newRoute)
const newHash="#"+kiss.router._toHash(toRoute)
window.history.pushState(toRoute,toRoute.ui,newHash)},_toRoute(hash){const route={}
hash.split("&").forEach(param=>{const paramName=param.split("=")[0]
if(paramName)route[paramName]=param.split("=")[1]})
return route},_toHash(newRoute){const hash=[]
Object.keys(newRoute).forEach(key=>(newRoute[key])?hash.push(key+"="+newRoute[key]):"")
return hash.join("&")},hooks:{beforeRouting:async(newRoute)=>{if(kiss.router.publicRoutes&&newRoute.ui){if(kiss.router.publicRoutes.indexOf(newRoute.ui)!=-1)return true}
if(kiss.app.load&&!kiss.app.isLoaded){const isLoaded=await kiss.app.load()
if(!isLoaded)return false}
return true},afterRouting:async()=>{const newRoute=kiss.router.getRoute()
if(newRoute.ui)await kiss.views.show(newRoute.ui,null,true)
for(route of Object.keys(newRoute)){if(route.startsWith("ui")&&route!="ui")await kiss.views.show(newRoute[route])}
kiss.pubsub.publish("EVT_ROUTE_UPDATED",newRoute)}}};kiss.screen={previous:{width:window.innerWidth,height:window.innerHeight,ratio:window.innerWidth/window.innerHeight},current:{width:window.innerWidth,height:window.innerHeight,ratio:window.innerWidth/window.innerHeight},_update(){kiss.screen.previous=kiss.screen.current
kiss.screen.current={width:window.innerWidth,height:window.innerHeight,ratio:window.innerWidth/window.innerHeight}},_delta(){let deltaWidth=kiss.screen.current.width-kiss.screen.previous.width
let deltaHeight=kiss.screen.current.height-kiss.screen.previous.height
let delta={width:deltaWidth,height:deltaHeight}
return delta},getHeightMinus(...something){let delta=0
something.forEach(function(item){if(typeof item=="number"){delta+=item}else{if(item.indexOf("px")!=-1){delta+=Number(item.substring(0,item.indexOf("px")))}
else{let node=$(item)
if(node){if(!node.offsetHeight)node=node.firstElementChild
delta+=node.offsetHeight}}}})
return(window.innerHeight-delta)},getWidthMinus(...something){let delta=0
something.forEach(function(item){if(typeof item=="number"){delta+=item}else{if(item.indexOf("px")!=-1){delta+=Number(item.substring(0,item.indexOf("px")))}
else{let node=$(item)
if(node){if(!node.offsetWidth)node=node.firstElementChild
delta+=node.offsetWidth}}}})
return(window.innerWidth-delta)},debounce(interval,fn){let timer
return function(event){if(timer)clearTimeout(timer)
timer=setTimeout(fn,interval,event)}},observe(){window.addEventListener("resize",kiss.screen.debounce(100,function(){kiss.screen._update()
kiss.pubsub.publish("EVT_WINDOW_RESIZED",{previous:kiss.screen.previous,current:kiss.screen.current,delta:kiss.screen._delta()})}))},getResizeObserver(){if(kiss.screen.resize)return kiss.screen.resize
kiss.screen.resize=new ResizeObserver(kiss.screen.debounce(100,function(entries){let elements=Array.from(entries).filter(entry=>{if(entry.borderBoxSize[0].blockSize==0)return false
return true}).map(entry=>entry.target.id)
if(elements.length>0)kiss.pubsub.publish("EVT_CONTAINERS_RESIZED",elements)}))
return kiss.screen.resize}};kiss.selection={add(viewId,recordId){let selection=localStorage.getItem("config-"+viewId)
if(!selection)return localStorage.setItem("config-"+viewId,recordId)
let records=selection.split(",")
if(records.indexOf(recordId)!=-1)return null
localStorage.setItem("config-"+viewId,selection+","+recordId)},delete(viewId,recordId){let selection=localStorage.getItem("config-"+viewId)
if(!selection)return null
let records=selection.split(",").remove(recordId)
records=records.filter(recordId=>recordId!="")
localStorage.setItem("config-"+viewId,records.join(","))},get(viewId){let selection=localStorage.getItem("config-"+viewId)
if(!selection)return[]
return selection.split(",")},reset(viewId){let selection=localStorage.getItem("config-"+viewId)
if(!selection)return null
localStorage.removeItem("config-"+viewId)}};kiss.session={loginView:"authentication-login",setLoginView(viewId){this.loginView=viewId},getLoginMethodTypes:()=>[{type:"internal",alias:"i"},{type:"google",alias:"g",text:txtTitleCase("login with")+" Google",icon:"fab fa-google",callback:"/auth/google"},{type:"microsoftAD",alias:"a",text:txtTitleCase("login with")+" Azure AD",icon:"fab fa-microsoft",callback:"/auth/azureAd"},{type:"microsoft365",alias:"m",text:txtTitleCase("login with")+" Microsoft 365",icon:"fab fa-microsoft",callback:"/auth/microsoft"},{type:"linkedin",alias:"l",text:txtTitleCase("login with")+" LinkedIn",icon:"fab fa-linkedin",callback:"/auth/linkedin"},{type:"facebook",alias:"f",text:txtTitleCase("login with")+" Facebook",icon:"fab fa-facebook",callback:"/auth/facebook"},{type:"instagram",alias:"s",text:txtTitleCase("login with")+" Twitter",icon:"fab fa-twitter",callback:"/auth/instagram"},{type:"twitter",alias:"t",text:txtTitleCase("login with")+" Twitter",icon:"fab fa-twitter",callback:"/auth/twitter"}],setLoginMethods(methods){kiss.session.loginMethods=methods},maxIdleTime:1000*60*30,getLoginMethods(){if(!kiss.session.loginMethods){return kiss.session.getLoginMethodTypes().map(method=>method.alias).join("")}else{return kiss.session.loginMethods.map(loginMethodType=>kiss.session.getLoginMethodTypes().find(loginMethod=>loginMethod.type==loginMethodType)).filter(loginMethod=>loginMethod!==undefined).map(loginMethod=>loginMethod.alias).join("")}},isOffline:()=>["memory","offline"].includes(kiss.db.mode),isOnline:()=>!kiss.session.isOffline(),setMaxIdleTime(newIdleTime){this.maxIdleTime=newIdleTime*1000*60},getToken:()=>localStorage.getItem("session-token"),getRefreshToken:()=>localStorage.getItem("session-refresh-token"),getExpiration:()=>localStorage.getItem("session-expiration"),getLastActivity:()=>{const lastActivity=localStorage.getItem("session-lastActivity")
if(lastActivity)return new Date(lastActivity)
else return new Date()},getUserId:()=>(kiss.session.isOffline())?"anonymous":localStorage.getItem("session-userId"),getFirstName:()=>(kiss.session.isOffline())?"anonymous":localStorage.getItem("session-firstName"),getLastName:()=>(kiss.session.isOffline())?"anonymous":localStorage.getItem("session-lastName"),getUserName:()=>(kiss.session.isOffline())?"anonymous":kiss.session.getFirstName()+" "+kiss.session.getLastName(),getAccountId:()=>(kiss.session.isOffline())?"anonymous":localStorage.getItem("session-accountId"),isAccountOwner:()=>(localStorage.getItem("session-isOwner")=="true")||kiss.session.isOffline(),isOwner:(kiss.db.mode=="memory"||kiss.db.mode=="offline"),hooks:{beforeInit:[],afterInit:[],beforeRestore:[],afterRestore:[]},addHook(event,callback){if(["beforeInit","afterInit","beforeRestore","afterRestore"].includes(event))this.hooks[event].push(callback)
return this},_processHook(event,sessionData){if(this.hooks[event].length!=0){this.hooks[event].forEach(hook=>{hook(sessionData)})}},async init(sessionData){await this._processHook("beforeInit",sessionData)
sessionData.isOwner=!!sessionData.isOwner
sessionData.expirationDate=new Date()
sessionData.expirationDate.setSeconds(sessionData.expirationDate.getSeconds()+sessionData.expiresIn)
localStorage.setItem("session-token",sessionData.token)
localStorage.setItem("session-refresh-token",sessionData.refreshToken)
localStorage.setItem("session-expiration",sessionData.expirationDate)
localStorage.setItem("session-userId",sessionData.userId)
localStorage.setItem("session-firstName",sessionData.firstName)
localStorage.setItem("session-lastName",sessionData.lastName)
localStorage.setItem("session-accountId",sessionData.accountId)
localStorage.setItem("session-isOwner",sessionData.isOwner)
Object.assign(this,sessionData)
await kiss.websocket.init().then(()=>{log("kiss.session - restore - Websocket connected")}).catch(err=>{log("kiss.session - restore - Websocket error:",4,err)})
await this._processHook("afterInit",sessionData)},async restore(){await this._processHook("beforeRestore")
if(kiss.session.isOffline()){await this._processHook("afterRestore")
return true}
this.token=this.getToken()
this.refreshToken=this.getRefreshToken()
this.expirationDate=this.getExpiration()
this.userId=this.getUserId()
this.firstName=this.getFirstName()
this.lastName=this.getLastName()
this.accountId=this.getAccountId()
this.isOwner=this.isAccountOwner()
this.lastActivity=this.getLastActivity()
kiss.websocket.init().then(()=>{log("kiss.session - restore - Websocket connected")}).catch(err=>{log("kiss.session - restore - Websocket error:",4,err)})
kiss.session.initActivityTracker()
await this._processHook("afterRestore")},reset(){const propertiesToReset=["token","refreshToken","accountId","userId","isOwner","firstName","lastName","lastActivity","expirationDate"]
propertiesToReset.forEach(prop=>delete this[prop])
localStorage.removeItem("session-token")
localStorage.removeItem("session-refresh-token")
localStorage.removeItem("session-expiration")
localStorage.removeItem("session-userId")
localStorage.removeItem("session-firstName")
localStorage.removeItem("session-lastName")
localStorage.removeItem("session-lastActivity")
localStorage.removeItem("session-accountId")
localStorage.removeItem("session-isOwner")
if(kiss.websocket.connection&&kiss.websocket.connection.readyState){kiss.websocket.connection.close()
kiss.websocket.isAlive=false}},initActivityTracker(){const reportActivity=()=>{this.lastActivity=new Date()
localStorage.setItem("session-lastActivity",new Date())}
document.body.addEventListener("mousemove",kiss.tools.throttle(5*1000,reportActivity))
setInterval(()=>{if(kiss.session.isIddle()){log("kiss.session - activity tracker - You were logged out because considered iddled",1)
kiss.session.logout(this.loginView)}},5000)},isIddle(){if((new Date()-this.getLastActivity())>this.maxIdleTime)return true
return false},getACL(){return kiss.directory.getUserACL(this.userId)},showLogin(){kiss.router.navigateTo({ui:this.loginView})},async login(login){if(!login.token){const data=await kiss.ajax.request({url:"/login",method:"post",showLoading:true,body:JSON.stringify({username:login.username,password:login.password})})
if(data&&data.token){await kiss.session.init(data)
const currentRoute=kiss.router.getRoute()
if(currentRoute&&currentRoute.ui!="authentication-login"){location.reload()}else{return true}}else{return false}}else{const data=await kiss.ajax.request({url:"/verifyToken",method:"post",body:JSON.stringify({token:login.token})})
if(data&&data.token){await kiss.session.init(data)
return true}else{return false}}},logout(redirectTo){kiss.ajax.request({url:"/logout",method:"get"})
kiss.session.reset()
document.location.href=redirectTo
document.location.reload()},async getNewToken(){log("kiss.session - Getting new token...")
const newToken=await kiss.ajax.request({url:"/refreshToken",method:"post",body:JSON.stringify({refreshToken:kiss.session.getRefreshToken()})})
if(newToken){await kiss.session.init(newToken)
return newToken}else{return false}}};kiss.theme={currentColor:"",currentGeometry:"",init(){let localStorageThemeColor=localStorage.getItem("config-themeColor")
if(localStorageThemeColor=="undefined")localStorageThemeColor="light"
let localStorageThemeGeometry=localStorage.getItem("config-themeGeometry")
if(localStorageThemeGeometry=="undefined")localStorageThemeGeometry="default"
kiss.context.themeColor=kiss.theme.currentColor=kiss.router.getRoute().themeColor||localStorageThemeColor
kiss.context.themeGeometry=kiss.theme.currentGeometry=kiss.router.getRoute().themeGeometry||localStorageThemeGeometry
kiss.theme._load(kiss.context.themeColor,kiss.context.themeGeometry)
kiss.theme._observe()},set(color,geometry){localStorage.setItem("config-themeColor",color)
localStorage.setItem("config-themeGeometry",geometry)
kiss.router.navigateTo({themeColor:color,themeGeometry:geometry})},_load(color,geometry){if(color){document.querySelectorAll("link").forEach(link=>{if(link.href.indexOf("styles/colors")!=-1){link.href="../kissjs/ui/styles/colors/"+color+".css"}})}
if(geometry){document.querySelectorAll("link").forEach(link=>{if(link.href.indexOf("styles/geometry")!=-1){link.href="../kissjs/ui/styles/geometry/"+geometry+".css"}})}
kiss.theme.currentColor=color
kiss.theme.currentGeometry=geometry},_observe(){subscribe("EVT_ROUTE_UPDATED",(msgData)=>{if((msgData.themeColor!=kiss.theme.currentColor)||(msgData.themeGeometry!=kiss.theme.currentGeometry))kiss.theme._load(msgData.themeColor,msgData.themeGeometry)})},select(){createThemeWindow()}};kiss.tools={$(id,parentNode){if(parentNode){return parentNode.querySelector("#"+id)}else{return document.getElementById(id)}},uid(){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,c=>(c^crypto.getRandomValues(new Uint8Array(1))[0]&15>>c/4).toString(16))},isUid(str){const RFC4122=/\b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b/;if(str.match(RFC4122))return true
return false},shortUid(size=8){size--
const alphabet="aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ_0123456789"
let id=alphabet[(Math.random()*53)|0]
while(size--)id+=alphabet[(Math.random()*63)|0]
return id},nanoId(t=21){return crypto.getRandomValues(new Uint8Array(t)).reduce(((t,e)=>t+=(e&=63)<36?e.toString(36):e<62?(e-26).toString(36).toUpperCase():e<63?"_":"-"),"")},isCustomModel(modelId){if(kiss.tools.isUid(modelId))return true
return false},isNumber(n){return!isNaN(parseFloat(n))&&isFinite(n);},intersects(array1,array2){if(!array1||!array2)return false
const intersection=array1.filter(item=>array2.includes(item))
return(intersection.length>0)},clone(object){return JSON.parse(JSON.stringify(object))},getUrlParameter(name,url=window.location.href){name=name.replace(/[\[\]]/g,"\\$&")
const regex=new RegExp("[?&]"+name+"(=([^&#]*)|&|#|$)")
const results=regex.exec(url)
if(!results)return null
if(!results[2])return""
return decodeURIComponent(results[2].replace(/\+/g," "))},async copyTextToClipboard(text){await navigator.clipboard.writeText(text)},daysBetweenDates(dateA,dateB){const timeDifference=Math.abs(dateA.getTime()-dateB.getTime())
return Math.floor(timeDifference/(3600*24*1000))},getTime(displaySseconds){const now=new Date()
const hours=now.getHours().pad(2)
const minutes=now.getMinutes().pad(2)
const seconds=now.getSeconds().pad(2)
return hours+":"+minutes+((displaySseconds)?":"+seconds:"")},wait(ms=500){return new Promise(resolve=>setTimeout(resolve,ms))},async waitForElement(id){function rafAsync(){return new Promise(resolve=>{requestAnimationFrame(resolve);})}
let retry=0
while(($(id)===null)&&(retry<20)){await rafAsync()
retry++}
return id},isEventInElement(event,element,delta=0){const rect=element.getBoundingClientRect()
const x=event.clientX
if(x<(rect.left-delta)||x>=(rect.right+delta))return false
const y=event.clientY
if(y<(rect.top-delta)||y>=(rect.bottom+delta))return false
return true},moveToViewport(element){const horizontalDiff=kiss.screen.current.width-(element.offsetLeft+element.clientWidth)
const verticalDiff=kiss.screen.current.height-(element.offsetTop+element.clientHeight)
if(horizontalDiff<0)element.style.left=Math.max(0,element.offsetLeft+horizontalDiff-10)+"px"
if(verticalDiff<0)element.style.top=Math.max(0,element.offsetTop+verticalDiff-10)+"px"
return element},throttle(delay,fn){let lastCall=0
return function(...args){const now=(new Date).getTime()
if(now-lastCall<delay)return
lastCall=now
return fn(...args)}},benchmark(numberOfFields,fieldType,targetDomElementId){kiss.tools.timer.start()
const setConfig=function(i){return{id:"cmp-"+i,type:fieldType||"text",target:targetDomElementId||null,display:"inline-block",placeholder:"Enter a value... ("+i.toString()+")",label:"Label nr "+i.toString()+" : ",labelPosition:"top",height:"32px",width:"200px",margin:"10px",labelWidth:"200px",events:{onchange:function(event){publish("EVT_BENCH_UPDATE_FIELD",{fieldId:this.id,value:event.target.value})}},subscriptions:{EVT_BENCH_UPDATE_FIELD:function(msgData){if(msgData.fieldId!=("cmp-"+i))$("cmp-"+i).setValue(msgData.value)}}}}
for(let i=0;i<numberOfFields;i++){createField(setConfig(i)).render()}
kiss.tools.timer.show("Components built!")},treeify(list,idAttr="id",parentAttr="parent",childrenAttr="children"){let treeList=[]
let lookup={}
list.forEach(function(obj){lookup[obj[idAttr]]=obj
obj[childrenAttr]=[]})
list.forEach(function(obj){if((obj[parentAttr]!=null)&&(obj[parentAttr]!="")){lookup[obj[parentAttr]][childrenAttr].push(obj)}else{treeList.push(obj)}})
return treeList},memoize(func){const cache={}
return(input)=>{log("MEMOIZED:"+input)
if(cache[input])log("!MEMOIZED: sent cached result!")
return cache[input]||(cache[input]=func(input))}},adjustColor(hex,lum){hex=String(hex).replace(/[^0-9a-f]/gi,'')
if(hex.length<6){hex=hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]}
lum=lum||0
let rgb="#",c,i;for(let i=0;i<3;i++){c=parseInt(hex.substring(i*2,i*2+2),16)
c=Math.round(Math.min(Math.max(0,c+(c*lum)),255)).toString(16)
rgb+=("00"+c).substring(c.length)}
return rgb},getRandomColor(restrictTo){const randomIndex=Math.round(Math.random()*(restrictTo||kiss.global.palette.length))
return"#"+kiss.global.palette[randomIndex]},fileToIcon(fileType){const associations=[{extensions:["jpg","jpeg","png","gif","webp","psd"],icon:"fas fa-file",color:"#000000"},{extensions:["doc","docx","odt"],icon:"fas fa-file-word",color:"#00aaee"},{extensions:["csv","xls","xlsx","ods"],icon:"fas fa-file-excel",color:"#09c60B"},{extensions:["ppt","pptx","odp"],icon:"fas fa-file-powerpoint",color:"#ba6044"},{extensions:["pdf"],icon:"fas fa-file-pdf",color:"#dd0000"},{extensions:["html","css","js","jsx"],icon:"fas fa-file-code",color:"#5fabbb"}]
for(association of associations){if(association.extensions.indexOf(fileType)!=-1)return{icon:association.icon,color:association.color}}
return{icon:"fa-file-alt",color:"#556677"}},promisify(f,manyArgs=false){return function(...args){return new Promise((resolve,reject)=>{function callback(err,...results){if(err){reject(err)}else{resolve(manyArgs?results:results[0])}}
args.push(callback)
f.call(this,...args)})}},snapshot(object){let snapshot={}
Object.keys(object).forEach(key=>{const type=typeof object[key]
const safeKey=(key.startsWith("$"))?key.substring(1):key
if(type=="string"||type=="number"||type=="boolean"||Array.isArray(object[key]))snapshot[safeKey]=object[key]})
return snapshot},timer:{time:new Date(),current:0,start(msg){kiss.tools.timer.time=performance.now()
if(msg)log(msg,1)},show(msg){setTimeout(function(){kiss.tools.timer.current=performance.now()-kiss.tools.timer.time
log(`${msg || ""} - ${kiss.tools.timer.current + " ms"}`,1)},0)}},generateTimes(from=0,to=24,step=60,colored){from=(from<0||from>23)?0:from
to=(to<=0||to>24)?24:to
step=(step<=0||step>60)?60:step
if(to<=from){from=0
to=24
step=60}
const colors={night:"#555555",morning:"#0075FF",midday:"#FFAA00",afternoon:"#87BFFF",dawn:"#8833EE"}
const times=[]
for(let h=from*60;h<=to*60&&h<1440;h+=step){let value
const hourValue=Math.floor(h/60)
const hour=("0"+hourValue).slice(-2)
const minutes=("0"+Math.round(h%60)).slice(-2)
if(colored){let color
if(hourValue<5)color=colors.night
else if(hourValue<12)color=colors.morning
else if(hourValue<14)color=colors.midday
else if(hourValue<18)color=colors.afternoon
else if(hourValue<20)color=colors.dawn
else color=colors.night
value={value:hour+":"+minutes,color}}else{value=hour+":"+minutes}
times.push(value)}
return times},SUM:(...numbers)=>numbers.reduce((a,b)=>Number(a)+Number(b),0),MIN:(...numbers)=>Math.min(...numbers),MAX:(...numbers)=>Math.max(...numbers),AVERAGE:(...numbers)=>kiss.tools.SUM(...numbers)/numbers.length,ROUND:(number,precision)=>number.round(precision),SQRT:(number)=>Math.sqrt(number),UPPERCASE:(text)=>text.toUpperCase(),LOWERCASE:(text)=>text.toLowerCase(),TITLECASE:(text)=>text.toTitleCase(),REPLACE:(text,oldText,newText)=>text.replaceAll(oldText,newText),CONCATENATE:(...strings)=>strings.join(""),LIST:(...strings)=>strings.unique().join(", "),YEAR:(strDateISO)=>strDateISO.substring(0,4),MONTH:(strDateISO)=>strDateISO.substring(5,7),DAY:(strDateISO)=>strDateISO.substring(8,10),YEAR_MONTH:(strDateISO)=>strDateISO.substring(0,7),TODAY:()=>(new Date()).toISO(),DAYS_DIFFERENCE:(fromISODate,toISODate)=>{try{let fromDate=new Date(fromISODate)
let toDate=new Date(toISODate)
return Math.ceil((toDate.getTime()-fromDate.getTime())/(1000*3600*24))}catch(err){return 0}},IF:(...params)=>{try{if(params.length<3||params.length%2==0)return false
for(let i=0;i<=params.length-2;i=i+2){if(params[i]==true)return params[i+1]}
return params[params.length-1]}catch(err){return false}},SEQ_NUMBER:(prefix)=>{return prefix+"00000"}};const{SUM,MIN,MAX,AVERAGE,ROUND,SQRT,UPPERCASE,LOWERCASE,TITLECASE,REPLACE,CONCATENATE,LIST,YEAR,MONTH,DAY,YEAR_MONTH,TODAY,DAYS_DIFFERENCE,IF,SEQ_NUMBER}=kiss.tools;const $=kiss.tools.$
const uid=kiss.tools.uid
const shortUid=kiss.tools.shortUid;kiss.undoRedo={log:[],init(config={}){document.addEventListener("keydown",function(e){e.preventDefault
if(e.keyCode===89&&e.ctrlKey){if(config.redo){log("REDO")
log(kiss.undoRedo.log)
config.redo()}}else if(e.keyCode===90&&e.ctrlKey){log("UNDO")
log(kiss.undoRedo.log)
if(!kiss.undoRedo.log.length>0){createNotification(txt("Nothing to undo"))
return}
if(config.undo)config.undo()}})}};kiss.views={views:{},viewBuilders:{},viewControllers:{},cachedNodes:{},addView(id,builder){this.viewBuilders[id]=builder},addViewController(id,controller){this.viewControllers[id]=controller},buildView(id,target){if(!this.views[id]){try{log(`kiss.views - buildView - Building view ${id}`)
const viewBuilder=this.viewBuilders[id]
if(!viewBuilder){log(`kiss.views - You're trying to build the view <${id}>, but it hasn't been defined.`,3)
return null}
const view=this.views[id]=viewBuilder(id,target)
view.isView=true
if(!view.isComponent){const viewControllers=kiss.views.viewControllers[id]
if(viewControllers)
for(let method in viewControllers)
view[method]=viewControllers[method]}}catch(err){log(`kiss.views - buildView - The view ${id} couldn't be built`,4,err)}}
if(target)this.views[id].target=target
return this.views[id]},get(id){return this.views[id]},remove(id){if(this.views[id])delete this.views[id]
let node=$(id)
if(node)node.deepDelete()},show(id,target,exclusive){const view=this.buildView(id)
if(view&&(!view.isConnected||view.hidden)){if(this.getCachedNode(id)!=null){log("kiss.views - The view **was** in cache: "+id)}
else{log("kiss.views - The view **was not** in cache: "+id)}
view.render(target)
if(exclusive){Object.keys(this.views).forEach(function(viewId){if(viewId==view.id)return
const otherView=kiss.views.views[viewId]
if(otherView.parentNode==view.parentNode)kiss.views.removeAndCacheNode(viewId)})}
return view}},replaceBy(id,target){return this.show(id,target,true)},removeAndCacheNode(id){log("kiss.views - Pushed node into cache: "+id)
let node=$(id)
this.cachedNodes[id]={parentId:node.parentNode.id,index:Array.from(node.parentNode.children).indexOf(node),node:node.parentElement.removeChild(node)}
return node},restoreCachedNode(id){log("kiss.views - Restored node from cache: "+id)
let cachedNode=this.cachedNodes[id]
let parentNode=(cachedNode.parentId)?$(cachedNode.parentId):document.body
parentNode.insertBefore(cachedNode.node,parentNode.children[cachedNode.index])
return cachedNode.node},getCachedNode(id){let cachedNode=this.cachedNodes[id]
if(cachedNode){return cachedNode.node}
else{return null}},deleteCachedNode(id){log("kiss.views - Deleted node from cache: "+id)
delete this.cachedNodes[id]}};kiss.webfonts={all:["fab fa-buromobelexperte","fas fa-burn","fas fa-bullseye","fas fa-bullhorn","fas fa-building","far fa-building","fas fa-bug","fab fa-btc","fas fa-briefcase-medical","fas fa-briefcase","fas fa-braille","fas fa-boxes","fas fa-box-open","fas fa-box","fas fa-bowling-ball","fas fa-bookmark","far fa-bookmark","fas fa-book","fas fa-bomb","fas fa-bolt","fas fa-bold","fab fa-bluetooth-b","fab fa-bluetooth","fab fa-blogger-b","fab fa-blogger","fas fa-blind","fab fa-blackberry","fab fa-black-tie","fab fa-bity","fab fa-bitcoin","fab fa-bitbucket","fas fa-birthday-cake","fas fa-binoculars","fab fa-bimobject","fas fa-bicycle","fas fa-bell-slash","far fa-bell-slash","fas fa-bell","far fa-bell","fab fa-behance-square","fab fa-behance","fas fa-beer","fas fa-bed","fas fa-battery-three-quarters","fas fa-battery-quarter","fas fa-battery-half","fas fa-battery-full","fas fa-battery-empty","fas fa-bath","fas fa-basketball-ball","fas fa-baseball-ball","fas fa-bars","fas fa-barcode","fab fa-bandcamp","fas fa-band-aid","fas fa-ban","fas fa-balance-scale","fas fa-backward","fab fa-aws","fab fa-aviato","fab fa-avianex","fab fa-autoprefixer","fas fa-audio-description","fab fa-audible","fas fa-at","fab fa-asymmetrik","fas fa-asterisk","fas fa-assistive-listening-systems","fas fa-arrows-alt-v","fas fa-arrows-alt-h","fas fa-arrows-alt","fas fa-arrow-up","fas fa-arrow-right","fas fa-arrow-left","fas fa-arrow-down","fas fa-arrow-circle-up","fas fa-arrow-circle-right","fas fa-arrow-circle-left","fas fa-arrow-circle-down","fas fa-arrow-alt-circle-up","far fa-arrow-alt-circle-up","fas fa-arrow-alt-circle-right","far fa-arrow-alt-circle-right","fas fa-arrow-alt-circle-left","far fa-arrow-alt-circle-left","fas fa-arrow-alt-circle-down","far fa-arrow-alt-circle-down","fas fa-archive","fab fa-apple-pay","fab fa-apple","fab fa-apper","fab fa-app-store-ios","fab fa-app-store","fab fa-angular","fab fa-angrycreative","fas fa-angle-up","fas fa-angle-right","fas fa-angle-left","fas fa-angle-down","fas fa-angle-double-up","fas fa-angle-double-right","fas fa-angle-double-left","fas fa-angle-double-down","fab fa-angellist","fab fa-android","fas fa-anchor","fab fa-amilia","fas fa-american-sign-language-interpreting","fas fa-ambulance","fab fa-amazon-pay","fab fa-amazon","fas fa-allergies","fas fa-align-right","fas fa-align-left","fas fa-align-justify","fas fa-align-center","fab fa-algolia","fab fa-affiliatetheme","fab fa-adversal","fab fa-adn","fas fa-adjust","fas fa-address-card","far fa-address-card","fas fa-address-book","far fa-address-book","fab fa-accusoft","fab fa-accessible-icon","fab fa-500px","fab fa-youtube-square","fab fa-youtube","fab fa-yoast","fas fa-yen-sign","fab fa-yelp","fab fa-yandex-international","fab fa-yandex","fab fa-yahoo","fab fa-y-combinator","fab fa-xing-square","fab fa-xing","fab fa-xbox","fas fa-x-ray","fas fa-wrench","fab fa-wpforms","fab fa-wpexplorer","fab fa-wpbeginner","fab fa-wordpress-simple","fab fa-wordpress","fas fa-won-sign","fab fa-wolf-pack-battalion","fas fa-wine-glass","fab fa-windows","fas fa-window-restore","far fa-window-restore","fas fa-window-minimize","far fa-window-minimize","fas fa-window-maximize","far fa-window-maximize","fas fa-window-close","far fa-window-close","fab fa-wikipedia-w","fas fa-wifi","fab fa-whmcs","fas fa-wheelchair","fab fa-whatsapp-square","fab fa-whatsapp","fab fa-weixin","fas fa-weight","fab fa-weibo","fas fa-warehouse","fab fa-vuejs","fas fa-volume-up","fas fa-volume-off","fas fa-volume-down","fas fa-volleyball-ball","fab fa-vnv","fab fa-vk","fab fa-vine","fab fa-vimeo-v","fab fa-vimeo-square","fab fa-vimeo","fas fa-video-slash","fas fa-video","fab fa-viber","fas fa-vials","fas fa-vial","fab fa-viadeo-square","fab fa-viadeo","fab fa-viacoin","fas fa-venus-mars","fas fa-venus-double","fas fa-venus","fab fa-vaadin","fas fa-utensils","fas fa-utensil-spoon","fab fa-ussunnah","fas fa-users-cog","fas fa-users","fas fa-user-times","fas fa-user-tie","fas fa-user-tag","fas fa-user-slash","fas fa-user-shield","fas fa-user-secret","fas fa-user-plus","fas fa-user-ninja","fas fa-user-minus","fas fa-user-md","fas fa-user-lock","fas fa-user-graduate","fas fa-user-friends","fas fa-user-edit","fas fa-user-cog","fas fa-user-clock","fas fa-user-circle","far fa-user-circle","fas fa-user-check","fas fa-user-astronaut","fas fa-user-alt-slash","fas fa-user-alt","fas fa-user","far fa-user","fab fa-usb","fas fa-upload","fab fa-untappd","fas fa-unlock-alt","fas fa-unlock","fas fa-unlink","fas fa-university","fas fa-universal-access","fab fa-uniregistry","fas fa-undo-alt","fas fa-undo","fas fa-underline","fas fa-umbrella","fab fa-uikit","fab fa-uber","fab fa-typo3","fab fa-twitter-square","fab fa-twitter","fab fa-twitch","fas fa-tv","fab fa-tumblr-square","fab fa-tumblr","fas fa-tty","fas fa-truck-moving","fas fa-truck-loading","fas fa-truck","fas fa-trophy","fab fa-tripadvisor","fab fa-trello","fas fa-tree","fas fa-trash-alt","far fa-trash-alt","fas fa-trash","fas fa-transgender-alt","fas fa-transgender","fas fa-train","fas fa-trademark","fab fa-trade-federation","fas fa-toggle-on","fas fa-toggle-off","fas fa-tint","fas fa-times-circle","far fa-times-circle","fas fa-times","fas fa-ticket-alt","fas fa-thumbtack","fas fa-thumbs-up","far fa-thumbs-up","fas fa-thumbs-down","far fa-thumbs-down","fas fa-thermometer-three-quarters","fas fa-thermometer-quarter","fas fa-thermometer-half","fas fa-thermometer-full","fas fa-thermometer-empty","fas fa-thermometer","fab fa-themeisle","fas fa-th-list","fas fa-th-large","fas fa-th","fas fa-text-width","fas fa-text-height","fas fa-terminal","fab fa-tencent-weibo","fab fa-telegram-plane","fab fa-telegram","fab fa-teamspeak","fas fa-taxi","fas fa-tasks","fas fa-tape","fas fa-tags","fas fa-tag","fas fa-tachometer-alt","fas fa-tablets","fas fa-tablet-alt","fas fa-tablet","fas fa-table-tennis","fas fa-table","fas fa-syringe","fas fa-sync-alt","fas fa-sync","fab fa-supple","fas fa-superscript","fab fa-superpowers","fas fa-sun","far fa-sun","fas fa-suitcase","fas fa-subway","fas fa-subscript","fab fa-stumbleupon-circle","fab fa-stumbleupon","fab fa-studiovinari","fab fa-stripe-s","fab fa-stripe","fas fa-strikethrough","fas fa-street-view","fab fa-strava","fas fa-stopwatch","fas fa-stop-circle","far fa-stop-circle","fas fa-stop","fas fa-sticky-note","far fa-sticky-note","fab fa-sticker-mule","fas fa-stethoscope","fas fa-step-forward","fas fa-step-backward","fab fa-steam-symbol","fab fa-steam-square","fab fa-steam","fab fa-staylinked","fas fa-star-half","far fa-star-half","fas fa-star","far fa-star","fab fa-stack-overflow","fab fa-stack-exchange","fas fa-square-full","fas fa-square","far fa-square","fab fa-spotify","fas fa-spinner","fab fa-speakap","fas fa-space-shuttle","fab fa-soundcloud","fas fa-sort-up","fas fa-sort-numeric-up","fas fa-sort-numeric-down","fas fa-sort-down","fas fa-sort-amount-up","fas fa-sort-amount-down","fas fa-sort-alpha-up","fas fa-sort-alpha-down","fas fa-sort","fas fa-snowflake","far fa-snowflake","fab fa-snapchat-square","fab fa-snapchat-ghost","fab fa-snapchat","fas fa-smoking","fas fa-smile","far fa-smile","fab fa-slideshare","fas fa-sliders-h","fab fa-slack-hash","fab fa-slack","fab fa-skype","fab fa-skyatlas","fab fa-sith","fas fa-sitemap","fab fa-sistrix","fab fa-simplybuilt","fas fa-signal","fas fa-sign-out-alt","fas fa-sign-language","fas fa-sign-in-alt","fas fa-sign","fas fa-shower","fas fa-shopping-cart","fas fa-shopping-basket","fas fa-shopping-bag","fab fa-shirtsinbulk","fas fa-shipping-fast","fas fa-ship","fas fa-shield-alt","fas fa-shekel-sign","fas fa-share-square","far fa-share-square","fas fa-share-alt-square","fas fa-share-alt","fas fa-share","fab fa-servicestack","fas fa-server","fab fa-sellsy","fab fa-sellcast","fas fa-seedling","fab fa-searchengin","fas fa-search-plus","fas fa-search-minus","fas fa-search","fab fa-scribd","fab fa-schlix","fas fa-save","far fa-save","fab fa-sass","fab fa-safari","fas fa-rupee-sign","fas fa-ruble-sign","fas fa-rss-square","fas fa-rss","fab fa-rockrms","fab fa-rocketchat","fas fa-rocket","fas fa-road","fas fa-ribbon","fas fa-retweet","fab fa-resolving","fab fa-researchgate","fab fa-replyd","fas fa-reply-all","fas fa-reply","fab fa-renren","fab fa-rendact","fas fa-registered","far fa-registered","fas fa-redo-alt","fas fa-redo","fab fa-reddit-square","fab fa-reddit-alien","fab fa-reddit","fab fa-red-river","fas fa-recycle","fab fa-rebel","fab fa-readme","fab fa-react","fab fa-ravelry","fas fa-random","fab fa-r-project","fas fa-quote-right","fas fa-quote-left","fab fa-quora","fab fa-quinscape","fas fa-quidditch","fas fa-question-circle","far fa-question-circle","fas fa-question","fas fa-qrcode","fab fa-qq","fab fa-python","fas fa-puzzle-piece","fab fa-pushed","fab fa-product-hunt","fas fa-procedures","fas fa-print","fas fa-prescription-bottle-alt","fas fa-prescription-bottle","fas fa-power-off","fas fa-pound-sign","fas fa-portrait","fas fa-poo","fas fa-podcast","fas fa-plus-square","far fa-plus-square","fas fa-plus-circle","fas fa-plus","fas fa-plug","fab fa-playstation","fas fa-play-circle","far fa-play-circle","fas fa-play","fas fa-plane","fab fa-pinterest-square","fab fa-pinterest-p","fab fa-pinterest","fas fa-pills","fas fa-piggy-bank","fab fa-pied-piper-pp","fab fa-pied-piper-hat","fab fa-pied-piper-alt","fab fa-pied-piper","fab fa-php","fas fa-phone-volume","fas fa-phone-square","fas fa-phone-slash","fas fa-phone","fab fa-phoenix-squadron","fab fa-phoenix-framework","fab fa-phabricator","fab fa-periscope","fas fa-percent","fas fa-people-carry","fas fa-pencil-alt","fas fa-pen-square","fab fa-paypal","fas fa-paw","fas fa-pause-circle","far fa-pause-circle","fas fa-pause","fab fa-patreon","fas fa-paste","fas fa-paragraph","fas fa-parachute-box","fas fa-paperclip","fas fa-paper-plane","far fa-paper-plane","fas fa-palette","fas fa-pallet","fab fa-palfed","fas fa-paint-brush","fab fa-pagelines","fab fa-page4","fas fa-outdent","fab fa-osi","fab fa-optin-monster","fab fa-opera","fab fa-openid","fab fa-opencart","fab fa-old-republic","fab fa-odnoklassniki-square","fab fa-odnoklassniki","fas fa-object-ungroup","far fa-object-ungroup","fas fa-object-group","far fa-object-group","fab fa-nutritionix","fab fa-ns8","fab fa-npm","fas fa-notes-medical","fab fa-node-js","fab fa-node","fab fa-nintendo-switch","fas fa-newspaper","far fa-newspaper","fas fa-neuter","fab fa-napster","fas fa-music","fas fa-mouse-pointer","fas fa-motorcycle","fas fa-moon","far fa-moon","fas fa-money-bill-alt","far fa-money-bill-alt","fab fa-monero","fab fa-modx","fas fa-mobile-alt","fas fa-mobile","fab fa-mizuni","fab fa-mixcloud","fab fa-mix","fas fa-minus-square","far fa-minus-square","fas fa-minus-circle","fas fa-minus","fab fa-microsoft","fas fa-microphone-slash","fas fa-microphone","fas fa-microchip","fas fa-mercury","fas fa-meh","far fa-meh","fab fa-meetup","fab fa-medrt","fas fa-medkit","fab fa-medium-m","fab fa-medium","fab fa-medapps","fab fa-maxcdn","fab fa-mastodon","fas fa-mars-stroke-v","fas fa-mars-stroke-h","fas fa-mars-stroke","fas fa-mars-double","fas fa-mars","fas fa-map-signs","fas fa-map-pin","fas fa-map-marker-alt","fas fa-map-marker","fas fa-map","far fa-map","fab fa-mandalorian","fas fa-male","fas fa-magnet","fas fa-magic","fab fa-magento","fab fa-lyft","fas fa-low-vision","fas fa-long-arrow-alt-up","fas fa-long-arrow-alt-right","fas fa-long-arrow-alt-left","fas fa-long-arrow-alt-down","fas fa-lock-open","fas fa-lock","fas fa-location-arrow","fas fa-list-ul","fas fa-list-ol","fas fa-list-alt","far fa-list-alt","fas fa-list","fas fa-lira-sign","fab fa-linux","fab fa-linode","fab fa-linkedin-in","fab fa-linkedin","fas fa-link","fab fa-line","fas fa-lightbulb","far fa-lightbulb","fas fa-life-ring","far fa-life-ring","fas fa-level-up-alt","fas fa-level-down-alt","fab fa-less","fas fa-lemon","far fa-lemon","fab fa-leanpub","fas fa-leaf","fab fa-lastfm-square","fab fa-lastfm","fab fa-laravel","fas fa-laptop","fas fa-language","fab fa-korvue","fab fa-kickstarter-k","fab fa-kickstarter","fab fa-keycdn","fas fa-keyboard","far fa-keyboard","fab fa-keybase","fas fa-key","fab fa-jsfiddle","fab fa-js-square","fab fa-js","fab fa-joomla","fab fa-joget","fab fa-jenkins","fab fa-jedi-order","fab fa-java","fab fa-itunes-note","fab fa-itunes","fas fa-italic","fab fa-ioxhost","fab fa-internet-explorer","fab fa-instagram","fas fa-info-circle","fas fa-info","fas fa-industry","fas fa-indent","fas fa-inbox","fab fa-imdb","fas fa-images","far fa-images","fas fa-image","far fa-image","fas fa-id-card-alt","fas fa-id-card","far fa-id-card","fas fa-id-badge","far fa-id-badge","fas fa-i-cursor","fab fa-hubspot","fab fa-html5","fab fa-houzz","fas fa-hourglass-start","fas fa-hourglass-half","fas fa-hourglass-end","fas fa-hourglass","far fa-hourglass","fab fa-hotjar","fas fa-hospital-symbol","fas fa-hospital-alt","fas fa-hospital","far fa-hospital","fab fa-hooli","fas fa-home","fas fa-hockey-puck","fas fa-history","fab fa-hire-a-helper","fab fa-hips","fas fa-heartbeat","fas fa-heart","far fa-heart","fas fa-headphones","fas fa-heading","fas fa-hdd","far fa-hdd","fas fa-hashtag","fas fa-handshake","far fa-handshake","fas fa-hands-helping","fas fa-hands","fas fa-hand-spock","far fa-hand-spock","fas fa-hand-scissors","far fa-hand-scissors","fas fa-hand-rock","far fa-hand-rock","fas fa-hand-pointer","far fa-hand-pointer","fas fa-hand-point-up","far fa-hand-point-up","fas fa-hand-point-right","far fa-hand-point-right","fas fa-hand-point-left","far fa-hand-point-left","fas fa-hand-point-down","far fa-hand-point-down","fas fa-hand-peace","far fa-hand-peace","fas fa-hand-paper","far fa-hand-paper","fas fa-hand-lizard","far fa-hand-lizard","fas fa-hand-holding-usd","fas fa-hand-holding-heart","fas fa-hand-holding","fab fa-hacker-news-square","fab fa-hacker-news","fas fa-h-square","fab fa-gulp","fab fa-grunt","fab fa-gripfire","fab fa-grav","fab fa-gratipay","fas fa-graduation-cap","fab fa-google-wallet","fab fa-google-plus-square","fab fa-google-plus-g","fab fa-google-plus","fab fa-google-play","fab fa-google-drive","fab fa-google","fab fa-goodreads-g","fab fa-goodreads","fas fa-golf-ball","fab fa-gofore","fas fa-globe","fab fa-glide-g","fab fa-glide","fas fa-glass-martini","fab fa-gitter","fab fa-gitlab","fab fa-gitkraken","fab fa-github-square","fab fa-github-alt","fab fa-github","fab fa-git-square","fab fa-git","fas fa-gift","fab fa-gg-circle","fab fa-gg","fab fa-get-pocket","fas fa-genderless","fas fa-gem","far fa-gem","fas fa-gavel","fas fa-gamepad","fab fa-galactic-senate","fab fa-galactic-republic","fas fa-futbol","far fa-futbol","fab fa-fulcrum","fas fa-frown","far fa-frown","fab fa-freebsd","fab fa-free-code-camp","fab fa-foursquare","fas fa-forward","fab fa-forumbee","fab fa-fort-awesome-alt","fab fa-fort-awesome","fas fa-football-ball","fab fa-fonticons-fi","fab fa-fonticons","fab fa-font-awesome-flag","fab fa-font-awesome-alt","fab fa-font-awesome","fas fa-font","fas fa-folder-open","far fa-folder-open","fas fa-folder","far fa-folder","fab fa-fly","fab fa-flipboard","fab fa-flickr","fas fa-flask","fas fa-flag-checkered","fas fa-flag","far fa-flag","fab fa-firstdraft","fab fa-first-order-alt","fab fa-first-order","fas fa-first-aid","fab fa-firefox","fas fa-fire-extinguisher","fas fa-fire","fas fa-filter","fas fa-film","fas fa-file-word","far fa-file-word","fas fa-file-video","far fa-file-video","fas fa-file-powerpoint","far fa-file-powerpoint","fas fa-file-pdf","far fa-file-pdf","fas fa-file-medical-alt","fas fa-file-medical","fas fa-file-image","far fa-file-image","fas fa-file-excel","far fa-file-excel","fas fa-file-code","far fa-file-code","fas fa-file-audio","far fa-file-audio","fas fa-file-archive","far fa-file-archive","fas fa-file-alt","far fa-file-alt","fas fa-file","far fa-file","fas fa-fighter-jet","fas fa-female","fas fa-fax","fas fa-fast-forward","fas fa-fast-backward","fab fa-facebook-square","fab fa-facebook-messenger","fab fa-facebook-f","fab fa-facebook","fas fa-eye-slash","far fa-eye-slash","fas fa-eye-dropper","fas fa-eye","far fa-eye","fas fa-external-link-square-alt","fas fa-external-link-alt","fab fa-expeditedssl","fas fa-expand-arrows-alt","fas fa-expand","fas fa-exclamation-triangle","fas fa-exclamation-circle","fas fa-exclamation","fas fa-exchange-alt","fas fa-euro-sign","fab fa-etsy","fab fa-ethereum","fab fa-erlang","fas fa-eraser","fab fa-envira","fas fa-envelope-square","fas fa-envelope-open","far fa-envelope-open","fas fa-envelope","far fa-envelope","fab fa-empire","fab fa-ember","fas fa-ellipsis-v","fas fa-ellipsis-h","fab fa-elementor","fas fa-eject","fas fa-edit","far fa-edit","fab fa-edge","fab fa-ebay","fab fa-earlybirds","fab fa-dyalog","fab fa-drupal","fab fa-dropbox","fab fa-dribbble-square","fab fa-dribbble","fab fa-draft2digital","fas fa-download","fas fa-dove","fas fa-dot-circle","far fa-dot-circle","fas fa-donate","fas fa-dolly-flatbed","fas fa-dolly","fas fa-dollar-sign","fab fa-docker","fab fa-dochub","fas fa-dna","fab fa-discourse","fab fa-discord","fab fa-digital-ocean","fab fa-digg","fas fa-diagnoses","fab fa-deviantart","fas fa-desktop","fab fa-deskpro","fab fa-deploydog","fab fa-delicious","fas fa-deaf","fas fa-database","fab fa-dashcube","fab fa-d-and-d","fab fa-cuttlefish","fas fa-cut","fas fa-cubes","fas fa-cube","fab fa-css3-alt","fab fa-css3","fas fa-crosshairs","fas fa-crop","fas fa-credit-card","far fa-credit-card","fab fa-creative-commons-share","fab fa-creative-commons-sampling-plus","fab fa-creative-commons-sampling","fab fa-creative-commons-sa","fab fa-creative-commons-remix","fab fa-creative-commons-pd-alt","fab fa-creative-commons-pd","fab fa-creative-commons-nd","fab fa-creative-commons-nc-jp","fab fa-creative-commons-nc-eu","fab fa-creative-commons-nc","fab fa-creative-commons-by","fab fa-creative-commons","fab fa-cpanel","fas fa-couch","fas fa-copyright","far fa-copyright","fas fa-copy","far fa-copy","fab fa-contao","fab fa-connectdevelop","fas fa-compress","fas fa-compass","far fa-compass","fas fa-comments","far fa-comments","fas fa-comment-slash","fas fa-comment-dots","far fa-comment-dots","fas fa-comment-alt","far fa-comment-alt","fas fa-comment","far fa-comment","fas fa-columns","fas fa-cogs","fas fa-cog","fas fa-coffee","fab fa-codiepie","fab fa-codepen","fas fa-code-branch","fas fa-code","fab fa-cloudversify","fab fa-cloudsmith","fab fa-cloudscale","fas fa-cloud-upload-alt","fas fa-cloud-download-alt","fas fa-cloud","fas fa-closed-captioning","far fa-closed-captioning","fas fa-clone","far fa-clone","fas fa-clock","far fa-clock","fas fa-clipboard-list","fas fa-clipboard-check","fas fa-clipboard","far fa-clipboard","fas fa-circle-notch","fas fa-circle","far fa-circle","fab fa-chrome","fas fa-child","fas fa-chevron-up","fas fa-chevron-right","fas fa-chevron-left","fas fa-chevron-down","fas fa-chevron-circle-up","fas fa-chevron-circle-right","fas fa-chevron-circle-left","fas fa-chevron-circle-down","fas fa-chess-rook","fas fa-chess-queen","fas fa-chess-pawn","fas fa-chess-knight","fas fa-chess-king","fas fa-chess-board","fas fa-chess-bishop","fas fa-chess","fas fa-check-square","far fa-check-square","fas fa-check-circle","far fa-check-circle","fas fa-check","fas fa-chart-pie","fas fa-chart-line","fas fa-chart-bar","far fa-chart-bar","fas fa-chart-area","fas fa-certificate","fab fa-centercode","fab fa-cc-visa","fab fa-cc-stripe","fab fa-cc-paypal","fab fa-cc-mastercard","fab fa-cc-jcb","fab fa-cc-discover","fab fa-cc-diners-club","fab fa-cc-apple-pay","fab fa-cc-amex","fab fa-cc-amazon-pay","fas fa-cart-plus","fas fa-cart-arrow-down","fas fa-caret-up","fas fa-caret-square-up","far fa-caret-square-up","fas fa-caret-square-right","far fa-caret-square-right","fas fa-caret-square-left","far fa-caret-square-left","fas fa-caret-square-down","far fa-caret-square-down","fas fa-caret-right","fas fa-caret-left","fas fa-caret-down","fas fa-car","fas fa-capsules","fas fa-camera-retro","fas fa-camera","fas fa-calendar-times","far fa-calendar-times","fas fa-calendar-plus","far fa-calendar-plus","fas fa-calendar-minus","far fa-calendar-minus","fas fa-calendar-check","far fa-calendar-check","fas fa-calendar-alt","far fa-calendar-alt","fas fa-calendar","far fa-calendar","fas fa-calculator","fab fa-buysellads","fas fa-bus"],workflow:["fas fa-cog","fas fa-check","fas fa-plus","fas fa-times","fas fa-paper-plane","far fa-paper-plane","fas fa-sitemap","fas fa-lightbulb","fas fa-balance-scale","fas fa-thumbs-up","fas fa-thumbs-down","fas fa-handshake","far fa-handshake","fas fa-hand-holding-usd","fas fa-euro-sign","fas fa-dollar-sign","fas fa-trash","fas fa-power-off","fas fa-sync-alt","fas fa-redo-alt","fas fa-undo-alt","fas fa-star","fas fa-key","fas fa-save","fas fa-heart","far fa-heart","fas fa-exclamation-triangle","fas fa-bolt","fas fa-exclamation","fas fa-question","fas fa-hourglass-half","fas fa-clock","far fa-clock","fas fa-history","fas fa-calendar-times","fas fa-calendar-alt","far fa-flag","fas fa-flag-checkered","fas fa-archive","fas fa-edit","far fa-edit","fas fa-print","fas fa-unlock-alt","fas fa-unlock","fas fa-wrench","fas fa-cogs","fas fa-paperclip","fas fa-file-alt","far fa-file-alt","fas fa-file","far fa-file","fas fa-copy","far fa-copy","fas fa-folder-open","far fa-folder-open","fas fa-folder","far fa-folder","fas fa-comments","far fa-comments","fas fa-comment-dots","far fa-comment-dots","fas fa-comment-alt","far fa-comment-alt","fas fa-comment","far fa-comment","fas fa-search","fas fa-binoculars","fas fa-filter","fas fa-lock-open","fas fa-lock","fas fa-clone","far fa-clone","fas fa-paste","fas fa-notes-medical","fas fa-clipboard-list","fas fa-clipboard-check","fas fa-clipboard","far fa-clipboard","fas fa-child","fas fa-smile","far fa-smile","fas fa-meh","far fa-meh","fas fa-frown","far fa-frown","fas fa-user","fas fa-user-friends","fas fa-users","fas fa-user-check","fas fa-user-plus","fas fa-user-minus","fas fa-user-tie","fas fa-user-graduate","fas fa-graduation-cap","fas fa-address-card","fas fa-step-backward","fas fa-fast-backward","fas fa-backward","fas fa-play","fas fa-pause","fas fa-forward","fas fa-fast-forward","fas fa-step-forward","fas fa-reply-all","fas fa-reply","fas fa-play-circle","fas fa-pause-circle","fas fa-stop-circle","fas fa-check-circle","far fa-check-circle","fas fa-arrow-circle-left","fas fa-arrow-circle-right","fas fa-arrow-alt-circle-left","fas fa-arrow-alt-circle-right","fas fa-chevron-circle-left","fas fa-chevron-circle-right","fas fa-user-circle","fas fa-times-circle","fas fa-plus-circle","fas fa-minus-circle","fas fa-exclamation-circle","fas fa-question-circle","fas fa-adjust","fas fa-plus-square","fas fa-minus-square","fas fa-external-link-square-alt","fas fa-check-square","far fa-check-square","fas fa-caret-square-left","fas fa-caret-square-right","far fa-caret-square-left","far fa-caret-square-right","fas fa-arrow-left","fas fa-chevron-left","fas fa-angle-double-left","fas fa-angle-left","fas fa-caret-left","fas fa-exchange-alt","fas fa-caret-right","fas fa-angle-right","fas fa-angle-double-right","fas fa-chevron-right","fas fa-arrow-right","fas fa-phone","fas fa-bullhorn","fas fa-bell","fas fa-envelope-open","far fa-envelope-open","fas fa-envelope","far fa-envelope","fas fa-chart-pie","fas fa-chart-line","fas fa-chart-bar","fas fa-chart-area","fab fa-windows","fab fa-microsoft","fas fa-desktop","fas fa-laptop","fas fa-keyboard","fas fa-database","fas fa-hockey-puck","fas fa-hdd","fas fa-mobile-alt","fas fa-microchip","fas fa-microphone","fas fa-wifi","fas fa-cloud","fas fa-cloud-upload-alt","fas fa-cloud-download-alt","fas fa-road","fas fa-map-signs","fas fa-map-marker","fas fa-map","fas fa-globe","fas fa-magnet","fas fa-location-arrow","fas fa-mouse-pointer","fas fa-moon","fas fa-bicycle","fas fa-motorcycle","fas fa-car","fas fa-bus","fas fa-truck","fas fa-plane","fas fa-fighter-jet","fas fa-dolly-flatbed","fas fa-dolly","fab fa-dropbox","fas fa-box-open","fas fa-shopping-cart","fas fa-cart-plus","fas fa-home","fas fa-building","fas fa-university","fas fa-book","fas fa-code","fas fa-code-branch","fas fa-bookmark","fas fa-bomb","far fa-eye","fas fa-camera","fas fa-images","fas fa-film","fas fa-music","fas fa-paw","fas fa-dove","fas fa-dna","fas fa-gift","fas fa-gem","far fa-gem","fas fa-puzzle-piece","fas fa-plug","fas fa-cut","fas fa-cubes","fas fa-cube","fas fa-bed","fas fa-couch","fas fa-coffee","fas fa-beer","fas fa-wine-glass","fas fa-glass-martini","fas fa-utensils","fas fa-flask","fas fa-capsules"]};kiss.websocket={connection:{},async init({socketUrl,token,onopen,onerror,onclose,onmessage}){if(this.connection.readyState===1){log("kiss.websocket - init - Connection is already alive",2)
this.isAlive=true
return}else{log("kiss.websocket - init - Trying to init connection")}
this.connection=await this.connectToServer({socketUrl,token})
log("kiss.websocket - init - Connected! Connection:",0,this.connection)
this.connection.onopen=(onopen)?onopen:()=>{log("kiss.websocket - onopen - Connection opened")}
this.connection.onerror=(onerror)?onerror:async(err)=>{log("kiss.websocket - onerror - Connection failed",4,err)
this.isAlive=false
createDialog({type:"message",message:txtTitleCase("connection-error"),action:async()=>await kiss.websocket.init()})}
this.connection.onclose=(onclose)?onclose:(event)=>{log("kiss.websocket - onclose - Connection closed by the remote server")
this.isAlive=false}
this.connection.onmessage=(onmessage)?onmessage:function(message){try{const json=JSON.parse(message.data)
kiss.pubsub.publish(json.channel,json)}catch(err){log("kiss.websocket - onmessage - Error:",4,err)}}
this.isAlive=true},async connectToServer({socketUrl,token}){window.WebSocket=window.WebSocket||window.MozWebSocket
if(!socketUrl){const isHttps=(window.location.protocol=="https:")
const socketProtocol=(isHttps)?"wss://":"ws://"
const socketUrl=socketProtocol+kiss.global.host+"/?token="+(token||kiss.session.getToken())}
log("kiss.websocket - Connecting to "+socketUrl)
const ws=new WebSocket(socketUrl)
ws.onerror=(err)=>{log("kiss.websocket - connectToServer - Error:",4,err)}
return ws},send(jsonData){const message=JSON.stringify(jsonData)
this.connection.send(message)}};kiss.ui.Component=class Component extends HTMLElement{constructor(){super()}
init(config){if(!config)return null
this.isComponent=true
this.type=config.type||this.constructor.name.toLowerCase()
this.id=config.id||"cmp-"+(kiss.global.componentCount++).toString()
this.target=config.target||null
this.config=config
this.renderDelay=25
this.classList.add("a-"+this.type.toLowerCase())
if(config.display)this.displayMode=config.display
if(config.hidden==true)this.style.display="none"
if(config.tip)this.attachTip(config.tip)
if(config.animate)this.animate(config.animate)
const methods=config.methods
if(methods){for(let method in methods){this[method]=methods[method]}}
const viewControllers=kiss.views.viewControllers[this.id]
if(viewControllers){for(let method in viewControllers){this[method]=viewControllers[method]}}
this._bindEvents(this.config.events)
this.subscriptions=[]
if(this.config.subscriptions){Object.keys(this.config.subscriptions).forEach(pubSubEventName=>{this.subscriptions.push(subscribe(pubSubEventName,this.config.subscriptions[pubSubEventName].bind(this)))})}
if(config.autoSize){this.subscriptions.push(subscribe("EVT_CONTAINERS_RESIZED",(containerIds)=>{if(this.parentNode==document.body||(this.parentNode&&this.parentNode.id&&containerIds.indexOf(this.parentNode.id)!=-1)){this.updateLayout("EVT_CONTAINER_RESIZED")}}))}
if(config.collections&&config.collections.length>0&&config.collections[0]){this.collections=config.collections
if(this.load){const observedEvents=[]
this.collections.forEach(collection=>{let model=collection.model
let modelId=model.id
let events=["EVT_DB_INSERT:","EVT_DB_UPDATE:","EVT_DB_DELETE:"]
events.forEach(EVT=>{let eventName=EVT+modelId.toUpperCase()
observedEvents.push(eventName)})})
observedEvents.forEach(eventName=>{this.subscriptions.push(subscribe(eventName,(msgData)=>{if(this.isConnected){log("kiss.ui - React to "+eventName+" - Component loading "+this.id,2)
this.load(msgData)}}))})
const observedModels=this.collections.map(collection=>collection.model.id)
this.subscriptions.push(subscribe("EVT_DB_UPDATE_BULK",(msgData)=>{if(this.isConnected){let shouldLoad=false
const bulkUpdates=msgData.data
bulkUpdates.forEach(update=>{if(observedModels.indexOf(update.modelId)!=-1)shouldLoad=true})
if(shouldLoad){log("EVT_DB_UPDATE_BULK - Component loading "+this.id,2)
this.load(msgData)}}}))}}
return this}
connectedCallback(){if(this._afterConnected)this._afterConnected()}
disconnectedCallback(){if(this.loadingId)this.hideLoading()
if(this._afterDisconnected)this._afterDisconnected()}
translate(){Array.from(this.querySelectorAll(".translation")).forEach(element=>{const textKey=kiss.language.hash[element.id]
const newText=kiss.language.translate(textKey)
element.innerHTML=newText})}
render(target,load=true){this.style.visibility="hidden"
if(!this.isConnected){if(this.config&&this.config.classes)this._dispatchClasses(this.config.classes)
if(this.config&&this.config.class)this.classList.add(this.config.class)
if(this.config&&this.config.styles)this._dispatchStyles(this.config.styles)
if(this.config&&this.config.style)this.style.cssText+=this.config.style
if(this.config&&this.config.hidden)this.style.display="none"
this._insertIntoDOM(target)}
if((this.items)&&(this.items.length>0))this.items.forEach(item=>item.render(item.target||target))
if(load&&(this.load)){if(this.isComponent){this._load()}else{this.load()}}else{if(this.updateLayout)this.updateLayout("Component.render")
if(this._afterRender)this._afterRender()
setTimeout(()=>this.style.visibility="visible",this.renderDelay)}
return this}
_insertIntoDOM(target){let domTarget=target||this.target
if(domTarget){if(typeof domTarget=="string"){$(domTarget).appendChild(this)}else{domTarget.appendChild(this)}}else{document.body.appendChild(this)}}
async _load(){try{if(this.collections){for(let collection of this.collections){await collection.find()}}
if(this.load)await this.load()
if(this.updateLayout)this.updateLayout("Component._load")
if(this._afterRender)this._afterRender()
setTimeout(()=>this.style.visibility="visible",this.renderDelay)}catch(err){log("kiss.ui - Component - Loading error:",2,err)}}
hide(){let currentDisplayMode=window.getComputedStyle(this,"")["display"]
if(currentDisplayMode!=""&&currentDisplayMode!="none")this.displayMode=currentDisplayMode
this.style.display="none"
this.hidden=true
if(this._afterHide)this._afterHide()
return this}
show(mode){if(this.style.display!="none")return this
this.style.display=mode||this.displayMode||(this.config&&this.config.display)||"block"
this.hidden=false
if(this._afterShow)this._afterShow()
return this}
showAt(x,y,animationTimeInSeconds){if(animationTimeInSeconds)this.style.transition=animationTimeInSeconds+"s"
this.style.left=x+"px"
this.style.top=y+"px"
this.show().moveToViewport()
return this}
moveToViewport(){kiss.tools.moveToViewport(this)
return this}
isHidden(){return(this.style.display=="none")||(this.hidden==true)}
toggle(){if(this.isHidden()){this.show()}else{this.hide()}
return this}
showLoading(config={}){if(this.isLoading)return
const box=this.getBoundingClientRect()
const mask=document.createElement("div")
mask.classList.add("component-loader-mask")
mask.id="mask-"+kiss.tools.shortUid()
mask.style.top=(config.fullscreen==true)?0:box.y+"px"
mask.style.left=(config.fullscreen==true)?0:box.x+"px"
mask.style.width=(config.fullscreen==true)?"100vw":box.width+"px"
mask.style.height=(config.fullscreen==true)?"100vh":box.height+"px"
mask.style.borderRadius="var(--panel-border-radius)"
if(config.mask!==false)mask.style.background="var(--background-overlay)"
const spinner=document.createElement("div")
spinner.classList.add("component-loader")
spinner.id="spinner-"+this.id
spinner.style.width=(config.spinnerSize||32)+"px"
spinner.style.height=(config.spinnerSize||32)+"px"
this.loadingId=mask.id
const maskNode=document.body.appendChild(mask)
maskNode.appendChild(spinner)
this.isLoading=true
return this}
hideLoading(){try{$(this.loadingId).remove()
delete this.loadingId
this.isLoading=false}catch(err){}
return this}
attachTip(tipConfig){if(this.tip)return
if(typeof tipConfig==="object"){this.tip=createTip({target:this.id,text:tipConfig.text,deltaX:tipConfig.deltaX,deltaY:tipConfig.deltaY,maxWidth:tipConfig.maxWidth})}else{this.tip=createTip({target:this.id,text:tipConfig})}
setTimeout(()=>{if(!this.isConnected){if(!this.config.events)this.config.events={}
this.config.events.onmouseenter=()=>this.tip.render()}else{this.onmouseenter=()=>this.tip.render()}},0)
return this}
_bindEvents(events,target){const targetElement=target||this
if(events){for(let event in events){const eventName=(event.slice(0,2).toLowerCase()=="on")?event:"on"+event
targetElement[eventName.toLowerCase()]=events[event]}}
return this}
_setProperties(config,rules){rules.forEach(rule=>{let properties=rule[0]
let targets=rule[1]
properties.forEach(property=>{let[configProperty,targetProperty]=property.split("=")
if(config[configProperty]!=null){let value=config[configProperty]
if(["padding","margin","top","right","bottom","left","width","minWidth","maxWidth","height","minHeight","maxHeight","fontSize","iconSize","borderWidth","borderRadius","fieldWidth","fieldHeight","labelWidth"].includes(configProperty))value=this._computeSize(configProperty)
targets.forEach(target=>{if(target){if(!targetProperty){target[configProperty]=value}else{target[targetProperty]=value}}})}})})
return this}
_computeSize(type){let newSize=this.config[type]
if(typeof newSize=="function"){try{newSize=newSize()}catch(err){newSize=0}}
if(typeof newSize=="number")newSize=newSize.toString()+"px"
return newSize}
_setTop(){setTimeout(()=>this.style.top=this._computeSize("top"),0)}
_setLeft(){setTimeout(()=>this.style.left=this._computeSize("left"),0)}
_setBottom(){setTimeout(()=>this.style.bottom=this._computeSize("bottom"),0)}
_setRight(){setTimeout(()=>this.style.right=this._computeSize("right"),0)}
_setWidth(){setTimeout(()=>this.style.width=this._computeSize("width"),0)}
_setMinWidth(){setTimeout(()=>this.style.minWidth=this._computeSize("minWidth"),0)}
_setMaxWidth(){setTimeout(()=>this.style.maxWidth=this._computeSize("maxWidth"),0)}
_setHeight(){setTimeout(()=>this.style.height=this._computeSize("height"),0)}
_setMinHeight(){setTimeout(()=>this.style.minHeight=this._computeSize("minHeight"),0)}
_setMaxHeight(){setTimeout(()=>this.style.maxHeight=this._computeSize("maxHeight"),0)}
_dispatchClasses(cssClasses){Object.keys(cssClasses).forEach(cssClass=>{let arrayOfClasses=cssClasses[cssClass].split(/\s+/)
try{if(cssClass=="this"){this.classList.add(...arrayOfClasses)}
else{let targetElement=this.querySelector("."+cssClass)
targetElement.classList.add(...arrayOfClasses)}}catch(err){log(`Component._dispatchClasses: the class selector <${cssClass}> is not valid for the component <${this.id}>`,2)}})
return this}
_dispatchStyles(styles){if(styles){Object.keys(styles).forEach(cssClass=>{try{if(cssClass=="this"){let currentStyles=this.style.cssText
this.style=currentStyles+";"+styles[cssClass]}
else{let currentStyles=this.querySelector("."+cssClass).style.cssText
this.querySelector("."+cssClass).style=currentStyles+";"+styles[cssClass]}}catch(err){log(`Component._dispatchStyles: the class selector <${cssClass}> is not valid for the component <${this.id}>`,2)}})}
return this}
_toggleClass(cssClasses){if(cssClasses)cssClasses.split(/\s+/).forEach(cssClass=>this.classList.toggle(cssClass))
return this}
animate(config){if(config===false){Array.from(this.classList).forEach(className=>{if(className.startsWith("animate__"))this.classList.remove(className)})
return this}
let animationName,animationSpeed,animationRepeat
if(typeof config==="string"){animationName="animate__"+config
animationSpeed="animate__fast"
animationRepeat="animate__repeat-1"}else{animationName=(config.name)?"animate__"+config.name:"animate__fadeIn"
animationSpeed=(config.speed)?"animate__"+config.speed:"animate__fast"
animationRepeat=(config.repeat)?"animate__"+config.repeat:"animate__repeat-1"
this.animationCallback=config.callback}
setTimeout(()=>this.classList.add("animate__animated",animationName,animationSpeed,animationRepeat),0)
this.handleAnimationEnd=function(event){event.stopPropagation()
this.classList.remove("animate__animated",animationName,animationSpeed,animationRepeat)
this.removeEventListener("animationend",this.handleAnimationEnd)
if(typeof this.animationCallback==="function")this.animationCallback()}
this.addEventListener("animationend",this.handleAnimationEnd,{once:true})
return this}};HTMLElement.prototype.getComponent=function(){function getParent(node){let parent=node.parentNode
if(!parent)return null
if(!parent.classList)return null
if(parent.constructor.name=="HTMLDocument")return null
return parent}
let parentNode=this.parentNode
while(getParent(parentNode)){if(parentNode.classList.value!=""){if(parentNode.classList[0].slice(0,2)=="a-")return parentNode}
parentNode=parentNode.parentNode}
return null};HTMLElement.prototype.render=kiss.ui.Component.prototype.render
HTMLElement.prototype._insertIntoDOM=kiss.ui.Component.prototype._insertIntoDOM
HTMLElement.prototype.show=kiss.ui.Component.prototype.show
HTMLElement.prototype.hide=kiss.ui.Component.prototype.hide
HTMLElement.prototype.showLoading=kiss.ui.Component.prototype.showLoading
HTMLElement.prototype.hideLoading=kiss.ui.Component.prototype.hideLoading
HTMLElement.prototype.attachTip=kiss.ui.Component.prototype.attachTip
HTMLElement.prototype.animate=kiss.ui.Component.prototype.animate;kiss.ui.Container=class Container extends kiss.ui.Component{constructor(){super()}
init(config){if(config.layout){config.display="flex"
if(config.layout=="vertical"){config.flexFlow="column"}else if(config.layout=="horizontal"){config.flexFlow="row"}}
super.init(config)
if(this.type=="block")this.containerId=this.id
else if(this.type=="panel")this.containerId="panel-body-"+this.id
if(config.record)config.items.forEach(item=>{if(item.items||kiss.global.fieldTypes.map(type=>type.value).includes(item.type)){item.record=config.record}})
this.items=[]
this.config.items=this.config.items||[]
this._insertItems(this.config.items)
this.subscriptions=this.subscriptions||[]
let _this=this
if(this.config.align=="center"&&!this.config.left)this.config.left=()=>(kiss.screen.current.width-$(_this.id).clientWidth)/2
if(this.config.verticalAlign=="center"&&!this.config.top)this.config.top=()=>(kiss.screen.current.height-$(_this.id).clientHeight)/2
this.isContainer=true
kiss.screen.getResizeObserver().observe(this)
return this}
showItem(itemIndex,animation){if(itemIndex>this.items.length)return
if(this.activeItemIndex==itemIndex)return
this.activeItemIndex=itemIndex
for(let i=0;i<this.items.length;i++)this.items[i].hide()
this.items[itemIndex].show()
if(animation)this.items[itemIndex].animate(animation)
return this}
showItemById(itemId,animation){let itemIndex=this.items.findIndex(item=>item.id==itemId)
if(itemIndex!=-1)this.showItem(itemIndex,animation)}
showItemByClass(className,animation){let itemIndex=this.items.findIndex(item=>Array.from(item.classList).includes(className))
if(itemIndex!=-1)this.showItem(itemIndex,animation)}
getContainer(){return $(this.containerId)}
getComponentIds(){let ids=[]
ids.push(this.id)
this.items.forEach(function(item){if(item.items)ids.push(item.getComponentIds())
else if(item.id)ids.push(item.id)})
return ids.flat()}
setItems(newItems){const containerElement=this.getContainer()
containerElement.deepDelete(false)
this.items=[]
this.config.items=[]
this._insertItems(newItems)
this.render(this.target,false)
return this}
_insertItems(newItems){if(this.config.multiview){this.activeItemIndex=0
newItems.forEach((item,index)=>{if(index==0)return this._insertOrAddItem(item)
if(item.tagName)item.hide()
else item.hidden=true
this._insertOrAddItem(item)})}else{newItems.forEach((item)=>this._insertOrAddItem(item))}}
_insertOrAddItem(item,position,isNewItem){if(!item)return
item.target=this.containerId
const containerDefaults=this.config.defaultConfig
if(containerDefaults){for(let defaultProperty in containerDefaults){if(!item[defaultProperty])item[defaultProperty]=containerDefaults[defaultProperty]}}
let newItem=this._createNewItem(item)
if(position!=null){this.config.items.splice(position,0,item)
const targetNode=this.items[position]
this.items.splice(position,0,newItem)
this.insertBefore(newItem,targetNode)}else{if(isNewItem)this.config.items.push(item)
this.items.push(newItem)}
return newItem}
_createNewItem(item){if(!item.render){switch(item.type){case"text":case"textarea":case"number":case"date":case"password":case"lookup":case"summary":return document.createElement("a-field").init(item)
case"select":case"directory":case"checkbox":case"attachment":case"icon":case"iconPicker":case"iconpicker":case"color":case"colorPicker":case"colorpicker":case"html":case"image":case"button":case"spacer":case"menu":case"datatable":case"block":case"panel":return document.createElement("a-"+item.type.toLowerCase()).init(item)
case"view":return kiss.views.buildView(item.id,this.containerId)
case"link":return createLink(item)
default:return document.createElement("a-block").init(item)}}else{return item}}
addItem(item){let insertedItem=this._insertOrAddItem(item,null,true)
insertedItem.render()
return this}
insertItem(item,position){let insertedItem=this._insertOrAddItem(item,position)
insertedItem.render()
return this}
deleteItem(itemId){this.config.items=this.config.items.filter(item=>item.id!=itemId)
this.items=this.items.filter(item=>item.id!=itemId)
$(itemId).deepDelete()
return this}
expandAll(){this.items.forEach(function(item){if(item.items){if(item.type=="panel")item.expand()
item.expandAll()}})
return this}
collapseAll(){this.items.forEach(function(item){if(item.items){if(item.type=="panel")item.collapse()
item.collapseAll()}})
return this}
getFields(){let values=[]
Array.from(this.getContainer().children).forEach(function(item){if(item.items){values.push(item.getFields())}else{if(kiss.global.fieldTypes.map(type=>type.value).indexOf(item.type)!=-1){values.push(item)}}})
return values.flat()}
getData(){let record={}
this.getFields().forEach(function(field){record[field.id]=field.getValue()})
return record}
updateLayout(){if(this.isConnected){this._setWidth()
this._setMinWidth()
this._setMaxWidth()
this._setHeight()
this._setMinHeight()
this._setMaxHeight()
this._setTop()
this._setLeft()}
return this}
setLabelPosition(position="left"){const fields=this.getFields()
if(position=="top"||position=="bottom"){fields.forEach(item=>{if(item.field)item.field.style.transition="all 0.1s"
if(item.setFieldWidth)item.setFieldWidth("100%")
if(item.label){item.label.style.transition="all 0.1s"
if(item.setLabelWidth){item.setLabelPosition(position)
item.setLabelWidth("100%")}}})}else if(position=="left"||position=="right"){fields.forEach(item=>{if(item.field)item.field.style.transition="all 0.1s"
if(item.setFieldWidth)item.setFieldWidth("50%")
if(item.label){item.label.style.transition="all 0.1s"
if(item.setLabelWidth){item.setLabelPosition(position)
item.setLabelWidth("50%")}}})}
return this}
setLabelSize(size="1/3"){const fields=this.getFields()
let labelSize
let fieldSize
switch(size){case"1/4":labelSize="25.00%"
fieldSize="75.00%"
break
case"1/3":labelSize="33.33%"
fieldSize="66.66%"
break
case"1/2":labelSize="50.00%"
fieldSize="50.00%"
break
case"2/3":labelSize="66.66%"
fieldSize="33.33%"
break
case"3/4":labelSize="75.00%"
fieldSize="25.00%"
break}
fields.forEach(item=>{if(item.style.flexFlow=="column")return
if(item.field)item.field.style.transition="all 0.1s"
if(item.setFieldWidth)item.setFieldWidth(fieldSize)
if(item.label){item.label.style.transition="all 0.1s"
if(item.setLabelWidth)item.setLabelWidth(labelSize)}})
return this}
setLabelAlign(position="left"){const fields=this.getFields()
fields.forEach(item=>{if(item.label){item.label.style.transition="all 1s"
item.config.labelAlign=item.label.style.textAlign=position}})
return this}
setColumns(numberOfColumns=1){const fields=this.getFields()
const percent=(100/numberOfColumns).toFixed(2)+"%"
if(numberOfColumns>1)this.setDisplayMode("block")
else this.setDisplayMode("flex")
fields.forEach(item=>{if(!item.config.deleted)item.style.display=item.config.display="inline-flex"
if(item.field)item.field.style.transition="all 1s"
if(item.setWidth)item.setWidth(percent)})
return this}
setDisplayMode(mode="flex"){this.config.display=this.container.style.display=mode}};kiss.ui.DataComponent=class DataComponent extends kiss.ui.Component{constructor(){super()}
init(config={}){super.init(config)
if(config.collection){this.collection=config.collection
this.model=config.model||this.collection.model
this.modelId=this.model.id}
else if(config.model){this.model=config.model
this.modelId=this.model.id
this.collection=new kiss.data.Collection({model:this.model,sort:[{[this.model.getPrimaryKeyField().id]:"asc"}]})}
this.filter=config.filter||this.collection.filter||{}
this.filterSyntax=config.filterSyntax||this.collection.filterSyntax||"normalized"
this.sort=config.sort||this.collection.sort||[]
this.sortSyntax=config.sortyntax||this.collection.sortyntax||"normalized"
this.group=config.group||this.collection.group||[]
this.projection=config.projection||this.collection.projection||{}
this.groupUnwind=config.groupUnwind||this.collection.groupUnwind||false
return this}
showFieldsWindow(x,y,color="#00aaee"){const selectionWindow=createDataFieldsWindow(this.id,color)
this.selectFieldWindowId=selectionWindow.id
if(!y||!x){selectionWindow.top=()=>kiss.screen.current.height/3-selectionWindow.offsetHeight/2
selectionWindow.left=()=>kiss.screen.current.width/2-selectionWindow.offsetWidth/2
selectionWindow.render()}else{selectionWindow.render().showAt(x,y)}}
showSortWindow(x,y,color="#00aaee"){const sortWindow=createDataSortWindow(this.id,color)
this.sortWindowId=sortWindow.id
if(!y||!x){sortWindow.top=()=>kiss.screen.current.height/3-sortWindow.offsetHeight/2
sortWindow.left=()=>kiss.screen.current.width/2-sortWindow.offsetWidth/2
sortWindow.render()}else{sortWindow.render().showAt(x,y)}}
showFilterWindow(x,y,color="#00aaee"){const filterWindow=createDataFilterWindow(this.id,color)
this.filterWindowId=filterWindow.id
if(!y||!x){filterWindow.top=()=>kiss.screen.current.height/3-filterWindow.offsetHeight/2
filterWindow.left=()=>kiss.screen.current.width/2-filterWindow.offsetWidth/2
filterWindow.render()}else{filterWindow.render().showAt(x,y)}}
async selectRecordById(recordId){let record=await this.collection.findOne(recordId)
await this.selectRecord(record)}
async selectRecord(record){createNotification("kiss.ui.DataComponent - The method selectRecord(record) should be overriden when implementing a DataComponent")}
async createRecord(model){createNotification("kiss.ui.DataComponent - The method createRecord(model) should be overriden when implementing a DataComponent")}};kiss.ui.Block=class Block extends kiss.ui.Container{constructor(){super()}
init(config){super.init(config)
if(config.fullscreen){this.style.display="block"
this.style.position="fixed"
this.style.top="0px"
this.style.left="0px"
this.style.width="100%"
this.style.height="100%"}
this.container=this
this._setProperties(config,[[["draggable"],[this]],[["display","padding","margin","position","top","left","right","overflow","overflowX","overflowY","flex","flexFlow","flexWrap","alignItems","alignContent","justifyContent","minWidth","maxWidth","background","backgroundColor","backgroundImage","backgroundSize","border","borderStyle","borderWidth","borderColor","borderRadius","boxShadow","zIndex","transform"],[this.style]]])
return this}
setInnerHtml(html){this.innerHTML=html
return this}
getInnerHtml(){return this.innerHTML}}
customElements.define("a-block",kiss.ui.Block)
const createBlock=(config)=>document.createElement("a-block").init(config);kiss.ui.Panel=class Panel extends kiss.ui.Container{constructor(){super()}
init(config){super.init(config)
const id=this.id
this.innerHTML=`${((config.collapsible == true) && (config.draggable != true))
            ? `<div id="panel-header-${id}"class="panel-header panel-header-collapsible"onmousedown="$('${id}').expandCollapse()">`
            : `<div id="panel-header-${id}"class="panel-header ${(config.draggable == true) ? "panel-header-draggable" : ""}">`
            }
                <span id="panel-icon-${id}" class="panel-icon ${(config.icon) ? config.icon : ""}"></span>
                <span id="panel-title-${id}" class="panel-title">${config.title || ""}</span>
                <span style="flex:1"></span>
                <span class="panel-custom-buttons"></span>
                <span class="panel-custom-icons"></span>
                ${(config.collapsible) ? `<span id="panel-button-expand-collapse-${id}"class="fas fa-chevron-down panel-buttons panel-button-expand-collapse"></span>` : ""}
                ${(config.expandable) ? `<span id="panel-button-maximize-${id}"class="fas fa-window-maximize panel-buttons panel-button-expand"onclick="this.closest('a-panel').setFullscreen(20)"></span>` : ""}
                ${(config.closable) ? `<span id="panel-button-close-${id}"class="fas fa-times panel-buttons panel-button-close"onclick="this.closest('a-panel').close()"></span>` : ""}
            </div>
            
            <div tabindex=1 id="panel-body-${id}" class="panel-body ${(config.header == false) ? "panel-body-no-header" : ""}">
            </div>`.removeExtraSpaces()
if(config.modal==true){this.mask=document.createElement("div")
this.mask.innerHTML=`<div id="panel-mask-${id}" class="panel-mask" onmousedown="$('${id}').close()"></div>`
document.body.appendChild(this.mask)}
this.panelHeader=this.querySelector(".panel-header")
this.panelTitle=this.querySelector(".panel-title")
this.panelIcon=this.querySelector(".panel-icon")
this.panelButtonExpandCollapse=this.querySelector(".panel-button-expand-collapse")
this.panelButtons=this.querySelectorAll(".panel-buttons")
this.panelCustomButtons=this.querySelector(".panel-custom-buttons")
this.panelCustomIcons=this.querySelector(".panel-custom-icons")
this.panelBody=this.container=this.querySelector(".panel-body")
config.position=(config.draggable)?"fixed":((config.modal)?"absolute":(config.position||"relative"))
if((config.borderRadius)&&(config.borderRadius.split(" ").length==4)){const borderRadiusConfig=config.borderRadius.split(" ")
const topLeftBorderRadius=borderRadiusConfig[0]
const topRightBorderRadius=borderRadiusConfig[1]
config.headerBorderRadius=topLeftBorderRadius+" "+topRightBorderRadius+" 0px 0px"}
this._setProperties(config,[[["position","top","left","right","flex","margin","border","borderRadius","boxShadow","transform","zIndex"],[this.style]],[["headerHeight=height","headerBackgroundColor=background","headerBorderRadius=borderRadius"],[this.panelHeader.style]],[["headerColor=color"],[this.panelTitle.style]],[["headerColor=color"],[this.panelIcon.style]],[["headerColor=color"],Array.from(this.panelButtons).map(panelButton=>panelButton.style)],[["display","flexFlow","flexWrap","alignItems","alignContent","justifyContent","padding","overflow","overflowX","overflowY","background","backgroundColor","backgroundImage","backgroundSize"],[this.panelBody.style]]])
if(config.header==false)this.panelHeader.style.display="none"
this.closeMethod=config.closeMethod||"remove"
if(config.draggable==true)this._enableDrag()
this.expanded=true
if(config.draggable||config.align=="center"||config.verticalAlign=="center")this.subscriptions.push(subscribe("EVT_WINDOW_RESIZED",()=>this.updateLayout()))
if(config.headerButtons){config.headerButtons.forEach(button=>this.addHeaderButton(button))}
if(config.headerIcons){config.headerIcons.forEach(icon=>this.addHeaderIcon(icon))}
return this}
setIcon(iconClass){this.config.icon=iconClass
this.panelIcon.className="panel-icon "+iconClass
return this}
setHeaderColor(color){this.config.headerColor=color
this.panelIcon.style.color=color
this.panelTitle.style.color=color
Array.from(this.panelButtons).forEach(panelButton=>panelButton.style.color=color)
return this}
setHeaderBackgroundColor(color){this.config.headerBackgroundColor=color
this.panelHeader.style.backgroundColor=color
return this}
addHeaderButton(config){const button=createButton(config)
this.panelCustomButtons.appendChild(button)
return this}
addHeaderIcon(config){if(!config.icon)return
const icon=document.createElement("span")
icon.setAttribute("id",kiss.tools.shortUid())
icon.classList.add("panel-buttons",...config.icon.split(" "))
if(config.action)icon.onclick=config.action
if(config.tip)icon.attachTip(config.tip)
this.panelCustomIcons.appendChild(icon)
return this}
setTitle(newTitle){this.panelTitle.innerHTML=newTitle
return this}
setInnerHtml(html){this.panelBody.innerHTML=html
return this}
getInnerHtml(){return this.panelBody.innerHTML}
close(closeMethod){const closeEvent=(this.config?.events?.onclose)||(this.config?.events?.onClose)||(this.config?.events?.close)
if(closeEvent){let doClose=closeEvent()
if(doClose===false)return}
let method=closeMethod||this.closeMethod
if(method=="hide"){this.hide()
if(this.mask)this.mask.hide()}else{kiss.views.remove(this.id)
if(this.mask)kiss.views.remove("panel-mask-"+this.id)}}
setWidth(width){this.config.width=width
this.updateLayout()
return this}
setHeight(height){this.config.height=height
this.updateLayout()
return this}
collapse(){if(this.expanded){let panelBorderWidth=Number(getComputedStyle(this,"")["border-width"].replace("px",""))
this.style.height=(this.panelHeader.offsetHeight+2*panelBorderWidth).toString()+"px"
this.panelBody.style.height="0px"
this.panelBody.style.padding="0px"
this.panelButtonExpandCollapse.classList.remove("fa-chevron-down")
this.panelButtonExpandCollapse.classList.add("fa-chevron-right")
this.expanded=false}
return this}
expand(){if(!this.expanded){if(this.config.height){this._setHeight()}else{this.style.height=""
this.panelBody.style.height=""
this.panelBody.style.padding=""}
this.panelButtonExpandCollapse.classList.remove("fa-chevron-right")
this.panelButtonExpandCollapse.classList.add("fa-chevron-down")
this.expanded=true}
return this}
expandCollapse(){if(this.expanded){this.collapse()}else{this.expand()}
return this}
setFullscreen(delta=0,unset){if(this.isFullscreen==true||unset==true){this.isFullscreen=false
this.config.width=this.currentWidth
this.config.height=this.currentHeight
this.config.top=this.currentTop
this.config.left=this.currentLeft}
else{this.isFullscreen=true
this.currentWidth=this.config.width||this.clientWidth
this.currentHeight=this.config.height||this.clientHeight
this.currentTop=this.config.top
this.currentLeft=this.config.left
this.config.width=()=>kiss.screen.current.width-delta
this.config.height=()=>kiss.screen.current.height-delta
this.config.top=delta/2
this.config.left=delta/2}
this.updateLayout()
return this}
_enableDrag(){let _this=this
let deltaX=0
let deltaY=0
let posX=0
let posY=0
let header=_this.querySelector(".panel-header")
if(header.style.display!="none"){header.onmousedown=dragStart}else{_this.onmousedown=dragStart}
function dragStart(e){e=e||window.event
e.stop()
posX=e.clientX
posY=e.clientY
document.onmouseup=dragStop
document.onmousemove=dragMove}
function dragMove(e){e=e||window.event
if(e.target.nodeName=="INPUT"){dragStop(e)
return e}
e.stop()
deltaX=posX-e.clientX
deltaY=posY-e.clientY
posX=e.clientX
posY=e.clientY
_this.style.opacity="0.8"
_this.style.top=(_this.offsetTop-deltaY)+"px"
_this.style.left=(_this.offsetLeft-deltaX)+"px"}
function dragStop(e){e=e||window.event
e.stop()
_this.style.opacity="1"
document.onmouseup=null
document.onmousemove=null}}}
customElements.define("a-panel",kiss.ui.Panel)
const createPanel=(config)=>document.createElement("a-panel").init(config);kiss.ui.Button=class Button extends kiss.ui.Component{constructor(){super()}
init(config={}){super.init(config)
this.icon=config.icon||""
this.text=config.text||""
this.innerHTML=`
            ${ (config.icon) ? `<span id="button-icon-${this.id}"class="button-icon ${this.icon}"></span>` : "" }
            ${ (config.text) ? `<span id="button-text-${this.id}"class="button-text">${this.text}</span>` : "" }`.removeExtraSpaces()
this.buttonIcon=this.querySelector(".button-icon")||{}
this.buttonText=this.querySelector(".button-text")||{}
this._setProperties(config,[[["draggable"],[this]],[["display","flex","position","float","top","left","right","width","height","margin","padding","background","backgroundColor","borderColor","borderRadius","borderStyle","borderWidth","boxShadow","cursor"],[this.style]],[["color","fontSize","fontWeight","textAlign"],[this.buttonText.style]],[["iconSize=fontSize","iconColor=color","iconPadding=padding","iconMargin=margin","iconShadow=textShadow"],[this.buttonIcon.style]]])
this.displayMode="inline-flex"
if(config.action)this.onmousedown=config.action
if(config.iconHover)this._createHoverListener("iconHover",config.iconHover,"_setHoverIcon","_resetIcon")
if(config.colorHover)this._createHoverListener("colorHover",config.colorHover,"_setHoverColor","_resetColor")
if(config.iconColorHover)this._createHoverListener("iconColorHover",config.iconColorHover,"_setHoverIconColor","_resetIconColor")
if(config.iconShadowHover)this._createHoverListener("iconShadowHover",config.iconShadowHover,"_setHoverIconShadow","_resetIconShadow")
if(config.boxShadowHover)this._createHoverListener("boxShadowHover",config.boxShadowHover,"_setHoverBoxShadow","_resetBoxShadow")
if(config.borderColorHover)this._createHoverListener("borderColorHover",config.borderColorHover,"_setHoverBorderColor","_resetBorderColor")
if(config.backgroundColorHover)this._createHoverListener("backgroundColorHover",config.backgroundColorHover,"_setHoverBackgroundColor","_resetBackgroundColor")
this.onmouseup=()=>{if(config.colorHover)this._resetColor()
if(config.iconColorHover)this._resetIconColor()
if(config.iconShadowHover)this._resetIconShadow()
if(config.boxShadowHover)this._resetBoxShadow()
if(config.borderColorHover)this._resetBorderColor()
if(config.backgroundColorHover)this._resetBackgroundColor()}
if(config.icon){this.buttonIcon.style.width=(config.height)?this._computeSize("height"):"var(--button-height)"
this.iconPosition=config.iconPosition||"left"
const flow={top:"column",left:"row",bottom:"column-reverse",right:"row-reverse"}
this.style.flexFlow=flow[this.iconPosition]}
return this}
setText(text){this.config.text=text
this.buttonText.innerText=text
return this}
setIcon(iconClass){this.config.icon=iconClass
this.icon.split(" ").forEach(className=>this.buttonIcon.classList.remove(className))
this.icon=iconClass
this.icon.split(" ").forEach(className=>this.buttonIcon.classList.add(className))
return this}
setColor(color){this.config.color=color
if((this.buttonText)&&(this.buttonText.style))this.buttonText.style.color=color
return this}
setBackgroundColor(color){this.config.backgroundColor=this.style.backgroundColor=color
return this}
setIconColor(color){this.config.iconColor=color
if(this.config.icon)this.buttonIcon.style.color=color
return this}
setBorderColor(color){this.config.borderColor=color
this.style.borderColor=color
return this}
_createHoverListener(propertyName,propertyValue,setMethod,resetMethod){this[propertyName]=propertyValue
this.addEventListener("mouseenter",this[setMethod])
this.addEventListener("mouseleave",this[resetMethod])}
_setHoverColor(){if(!this.buttonText)return
this.currentColor=this.buttonText.style.color
this.buttonText.style.color=this.colorHover}
_resetColor(){this.buttonText.style.color=this.currentColor}
_setHoverIcon(){if(!this.icon)return
this.currentIcon=this.icon
this.setIcon(this.config.iconHover)}
_resetIcon(){this.setIcon(this.currentIcon)}
_setHoverIconColor(){if(!this.buttonIcon)return
this.currentIconColor=this.buttonIcon.style.color
this.buttonIcon.style.color=this.iconColorHover}
_resetIconColor(){this.buttonIcon.style.color=this.currentIconColor}
_setHoverIconShadow(){if(!this.buttonIcon)return
this.currentIconShadow=this.buttonIcon.style.textShadow
this.buttonIcon.style.textShadow=this.iconShadowHover}
_resetIconShadow(){this.buttonIcon.style.textShadow=this.currentIconShadow}
_setHoverBoxShadow(){this.currentShadow=this.style.boxShadow
this.style.boxShadow=this.boxShadowHover}
_resetBoxShadow(){this.style.boxShadow=this.currentShadow}
_setHoverBorderColor(){this.currentBorderColor=this.style.borderColor
this.style.borderColor=this.borderColorHover}
_resetBorderColor(){this.style.borderColor=this.currentBorderColor}
_setHoverBackgroundColor(){this.currentBackgroundColor=this.style.backgroundColor
this.style.backgroundColor=this.backgroundColorHover}
_resetBackgroundColor(){this.style.backgroundColor=this.currentBackgroundColor}}
customElements.define("a-button",kiss.ui.Button)
const createButton=(config)=>document.createElement("a-button").init(config);kiss.ui.Datatable=class Datatable extends kiss.ui.DataComponent{constructor(){super()}
init(config){config.autoSize=true
super.init(config)
const id=this.id=config.id||kiss.tools.shortUid()
this.name=config.name
this.color=config.color||"#00aaee"
this.showHeader=(config.showHeader!==false)
this.showToolbar=(config.showToolbar!==false)
this.showScroller=(config.showScroller!==false)
this.canSort=(config.canSort!==false)
this.canFilter=(config.canFilter!==false)
this.canGroup=(config.canGroup!==false)
this.canSelect=(config.canSelect!==false)
this.canEdit=!!config.canEdit
this.canAddField=!!config.canAddField
this.canEditField=!!config.canEditField
this.canCreateRecord=!!config.canCreateRecord
this.actions=config.actions||[]
this.keepSynchronized=(config.keepSynchronized!==false)
this.groupShowHierarchy=!!config.groupShowHierarchy
this.iconAction=config.iconAction||"far fa-file-alt"
this.innerHTML=`<div class="datatable">
                <div id="datatable-toolbar:${id}" class="datatable-toolbar">
                    <div id="create:${id}"></div>
                    <div id="select:${id}"></div>
                    <div id="sort:${id}"></div>
                    <div id="filter:${id}"></div>
                    <div id="actions:${id}"></div>    
                    <div id="add:${id}"></div>
                    <div id="expand:${id}"></div>
                    <div id="collapse:${id}"></div>
                    <div id="group:${id}"></div>
                    <div id="hierarchy:${id}"></div>
                    <div id="synchronize:${id}"></div>
                    <div id="explode:${id}"></div>
                    <div class="spacer"></div>
                    <div id="pager-index:${id}" class="datatable-toolbar-pager-index"></div>
                    <div id="pager-first:${id}"></div>
                    <div id="pager-previous:${id}"></div>
                    <div id="pager-next:${id}"></div>
                    <div id="pager-last:${id}"></div>
                </div>

                <div class="datatable-header-container">
                    <div class="datatable-header-1st-column"></div>
                    <div id="datatable-header:${id}" class="datatable-header"></div>
                </div>

                <div class="datatable-body-container">
                    <div class="datatable-body-1st-column"></div>
                    <div id="datatable-body:${id}" class="datatable-body"></div>
                </div>

                <div class="datatable-virtual-scroller-container">
                    <div class="datatable-virtual-scroller"></div>
                </div>
            </div>`.removeExtraSpaces()
this.datatable=this.querySelector(".datatable")
this.datatableToolbar=this.querySelector(".datatable-toolbar")
this.datatableHeader=this.querySelector(".datatable-header")
this.datatableBody=this.querySelector(".datatable-body")
this.datatableHeader1stColumn=this.querySelector(".datatable-header-1st-column")
this.datatableBody1stColumn=this.querySelector(".datatable-body-1st-column")
this.datatableScrollerContainer=this.querySelector(".datatable-virtual-scroller-container")
this.datatableScroller=this.querySelector(".datatable-virtual-scroller")
this.defaultColumnWidth={text:180,number:180,date:180,select:180,textarea:350,checkbox:100,color:100,icon:100,attachment:150,directory:200,firstColumn:90,default:180}
this._initColumns(config.columns)
this.rowHeight=config.rowHeight||40
document.documentElement.style.setProperty("--datatable-cell-height",this.rowHeight+"px")
if(this.showHeader==false)this.datatableHeader.style.display="none"
if(this.showToolbar==false)this.datatableToolbar.style.display="none"
if(this.showScroller==false)this.datatableScrollerContainer.style.display="none"
if(config.width){this._setWidth()}else{this.style.width=this.config.width=`calc(100%)`}
if(config.height){this._setHeight()}else{this.style.height=this.config.height=`calc(100% - 10px)`}
const viewModelId=this.modelId.toUpperCase()
this.subscriptions=[subscribe("EVT_VIEW_FIELD_TOGGLED_ONE:"+this.id,(fieldId)=>this._columnsToggleOne(fieldId)),subscribe("EVT_VIEW_FIELD_TOGGLED_ALL:"+this.id,(newState)=>this._columnsToggleAll(newState)),subscribe("EVT_VIEW_SORTING:"+this.id,(msgData)=>this._dataSort(msgData)),subscribe("EVT_VIEW_FILTERING:"+this.id,(msgData)=>this._dataFilterBy(msgData)),subscribe("EVT_VIEW_GROUPING:"+this.id,(msgData)=>this._dataGroupBy(msgData)),subscribe("EVT_VIEW_FIELD_MOVING:"+this.id,(msgData)=>this._columnsMove(msgData.sourceFieldId,msgData.targetFieldId,msgData.position)),subscribe("EVT_DB_INSERT:"+viewModelId,(msgData)=>this._reloadWhenNeeded(msgData)),subscribe("EVT_DB_UPDATE:"+viewModelId,(msgData)=>this._updateOneAndReload(msgData)),subscribe("EVT_DB_DELETE:"+viewModelId,(msgData)=>this._reloadWhenNeeded(msgData)),subscribe("EVT_DB_INSERT_MANY:"+viewModelId,(msgData)=>this._reloadWhenNeeded(msgData,2000)),subscribe("EVT_DB_UPDATE_MANY:"+viewModelId,(msgData)=>this._reloadWhenNeeded(msgData,2000)),subscribe("EVT_DB_DELETE_MANY:"+viewModelId,(msgData)=>this._reloadWhenNeeded(msgData,2000)),subscribe("EVT_DB_UPDATE_BULK",(msgData)=>this._updateManyAndReload(msgData)),subscribe("EVT_DB_UPDATE:VIEW",(msgData)=>{if(msgData.id!=this.id)return
if(msgData.data.filter)this.filter=msgData.data.filter
if(msgData.data.sort)this.sort=msgData.data.sort
if(msgData.data.group)this.group=msgData.data.group
if(msgData.data.projection)this.projection=msgData.data.projection
let shouldReload=false
const previousColumnsCount=this.columns.length
if(msgData.data.config&&msgData.data.config.columns){this.columns=msgData.data.config.columns
this._initColumns()
if(this.columns.length!=previousColumnsCount)shouldReload=true}
this.collection.hasChanged=true
this._reloadWhenNeeded(msgData,0,shouldReload)})]
this.datatableHeader1stColumn.onclick=(event)=>{if(event.target.classList.contains("datatable-header-checkbox")){this.toggleSelection()}}
this.datatableHeader.onclick=(event)=>{const clickedElement=event.target
if(clickedElement.classList.contains("datatable-column-header-properties")){const columnId=clickedElement.id.split(":")[1]
this.showColumnMenu(columnId,clickedElement,event)}
if(clickedElement.classList.contains("datatable-header-last-column")||clickedElement.parentNode.classList.contains("datatable-header-last-column")){if(this.canAddField){this.showColumnSetup()
return event}}}
this.datatableHeader1stColumn.onmousedown=(event)=>{const clickedElement=event.target
if(clickedElement.classList.contains("datatable-column-header-resizer")){this._columnsResizeWithDragAndDrop(event,clickedElement)}}
this.datatableHeader.onmousedown=(event)=>{const clickedElement=event.target
if(clickedElement.classList.contains("datatable-column-header-resizer")){this._columnsResizeWithDragAndDrop(event,clickedElement)}}
this.onclick=async(event)=>{const clickedElement=event.target
if(clickedElement.classList.contains("datatable-cell-blank")){return event}
if(clickedElement.tagName.toLowerCase()=="input"){return event}
if(clickedElement.classList.contains("field-link-value-cell")||clickedElement.parentNode.classList.contains("field-link-value-cell")){const cell=clickedElement.closest("div")
const fieldId=this._cellGetFieldId(cell)
const recordId=clickedElement.closest(".datatable-row").getAttribute("recordId")
this._cellOpenLinkedRecord(fieldId,recordId)
return event}
if(clickedElement.classList.contains("datatable-row-checkbox")){const rowIndex=clickedElement.parentNode.getAttribute("row")
this._rowToggleSelect(rowIndex)
return event}
if(Array.from(clickedElement.parentNode.classList).concat(Array.from(clickedElement.classList)).indexOf("datatable-cell-1st")!=-1){const cell=clickedElement.closest("div")
const recordId=cell.getAttribute("recordid")
const record=await this.collection.getRecord(recordId)
await this.selectRecord(record)
return event}
if(clickedElement.classList.contains("datatable-group-summary")||clickedElement.parentNode.classList.contains("datatable-group-summary")){const colIndex=clickedElement.closest("div").getAttribute("col")
const visibleColumn=this.visibleColumns[colIndex]
const columnId=visibleColumn.id
const column=this.columns.get(columnId)
await this._columnsSetAggregationType(column,event.pageX-32,event.pageY-32)
return event}
if(clickedElement.parentNode.classList[0]&&clickedElement.parentNode.classList[0].indexOf("datatable-group")!=-1){const rowIndex=this._cellGetRowIndex(clickedElement)
const record=this.collection.records[Number(rowIndex)]
const groupId=record.$groupId
const groupLevel=record.$groupLevel
this._groupToggle(groupId,groupLevel,rowIndex)
return event}
if(clickedElement.classList.contains("datatable-group")){const rowIndex=clickedElement.getAttribute("row")
const record=this.collection.records[Number(rowIndex)]
const groupId=record.$groupId
const groupLevel=record.$groupLevel
this._groupToggle(groupId,groupLevel,rowIndex)
return event}
if(clickedElement.parentNode.classList.contains("datatable-cell")){if(this.canEdit){this._cellSwitchToEditMode(clickedElement.parentNode)
return event}else{const row=clickedElement.closest(".datatable-row")
const recordId=row.getAttribute("recordid")
const record=await this.collection.getRecord(recordId)
await this.selectRecord(record)
return event}}
if(clickedElement.classList.contains("datatable-cell")){if(this.canEdit){this._cellSwitchToEditMode(clickedElement)
return event}else{const row=clickedElement.closest(".datatable-row")
const recordId=row.getAttribute("recordid")
const record=await this.collection.getRecord(recordId)
await this.selectRecord(record)
return event}}}
this.datatableBody.onscroll=()=>{this.datatableHeader.scrollLeft=this.datatableBody.scrollLeft}
this.onmousewheel=this.onwheel=(event)=>{if(event.target.className.indexOf("datatable")==-1)return false
if(event.wheelDelta>0){this.virtualScrollUp()}else{this.virtualScrollDown()}
this._renderScrollerPosition()
this._renderPagerIndex()}
this.ontouchmove=function(e){this.startTouchY=this.startTouchY||e.changedTouches[0].pageY
let currentY=e.changedTouches[0].pageY
let delta=currentY-this.startTouchY
if(delta>0){this.virtualScrollUp()}else{this.virtualScrollDown()}
this._renderScrollerPosition()
this._renderPagerIndex()}
this.ontouchend=function(e){delete this.startTouchY}
this.datatableScrollerContainer.onmousedown=(event)=>{this.preventScroll=false}
this.datatableScrollerContainer.onscroll=(event)=>{if(this.preventScroll==true)return false
window.clearTimeout(this.isScrolling)
this.isScrolling=null
this.isScrolling=setTimeout(()=>{let percent=event.target.scrollTop/(this.datatableScroller.offsetHeight-this.datatableBody.offsetHeight)
let recordIndex=Math.round((this.collection.count-this.limit)*percent)
let newSkip=Math.min(recordIndex,this.collection.records.length-this.limit)
if(newSkip!=this.skip){this.skip=newSkip
this._renderTable()}},10)}
return this}
_initColumns(columns){const currentColumns=this.columns||columns
if(currentColumns){this.columns=currentColumns.filter(column=>{if(column.type=="button")return true
const field=this.model.getField(column.id)
if(field)return true
return false})
this.model.appendPluginColumns(this.columns)}else{this.columns=this.model.getFieldsAsColumns()}
return this}
getColumns(){return this.columns}
virtualScrollUp(){if(this.skip==0)return
this.skip-=1
this.lastIndex=Math.min(this.skip+this.limit,this.collection.records.length)
this.datatableBody.lastChild.remove()
this.datatableBody.insertBefore(this._renderRowDiv(this.skip),this.datatableBody.children[0])
this.datatableBody1stColumn.lastChild.remove()
this.datatableBody1stColumn.insertBefore(this._renderRowDiv1stColumn(this.skip),this.datatableBody1stColumn.children[0])}
virtualScrollDown(){if((this.lastIndex+1)>=this.collection.records.length)return
this.skip+=1
this.lastIndex=Math.min(this.skip+this.limit-1,this.collection.records.length)
this.datatableBody.children[0].remove()
this.datatableBody.appendChild(this._renderRowDiv(this.lastIndex))
this.datatableBody1stColumn.children[0].remove()
this.datatableBody1stColumn.appendChild(this._renderRowDiv1stColumn(this.lastIndex))}
async load(){try{log(`kiss.ui - Datatable ${this.id} - Loading collection <${this.collection.id} (changed: ${this.collection.hasChanged})>`)
this.collection.filter=this.filter
this.collection.filterSyntax=this.filterSyntax
this.collection.sort=this.sort
this.collection.sortSyntax=this.sortSyntax
this.collection.group=this.group
this.collection.projection=this.projection
this.collection.groupUnwind=this.groupUnwind
await this.collection.find()
this._hideScroller()
this._columnsAdjustWidthFromLocalStorage()
this.getSelection()
this._renderToolbar()
this.skip=0
this._setLimit()}catch(err){log(`kiss.ui - Datatable ${this.id} - Couldn't load data properly`)}}
async reload(){await this.load()
this._initColumns()
this._renderTable()}
async updateConfig(update){try{let viewRecord
if(kiss.app.collections.view){viewRecord=await kiss.app.collections.view.findOne(this.id)
if(!viewRecord){this.reload()
return}}else{Object.assign(this,update)
this.reload()
return}
const canUpdate=await kiss.acl.check({action:"update",record:viewRecord})
if(!canUpdate){this.reload()
return}
if(update){await viewRecord.update(update)}else{await viewRecord.update({name:this.name,filter:this.filter,projection:this.projection,sort:this.sort,group:this.group,config:{columns:this.columns}})}}catch(err){log("kiss.ui - datatable - Didn't save new datatable config",4,err)}}
async _reloadWhenNeeded(msgData,delay,requireReload){if(!this.isConnected){this.hasChanged=true
return}
if(delay)await kiss.tools.wait(delay)
if(kiss.session.getUserId()!=msgData.userId){if(this.keepSynchronized)await this.reload()}else{if(requireReload===false)return
await this.reload()}}
async _updateOneAndReload(msgData){const sortFields=this.sort.map(sort=>Object.keys(sort)[0])
const filterFields=kiss.db.mongo.getFilterFields(this.filter)
let groupHasChanged=false
let sortHasChanged=false
let filterHasChanged=false
let updates=msgData.data
for(let fieldId of Object.keys(updates)){if(this.group.indexOf(fieldId)!=-1)groupHasChanged=true
if(sortFields.indexOf(fieldId)!=-1)sortHasChanged=true
if(filterFields.indexOf(fieldId)!=-1)filterHasChanged=true
let newValue=updates[fieldId]
this._cellSetValue(msgData.id,fieldId,newValue)}
if(this.keepSynchronized&&(sortHasChanged||filterHasChanged||groupHasChanged)){this._reloadWhenNeeded(msgData)}}
async _updateManyAndReload(msgData){const sortFields=this.sort.map(sort=>Object.keys(sort)[0])
const filterFields=kiss.db.mongo.getFilterFields(this.filter)
let groupHasChanged=false
let sortHasChanged=false
let filterHasChanged=false
let operations=msgData.data
operations.forEach(operation=>{if(operation.modelId==this.modelId){for(let fieldId of Object.keys(operation.updates)){if(this.group.indexOf(fieldId)!=-1)groupHasChanged=true
if(sortFields.indexOf(fieldId)!=-1)sortHasChanged=true
if(filterFields.indexOf(fieldId)!=-1)filterHasChanged=true
let newValue=operation.updates[fieldId]
this._cellSetValue(operation.recordId,fieldId,newValue)}}})
if(this.keepSynchronized&&(sortHasChanged||filterHasChanged||groupHasChanged)){this._reloadWhenNeeded(msgData)}}
_afterConnected(){this._renderScroller()}
_selectCell(element){this._unselectCell()
element.classList.add("datatable-cell-selected")}
_unselectCell(){const selectedCell=document.querySelector(".datatable-cell-selected")
if(selectedCell)selectedCell.classList.remove("datatable-cell-selected")}
async setColor(newColor){this.color=newColor
Array.from(this.datatableToolbar.children).forEach(item=>{if(item&&item.firstChild&&item.firstChild.type=="button")item.firstChild.setIconColor(newColor)})}
highlightRecord(recordId){let index=this.goToRecord(recordId)
if(index!=-1)this._rowHighlight(index)}
goToRecord(recordId){let index=this._rowFindIndex(recordId)
if(index!=-1)this.goToIndex(index)
return index}
goToIndex(index){this.skip=index
this._renderTable()}
getSelection(){this.selectedRecords=kiss.selection.get(this.id)
return this.selectedRecords}
getColumn(fieldId){return this.columns.find(column=>column.id==fieldId)}
getSelectedRecords(){let records=[]
for(let id of this.getSelection())records.push(this.collection.getRecord(id))
return records}
toggleSelection(){kiss.selection.reset(this.id)
this._renderSelectionRestore()}
showFirstPage(){this.skip=0
this._renderPage(0)}
showPreviousPage(){this._renderPage(-this.limit)}
showNextPage(){this._renderPage(this.limit)}
showLastPage(){this.skip=this.collection.count-this.limit-1
this._renderPage(this.limit)}
async sortBy(sortFields){this.sort=sortFields
await this._dataSortUpdate()}
async sortByField(fieldId,direction){const currentSortFields=this.sort
let isSortUpdated=false
currentSortFields.forEach(sortField=>{if(Object.keys(sortField)[0]==fieldId){sortField[fieldId]=direction
isSortUpdated=true}})
if(!isSortUpdated){currentSortFields.push({[fieldId]:direction})}
await this.sortBy(currentSortFields)}
groupBy(groupFieldIds){$("grouping-field:"+this.id).setValue(groupFieldIds)}
showSortWindow(){let sortButton=$("sort:"+this.id)
let[x,y]=[sortButton.offsetLeft,sortButton.offsetTop+40]
super.showSortWindow(x,y,this.color)}
showFieldsWindow(){let selectionButton=$("select:"+this.id)
let[x,y]=[selectionButton.offsetLeft,selectionButton.offsetTop+40]
super.showFieldsWindow(x,y,this.color)}
showFilterWindow(){let filterButton=$("filter:"+this.id)
let[x,y]=[filterButton.offsetLeft,filterButton.offsetTop+40]
super.showFilterWindow(x,y,this.color)}
showColumnMenu(fieldId,columnMenu,event){const field=this.model.getField(fieldId)
const column=this.columns.find(column=>column.id==fieldId)
const isGrouped=this.group.length>0
const canBeAggregated=(field.type=="number"&&isGrouped)
let columnActions=[{icon:"fas fa-arrow-up",text:txtTitleCase("sort ascending"),action:async()=>{await this.sortByField(fieldId,"asc")
this.showSortWindow()}},{icon:"fas fa-arrow-down",text:txtTitleCase("sort descending"),action:async()=>{await this.sortByField(fieldId,"desc")
this.showSortWindow()}}]
if(this.canEditField&&!field.isFromPlugin){columnActions.splice(0,0,"-")
if(!field.primary){columnActions.splice(0,0,{icon:"fas fa-trash",text:txtTitleCase("delete this field"),action:()=>{createDialog({type:"dialog",title:txtTitleCase("delete a field"),message:txtTitleCase("#delete field warning"),action:async()=>{await this.model.deleteField(fieldId)
await this.reload()}})}})}
columnActions.splice(0,0,{icon:"fas fa-edit",text:txtTitleCase("edit this field"),action:async()=>this.showColumnSetup(fieldId)})}
if(canBeAggregated){columnActions.push("-")
columnActions.push({text:txtTitleCase("#summary sum"),icon:"fas fa-chart-bar",action:async()=>{column.summary="sum"
this._renderTable()
this.updateConfig({config:{columns:this.columns}})}})
columnActions.push({text:txtTitleCase("#summary avg"),icon:"fas fa-tachometer-alt",action:async()=>{column.summary="avg"
this._renderTable()
this.updateConfig({config:{columns:this.columns}})}})
columnActions.push({text:txtTitleCase("#no summary"),icon:"fas fa-ban",action:async()=>{delete column.summary
this._renderTable()
this.updateConfig({config:{columns:this.columns}})}})}
createMenu({top:columnMenu.getBoundingClientRect().y-10+"px",left:columnMenu.getBoundingClientRect().x-10+"px",items:columnActions}).render()}
showColumnSetup(fieldId){kiss.context.dockFieldProperties=false
kiss.router.updateUrlHash({fieldId:(fieldId)?fieldId:""})
kiss.views.show("model-field")}
updateColumnType(columnId,newType){const column=this.getColumn(columnId)
if(!column)return
column.type=newType
this._prepareColumnRenderers()
this._renderTable()}
setRowHeight(height){this.rowHeight=height-1
document.documentElement.style.setProperty("--datatable-cell-height",this.rowHeight+"px")
document.documentElement.style.setProperty("--datatable-group-cell-height",this.rowHeight+"px")
this.reload()}
async resetColumnsWidth(){this.columns.forEach(column=>{let width=this.defaultColumnWidth[column.type]
if(!width)width=this.defaultColumnWidth.default
this._columnsSetWidth(column.id,width)})
this._renderTable()}
updateLayout(){if(this.isConnected){this._setWidth()
this._setHeight()
this._setLimit()
this._renderTable()}}
_setWidth(){let newWidth=this._computeSize("width")
setTimeout(()=>{this.style.width=newWidth
this.datatable.style.width=this.clientWidth.toString()+"px"},50)}
_setHeight(){let newHeight=this._computeSize("height")
this.style.height=this.datatable.style.height=newHeight}
_setLimit(){if(!this.isConnected)return
let tableHeight=this.offsetHeight
let headerHeight=$("datatable-header:"+this.id).offsetHeight
let toolbarHeight=$("datatable-toolbar:"+this.id).offsetHeight
let bodyHeight=tableHeight-toolbarHeight-headerHeight
this.limit=Math.floor(bodyHeight/(this.rowHeight+1))}
async _dataSort(msgData){if(msgData.sortAction=="remove"){await this._dataSortRemove(msgData.sortIndex)}else{await this._dataSortBy(msgData.sortFieldName,msgData.sortDirection,msgData.sortIndex)}}
async _dataSortBy(fieldId,sortOrder,sortIndex){let newSortOption={}
newSortOption[fieldId]=sortOrder
if(this.sort.length==0){this.sort.push(newSortOption)}else{this.sort[sortIndex]=newSortOption}
await this._dataSortUpdate()}
async _dataSortRemove(sortIndex){this.sort.splice(sortIndex,1)
await this._dataSortUpdate()}
async _dataSortUpdate(){await this.collection.sortBy(this.sort)
this._renderTable()
kiss.pubsub.publish("EVT_VIEW_SORTED:"+this.id)
await this.updateConfig({sort:this.sort})}
async _dataFilterBy(filterConfig){this.skip=0
await this.collection.filterBy(filterConfig)
this._renderTable()
this.filter=filterConfig
await this.updateConfig({filter:this.filter})}
async _dataGroupBy(groupFields){this.skip=0
await this.collection.groupBy(groupFields)
this._renderTable()
if(groupFields.length===0){this.buttonExpand.hide()
this.buttonCollapse.hide()
this.buttonShowHierarchy.hide()}else{this.buttonExpand.show()
this.buttonCollapse.show()
this.buttonShowHierarchy.show()}
this.group=groupFields
await this.updateConfig({group:this.group})}
_groupToggle(groupId,groupLevel,rowIndex){if(this.collection.collapsedGroups.includes(groupId)){this._groupExpand(groupId,rowIndex)}else{this._groupCollapse(groupId)}}
_groupExpand(groupId,rowIndex){this.collection.groupExpand(groupId,rowIndex)
this._renderTable()
this._renderScroller()}
_groupCollapse(groupId){this.collection.groupCollapse(groupId)
this._renderTable()}
expandAll(){this.collection.groupExpandAll()
this._renderTable()}
collapseAll(){this.skip=0
this.collection.groupCollapseAll()
this._renderTable()}
_groupGetModelFields(){return this.model.getGroupableFields().map(field=>{return{value:field.id,label:field.label}})}
_groupUpdateGroupingFields(){if(!this.isConnected)return
const groupingField=$("grouping-field:"+this.id)
const modelFields=this._groupGetModelFields()
groupingField.value=this.group
groupingField.updateOptions(modelFields)}
_renderPage(size){if((size<0&&this.skip==0)||(size>0)&&((this.skip+size)>=this.collection.count))return
this.skip=((this.skip+2*size)>=this.collection.count)?(this.skip=this.collection.count-size):this.skip+size
this.skip=Math.max(0,this.skip)
this._renderTable()
this._renderScrollerPosition()}
_renderPagerIndex(){if(!this.isConnected)return
$("pager-index:"+this.id).innerHTML=(this.skip+1)+" - "+Math.min(this.collection.count,(this.skip+this.limit))+" / "+this.collection.count}
_renderTable(){this.datatableHeader1stColumn.innerHTML=""
this.datatableBody1stColumn.innerHTML=""
this.visibleColumns=this.columns.filter(column=>column.hidden!=true&&column.deleted!=true)
this._prepareColumnRenderers()
this._renderTableHeader()
this._renderTableBody()
return this}
_renderTableHeader(){let firstCell=document.createElement("div")
firstCell.setAttribute("id","header-1stColumn")
firstCell.setAttribute("col","-1")
firstCell.classList.add("datatable-column-header","datatable-column-header-1st")
firstCell.style.width=firstCell.style.minWidth=this.defaultColumnWidth.firstColumn+"px"
firstCell.innerHTML=`<span id='toggle-selection' class='datatable-header-checkbox ${(this.canSelect) ? "datatable-header-checkbox-off" : ""}'></span>`+"<span id='header-resizer-1st-column' class='datatable-column-header-resizer'>&nbsp</span>"
this.datatableHeader1stColumn.appendChild(firstCell)
this._columnsAdjustWidthFromLocalStorage()
this.datatableHeader.innerHTML=this.visibleColumns.map(this._renderColumnHeader.bind(this)).join("")+`<span class="datatable-column-header datatable-header-last-column">${(this.canAddField) ? `<span class="fas fa-plus"></span>` : ""}</span>`}
_renderTableBody(){this._columnsSetFirstColumnWidth(this.defaultColumnWidth.firstColumn)
let table=""
let firstColumn=""
this.startIndex=Math.max(0,this.skip)
this.lastIndex=Math.min(this.skip+this.limit,this.collection.records.length)
if(this.collection.group.length===0){for(let rowIndex=this.startIndex;rowIndex<this.lastIndex;rowIndex++){let record=this.collection.records[rowIndex]
firstColumn+="<div col=\"-1\" row=\""+rowIndex+"\" recordId=\""+record.id+"\" class=\"datatable-cell-1st\" style=\"width: "+this.defaultColumnWidth.firstColumn+"px; min-width: "+this.defaultColumnWidth.firstColumn+"px\">"
firstColumn+=this._renderRowContent1stColumn(record,rowIndex)
firstColumn+="</div>"
table+="<div row=\""+rowIndex+"\" recordId=\""+record.id+"\" class=\"datatable-row\">"
table+=this._renderRowContent(record,rowIndex)
table+="</div>"}}else{let nbOfRows=0
for(let rowIndex=this.skip;(nbOfRows<this.limit)&&(rowIndex<this.collection.records.length);rowIndex++){let record=this.collection.records[rowIndex]
if(record.$type=="group"){firstColumn+="<div col=\"-1\" row=\""+rowIndex+"\" class=\"datatable-group datatable-group-level-"+record.$groupLevel+"\" style=\"width: "+this.defaultColumnWidth.firstColumn+"px; min-width: "+this.defaultColumnWidth.firstColumn+"px\">"
firstColumn+=this._renderRowGroupContent1stColumn(record)
firstColumn+="</div>"
table+="<div row=\""+rowIndex+"\" groupLevel=\""+record.$groupLevel+"\" class=\"datatable-group-row\">"
table+=this._renderRowGroupContent(record)
table+="</div>"}else{firstColumn+="<div col=\"-1\" row=\""+rowIndex+"\" recordId=\""+record.id+"\" class=\"datatable-cell-1st\" style=\"width: "+this.defaultColumnWidth.firstColumn+"px; min-width: "+this.defaultColumnWidth.firstColumn+"px\">"
firstColumn+=this._renderRowContent1stColumn(record,rowIndex)
firstColumn+="</div>"
table+="<div row=\""+rowIndex+"\" recordId=\""+record.id+"\" class=\"datatable-row\">"
table+=this._renderRowContent(record,rowIndex)
table+="</div>"}
nbOfRows++}}
this.datatableBody.innerHTML=table
this.datatableBody1stColumn.innerHTML=firstColumn
this._renderPagerIndex()
this._renderSelection()
this._renderScroller()}
_renderRowDiv(rowIndex){let record=this.collection.records[rowIndex]
if(record.$type=="group")return this._renderRowGroupDiv(record,rowIndex)
let newRow=document.createElement("div")
newRow.setAttribute("row",rowIndex)
newRow.setAttribute("recordid",record.id)
newRow.classList.add("datatable-row")
let isSelected=!(this.selectedRecords.indexOf(record.id)==-1)
if(isSelected)newRow.classList.add("datatable-row-selected")
newRow.innerHTML=this._renderRowContent(record,rowIndex)
return newRow}
_renderRowDiv1stColumn(rowIndex){let record=this.collection.records[rowIndex]
if(record.$type=="group")return this._renderRowGroupDiv1stColumn(record,rowIndex)
let firstCell=document.createElement("div")
firstCell.setAttribute("col","-1")
firstCell.setAttribute("row",rowIndex)
firstCell.setAttribute("recordid",record.id)
firstCell.classList.add("datatable-cell-1st")
firstCell.style.width=firstCell.style.minWidth=this.defaultColumnWidth.firstColumn+"px"
let isSelected=!(this.selectedRecords.indexOf(record.id)==-1)
firstCell.innerHTML=this._renderRowContent1stColumn(record,rowIndex,isSelected)
return firstCell}
_renderRowContent(record,rowIndex){let row=""
for(let colIndex=0,length=this.visibleColumns.length;colIndex<length;colIndex++){let column=this.visibleColumns[colIndex]
const value=(column.renderer)?column.renderer(record[column.id],rowIndex,colIndex,record):record[column.id]
row+="<div col=\""+colIndex+"\" class=\"datatable-cell datatable-type-"+column.type+"\" style=\""+this._columnsConvertWidthToStyle(column.width)+"\">"+value+"</div>"}
row+="<div class='datatable-cell datatable-cell-blank'></div>"
return row}
_renderRowContent1stColumn(record,rowIndex,isSelected){return((this.canSelect)?"<span class=\"datatable-row-checkbox datatable-row-checkbox-"+((isSelected)?"on":"off")+"\"></span>":"")+"<span class=\"datatable-row-number\">"+((record.$index+1)||Number(rowIndex+1))+"</span>"+"<span class=\"datatable-row-action "+this.iconAction+"\"></span>"}
_renderRowGroupDiv(record,rowIndex){let newRow=document.createElement("div")
newRow.setAttribute("row",rowIndex)
newRow.classList.add("datatable-group-row")
newRow.innerHTML=this._renderRowGroupContent(record)
return newRow}
_renderRowGroupDiv1stColumn(record,rowIndex){let firstCell=document.createElement("div")
firstCell.setAttribute("col","-1")
firstCell.setAttribute("row",rowIndex)
firstCell.classList.add("datatable-group","datatable-group-level-"+record.$groupLevel)
firstCell.style.width=firstCell.style.minWidth=this.defaultColumnWidth.firstColumn+"px"
firstCell.innerHTML=this._renderRowGroupContent1stColumn(record)
return firstCell}
_renderRowGroupContent(record){let row=""
for(let colIndex=0,length=this.visibleColumns.length;colIndex<length;colIndex++){const column=this.visibleColumns[colIndex]
const field=this.model.getField(column.id)
const precision=(field&&field.precision)||0
const unit=(field&&field.unit)||""
let cellRawValue=record[column.id]
if(cellRawValue!==undefined){const aggregationType=column.summary||"summary"
const aggregationSettings=`<span class='fas fa-caret-down datatable-group-summary'><span>${txtTitleCase("#" + aggregationType)}</span></span>`
cellRawValue=(aggregationType!="summary")?cellRawValue[aggregationType].format(precision)+" "+unit:" "
row+="<div col=\""+colIndex+"\" class=\"datatable-group-cell\" style=\""+this._columnsConvertWidthToStyle(column.width)+"\">"+aggregationSettings+cellRawValue+"</div>"}else{row+="<div col=\""+colIndex+"\" class=\"datatable-group-cell\" style=\""+this._columnsConvertWidthToStyle(column.width)+"\"></div>"}}
row+="<div class='datatable-cell datatable-cell-blank'></div>"
return row}
_renderRowGroupContent1stColumn(record){let groupFieldId=this.collection.group[record.$groupLevel]
let groupColumn=this.getColumn(groupFieldId)
let groupClass=(this.collection.collapsedGroups.includes(record.$groupId))?"datatable-group-collapsed":"datatable-group-expanded"
let groupRawValue=record.$name
let groupCellValue=(groupColumn.renderer)?groupColumn.renderer(groupRawValue,null,null,record):groupRawValue
return"<span class='"+groupClass+"'></span>"+
((this.groupShowHierarchy)?"<span class='datatable-group-hierarchy'>"+record.$groupId+"</span>":"")+
groupCellValue+"&nbsp;&nbsp;("+record.$size+")"}
_renderColumnHeader(column,index){let localColumnWidthStyle=this._columnsConvertWidthToStyle(column.width)
let localColumnTitleWidthStyle=this._columnsConvertWidthToStyle(column.width-16)
return`<div id="header-${column.id}" col="${index}" class="datatable-column-header" style="${localColumnWidthStyle}">
                    <span
                        id="header-title-${column.id}"
                        class="datatable-column-header-title"
                        draggable="true"
                        ondragstart="this.closest('a-datatable')._columnsMoveWithdragAndDrop('dragstart', event, this)"
                        ondragover="this.closest('a-datatable')._columnsMoveWithdragAndDrop('dragover', event, this)"
                        ondragenter="this.closest('a-datatable')._columnsMoveWithdragAndDrop('dragenter', event, this)"
                        ondragleave="this.closest('a-datatable')._columnsMoveWithdragAndDrop('dragleave', event, this)"
                        ondrop="this.closest('a-datatable')._columnsMoveWithdragAndDrop('drop', event, this)"
                        ondblclick="this.closest('a-datatable').showColumnSetup('${column.id}')"
                        style="${localColumnTitleWidthStyle}"
                    >
                    ${column.title}
                    </span>
                    <span id="header-properties-for:${column.id}" class="datatable-column-header-properties fas fa-chevron-down">&nbsp</span>
                    <span id="header-resizer-for:${column.id}" class="datatable-column-header-resizer">&nbsp</span>
                </div>`.removeExtraSpaces()}
_prepareColumnRenderers(){this._prepareColumnValuesForSelectFields()
this.columns.forEach(column=>{switch(column.type){case"number":column.renderer=this._prepareColumnRendererForNumbers(column)
break
case"date":column.renderer=this._prepareColumnRendererForDates(column)
break
case"checkbox":column.renderer=this._prepareColumnRendererForCheckboxes(column)
break
case"select":column.renderer=this._prepareColumnRendererForSelectFields(column)
break
case"directory":column.renderer=this._prepareColumnRendererForDirectory(column)
break
case"link":column.renderer=this._prepareColumnRendererForLinkFields(column)
break
case"color":column.renderer=this._prepareColumnRendererForColors(column)
break
case"icon":column.renderer=this._prepareColumnRendererForIcons(column)
break
case"password":column.renderer=this._prepareColumnRendererForPasswords(column)
break
case"attachment":column.renderer=this._prepareColumnRendererForAttachments(column)
break
case"button":column.renderer=this._prepareColumnRendererForButtons(column)
break
default:column.renderer=this._prepareDefaultColumnRenderer(column)}})}
_prepareDefaultColumnRenderer(){return function(value){return value||""}}
_prepareColumnRendererForPasswords(){return function(){return"***"}}
_prepareColumnRendererForNumbers(column){const field=this.model.getField(column.id)
const precision=(field)?field.precision:2
const unit=(field.unit)?" "+field.unit:""
return function(value){if(value===undefined)return""
return Number(value).format(precision)+unit}}
_prepareColumnRendererForDates(column){const field=this.model.getField(column.id)
const dateFormat=(field)?field.dateFormat:"YYYY-MM-AA"
return function(value){if(!value)return""
return new Date(value).toLocaleDateString()}}
_prepareColumnRendererForCheckboxes(){return function(value){return`<span class=\"${(value === true) ? "fas fa-check datatable-type-checkbox-checked" : "far fa-square datatable-type-checkbox-unchecked"}\"/>`}}
_prepareColumnRendererForColors(){return function(value){if(!value)return""
return`<span class="datatable-type-color" style="background: ${value}"></span>`}}
_prepareColumnRendererForIcons(){return function(value){if(!value)return""
return`<span class="${value}"/>`}}
_prepareColumnRendererForDirectory(column){return function(values){return[].concat(values).map(value=>{if(!value)return""
const name=kiss.directory.getEntryName(value)
return(name)?`<span class="field-select-value">${name}</span>`:""}).join("")}}
_prepareColumnRendererForLinkFields(column){const field=this.model.getField(column.id)
if(!field||!field.link)return""
const linkModelId=field.link.modelId
if(!linkModelId)return""
const linkModel=kiss.app.models[linkModelId]
if(!linkModel)return""
return function(){return`<span class="field-link-value-cell" modelId="${linkModelId}">
                        ${(field.multiple)
                            ? linkModel.namePlural + "&nbsp; <span class='fas fa-sitemap'></span>"
                            : linkModel.name + "&nbsp; <span class='fas fa-link'></span>"}
                    </span>`.removeExtraSpaces()}}
_prepareColumnRendererForButtons(column){let colIndex="column_"+shortUid()
if(!column.id)column.id=colIndex
column.title=column.text||txtTitleCase("action")
return function(value,rowIndex,colIndex,record){return`
                <center>
                    <span id="column-button-${rowIndex}-${colIndex}" class="a-button datatable-cell-button" ${(column.button.tip) ? `onmouseover="this.attachTip('${column.button.tip}')"` : ""} onclick="this.getComponent()._rowTriggerButtonAction('${rowIndex}', '${colIndex}', '${record.id}')">
                        ${ (column.button.icon) ? `<span class="button-icon ${column.button.icon}"></span>` : "" }
                        ${ (column.button.text) ? `<span class="button-text">${column.button.text}</span>` : "" }
                    </span>
                </center>`.removeExtraSpaces()}}
_prepareColumnRendererForSelectFields(column){const field=this.model.getField(column.id)
if(field.valueRenderer)return field.valueRenderer
const options=this.cachedSelectFields.get(column.id)
if(!options)return""
return function(values){return[].concat(values).map(value=>{if(!value)return""
let option=options.get(value.toLowerCase())
if(!option)option={value:value}
if(!option.value||option.value==" ")return""
return`<span class="field-select-value" ${(option.color) ? `style="color: #ffffff; background-color: ${option.color}"` : ""}>${option.value}</span>`}).join("")}}
_prepareColumnValuesForSelectFields(){this.cachedSelectFields=new Map()
for(const field of this.model.fields){if(field.type=="select"){const options=(typeof field.options=="function")?field.options():field.options
let mapOptions=new Map(options.map(option=>[option.value.toLowerCase(),{value:option.label||option.value,color:option.color}]))
this.cachedSelectFields.set(field.id,mapOptions)}}}
_prepareColumnRendererForAttachments(column){const _this=this
return function(value){if((!value)||(value==" "))return""
let attachmentItems=value.map((file,i)=>{if(!file.path)return""
let preview
const fileExtension=file.path.split(".").pop().toLowerCase()
if(["jpg","jpeg","png","gif","webp"].indexOf(fileExtension)!=-1){const thumbnail=(file.path.indexOf("http")==-1)?"/"+file.path.replaceAll("\\","/"):file.path
preview=`<img id="${file.id}" class="datatable-type-attachment-image" src="${thumbnail}" onmouseenter="$('${_this.id}')._cellShowAttachmentName(event, '${this.id}')"></img>`}else{const{icon,color}=kiss.tools.fileToIcon(fileExtension)
preview=`<span id="${file.id}" style="color: ${color}" class="fas ${icon} datatable-type-attachment-icon" onmouseenter="$('${_this.id}')._cellShowAttachmentName(event, '${this.id}')"></span>`}
return`<span id="${file.id}" class="datatable-type-attachment">${preview}</span>`}).join("")
return`<span class="datatable-type-attachments-container" onclick="$('${_this.id}')._cellPreviewAttachment(event, '${this.id}')">${attachmentItems}</span>`}}
_cellPreviewAttachment(event,fieldId){const attachmentId=event.target.id
const cell=event.target.closest(".datatable-cell")
const record=this._cellGetRecord(cell)
const cellAttachments=record[fieldId]
createPreviewWindow(cellAttachments,attachmentId)}
_cellShowAttachmentName(event,fieldId){const attachmentId=event.target.id
const cell=event.target.closest(".datatable-cell")
const record=this._cellGetRecord(cell)
const cellAttachments=record[fieldId]
const attachment=cellAttachments.get(attachmentId)
let tipId=uid()
createHtml({id:tipId,position:"absolute",display:"block",zIndex:1000,html:attachment.filename,class:"a-tip",methods:{load:function(){document.onmousemove=(event)=>{if($(tipId))$(tipId).showAt(event.pageX,event.pageY+20)}
$(event.target.parentNode.id).onmouseleave=()=>{document.onmousemove=null
this.destroy()}
setTimeout(()=>this.destroy(),5000)},destroy:function(){try{this.deepDelete()}catch(err){}}}}).render()}
_renderScroller(){setTimeout(()=>{this.datatableScrollerContainer.style.top=this.datatableBody.getBoundingClientRect().top+"px"
this.datatableScrollerContainer.style.left=this.getBoundingClientRect().right-this.datatableScrollerContainer.offsetWidth+"px"
this._showScroller()},250)
this.datatableScrollerContainer.style.height=this.datatableBody.offsetHeight-10+"px"
this.datatableScroller.style.height=Math.min(this.collection.count*(this.rowHeight),10000)+"px"}
_showScroller(){if(this.showScroller!==false){setTimeout(()=>{this.datatableScrollerContainer.style.visibility="visible"},200)}}
_hideScroller(){this.datatableScrollerContainer.style.visibility="hidden"}
_renderScrollerPosition(){let percent=this.skip/(this.collection.records.length-this.limit)
let topPosition=Math.round((this.datatableScroller.offsetHeight-this.datatableBody.offsetHeight)*percent)
this.preventScroll=true
this.datatableScrollerContainer.scrollTop=topPosition}
_renderSelection(){if(!this.selectedRecords)return
this.selectedRecords.forEach(recordId=>{let rowIndexes=this._rowGetAllIndexes(recordId)
rowIndexes.forEach(rowIndex=>this._rowSelect(rowIndex))})}
_renderSelectionReset(){let selectedRows=this.datatableBody.querySelectorAll(".datatable-row-selected")
Array.from(selectedRows).forEach(row=>{let rowIndex=row.getAttribute("row")-this.skip
this._rowDeselect(rowIndex)})}
_renderSelectionRestore(){this._renderSelectionReset()
this.getSelection()
this._renderSelection()}
_renderToolbar(){if(this.isToolbarRendered){this._groupUpdateGroupingFields()
this.buttonKeepSynchronized._renderValues(this.keepSynchronized)
this.buttonShowHierarchy._renderValues(this.groupShowHierarchy)
return}
createButton({hidden:!this.canCreateRecord,target:"create:"+this.id,text:this.model.name.toTitleCase(),icon:"fas fa-plus",iconColor:this.color,borderWidth:"3px",borderRadius:"32px",action:async()=>this.createRecord(this.model)}).render()
this.buttonActions=createButton({hidden:this.showActions===false,target:"actions:"+this.id,tip:txtTitleCase("actions"),icon:"fas fa-ellipsis-v",iconColor:this.color,width:32,action:()=>this._buildActionMenu()}).render()
createButton({target:"select:"+this.id,tip:txtTitleCase("select columns"),icon:"fas fa-bars fa-rotate-90",iconColor:this.color,width:32,action:()=>this.showFieldsWindow()}).render()
this.buttonSort=createButton({hidden:!this.canSort,target:"sort:"+this.id,tip:txtTitleCase("to sort"),icon:"fas fa-sort",iconColor:this.color,width:32,action:()=>this.showSortWindow()}).render()
this.buttonFilter=createButton({hidden:!this.canFilter,target:"filter:"+this.id,tip:txtTitleCase("to filter"),icon:"fas fa-filter",iconColor:this.color,width:32,action:()=>this.showFilterWindow()}).render()
createButton({hidden:!this.canAddField,target:"add:"+this.id,tip:txtTitleCase("add a column"),icon:"fas fa-plus",iconColor:this.color,width:32,action:()=>this.showColumnSetup()}).render()
this.buttonExpand=createButton({hidden:(this.collection.group.length===0),target:"expand:"+this.id,tip:txtTitleCase("expand all"),icon:"far fa-plus-square",iconColor:this.color,width:32,action:()=>this.expandAll()}).render()
this.buttonCollapse=createButton({hidden:(this.collection.group.length===0),target:"collapse:"+this.id,tip:txtTitleCase("collapse all"),icon:"far fa-minus-square",iconColor:this.color,width:32,action:()=>this.collapseAll()}).render()
let groupingFields=this._groupGetModelFields()
let groupingFieldValues=[]
this.collection.group.forEach(fieldId=>{let groupingField=groupingFields.find(field=>field.value==fieldId)
if(groupingField)groupingFieldValues.push(groupingField.value)})
this.buttonGroup=createSelect({hidden:!this.canGroup,target:"group:"+this.id,id:"grouping-field:"+this.id,label:txtTitleCase("group by"),multiple:true,allowClickToDelete:true,options:groupingFields,minWidth:200,optionsColor:this.color,value:groupingFieldValues,styles:{"field-label":"white-space: nowrap;","field-select":"white-space: nowrap;",},events:{change:async function(event){let groupFields=this.getValue()
if(groupFields.length>6){let fieldGroupSelect=$(this.id)
fieldGroupSelect.value=fieldGroupSelect.getValue().slice(0,6)
fieldGroupSelect._renderValues()
createDialog({type:"message",title:txtTitleCase("seriously"),icon:"fas fa-exclamation-triangle",message:txtTitleCase("#too many groups"),buttonOKText:txtTitleCase("#understood")})
return}
let viewId=this.id.split(":")[1]
publish("EVT_VIEW_GROUPING:"+viewId,groupFields)}}}).render()
this.buttonKeepSynchronized=createCheckbox({hidden:(this.canEdit===false),target:"synchronize:"+this.id,tip:{text:txtTitleCase("#realtime sync"),maxWidth:300},iconOff:"fas fa-sync-alt",iconOn:"fas fa-sync-alt",iconColorOn:this.color,checked:this.keepSynchronized,events:{change:(event)=>{this.keepSynchronized=event.target.getValue()
this.reload()}}}).render()
this.buttonShowHierarchy=createCheckbox({hidden:(this.collection.group.length===0),target:"hierarchy:"+this.id,tip:txtTitleCase("show group hierarchy"),iconOff:"fas fa-list-ol",iconOn:"fas fa-list-ol",iconColorOn:this.color,checked:this.groupShowHierarchy,events:{change:(event)=>{this.groupShowHierarchy=event.target.getValue()
this._renderTable()}}}).render()
createButton({target:"pager-first:"+this.id,icon:"fas fa-step-backward",iconColor:this.color,width:32,events:{click:()=>this.showFirstPage()}}).render()
createButton({target:"pager-previous:"+this.id,icon:"fas fa-chevron-left",iconColor:this.color,width:32,events:{click:()=>this.showPreviousPage()}}).render()
createButton({target:"pager-next:"+this.id,icon:"fas fa-chevron-right",iconColor:this.color,width:32,events:{click:()=>this.showNextPage()}}).render()
createButton({target:"pager-last:"+this.id,icon:"fas fa-step-forward",iconColor:this.color,width:32,events:{click:()=>this.showLastPage()}}).render()
this.isToolbarRendered=true}
_rowToggleSelect(rowIndex){let checkbox=this._rowGetCheckbox(rowIndex)
let recordId=checkbox.parentNode.getAttribute("recordId")
let rowIndexes=this._rowGetAllIndexes(recordId)
let isSelected=(this.selectedRecords.indexOf(recordId)!=-1)
if(isSelected){rowIndexes.forEach(rowIndex=>this._rowDeselect(rowIndex))
kiss.selection.delete(this.id,recordId)}else{rowIndexes.forEach(rowIndex=>this._rowSelect(rowIndex))
kiss.selection.add(this.id,recordId)}
this.selectedRecords=kiss.selection.get(this.id)
return recordId}
_rowSelect(rowIndex){let checkbox=this._rowGetCheckbox(rowIndex)
checkbox.classList.add("datatable-row-checkbox-on")
checkbox.classList.remove("datatable-row-checkbox-off")
let row=this.datatableBody.querySelector("[row=\""+rowIndex+"\"]")
row.classList.add("datatable-row-selected")}
_rowDeselect(rowIndex){let checkbox=this._rowGetCheckbox(rowIndex)
checkbox.classList.add("datatable-row-checkbox-off")
checkbox.classList.remove("datatable-row-checkbox-on")
let row=this.datatableBody.querySelector("[row=\""+rowIndex+"\"]")
row.classList.remove("datatable-row-selected")}
_rowHighlight(rowIndex){let row=this.querySelector("[row=\""+rowIndex+"\"]")
row.classList.add("datatable-row-selected")}
async _rowTriggerButtonAction(rowIndex,colIndex,recordId){const column=this.columns[colIndex]
let record=this.collection.records[rowIndex]
if(column.button.action)await column.button.action(rowIndex,colIndex,recordId,record)}
_rowGetCheckbox(rowIndex){return this.datatableBody1stColumn.querySelector("[row=\""+rowIndex+"\"]").querySelector(".datatable-row-checkbox")}
_rowGetIndex(recordId){let row=this.datatableBody.querySelector("div[recordId='"+recordId+"']")
if(row)return row.getAttribute("row")
else return null}
_rowFindIndex(recordId){return this.collection.records.findIndex(record=>record.id==recordId)}
_rowGetAllIndexes(recordId){let rows=this.datatableBody.querySelectorAll("div[recordId='"+recordId+"']")
if(rows)return Array.from(rows).map(row=>row.getAttribute("row"))
else return null}
_columnsToggleOne(columnId){this._columnsToggle(columnId)
this._renderTable()
this.updateConfig({config:{columns:this.columns}})}
_columnsToggleAll(newState){let hidden=(newState=="hide")
this.columns.forEach(column=>this._columnsToggle(column.id,hidden))
this._renderTable()
this.updateConfig({config:{columns:this.columns}})}
_columnsToggle(columnId,hidden=null){let columnIndex=this.columns.findIndex(column=>column.id==columnId)
let newState=(hidden!=null)?hidden:!this.columns[columnIndex].hidden
this.columns[columnIndex].hidden=newState
return this}
_columnsHasHiddenColumns(){let hasHiddenColumns=false
this.columns.forEach(column=>{if(column.hidden==true)hasHiddenColumns=true})
return hasHiddenColumns}
async _columnsMove(sourceColumnId,targetColumnId,position){let currentColumn=this.getColumn(sourceColumnId)
let currentColumnIndex=this.columns.findIndex(column=>column.id==sourceColumnId)
let newColumns=this.columns.filter(column=>column.id!=currentColumn.id)
let targetColumnIndex=newColumns.findIndex(column=>column.id==targetColumnId)
let adjustPositionIndex=(position=="before")?0:1
if((targetColumnIndex==-1)||(currentColumnIndex==(targetColumnIndex+adjustPositionIndex)))return
newColumns.splice(targetColumnIndex+adjustPositionIndex,0,currentColumn)
this.columns=newColumns
this._renderTable()
await this.updateConfig({config:{columns:this.columns}})
kiss.pubsub.publish("EVT_VIEW_FIELD_MOVED:"+this.id)}
_columnsSetWidth(columnId,newWidth){let localStorageId
if(columnId=="1stColumn"){localStorage.setItem("config-datatable-"+this.id+"-1st-column",newWidth)
return}
let columnIndex=this.columns.findIndex(column=>column.id==columnId)
if(newWidth<=10)newWidth=10
this.columns[columnIndex].width=newWidth
localStorageId="config-datatable-"+this.id+"-columns"
localStorage.setItem(localStorageId,JSON.stringify(this.columns))}
_columnsMoveWithdragAndDrop(phase,event,element){let target=event.target
let targetCenterX=null
let colIndex=target.closest("div").getAttribute("col")
let columnCells=Array.from(this.querySelectorAll("div[col='"+colIndex+"']"))
switch(phase){case"dragstart":this.sourceColumnId=target.id.split("title-")[1]
break
case"dragover":targetCenterX=target.offsetLeft+target.clientWidth/2
if(event.x<targetCenterX){columnCells.forEach(cell=>{cell.classList.remove("datatable-column-dragover-right")
cell.classList.add("datatable-column-dragover-left")})}else{columnCells.forEach(cell=>{cell.classList.remove("datatable-column-dragover-left")
cell.classList.add("datatable-column-dragover-right")})}
event.preventDefault()
return false
case"dragleave":columnCells.forEach(cell=>{cell.classList.remove("datatable-column-dragover-left")
cell.classList.remove("datatable-column-dragover-right")})
break
case"drop":event.stopPropagation()
columnCells.forEach(cell=>{cell.classList.remove("datatable-column-dragover-left")
cell.classList.remove("datatable-column-dragover-right")})
targetCenterX=target.offsetLeft+target.clientWidth/2
let position=(event.x<targetCenterX)?"before":"after"
this._columnsMove(this.sourceColumnId,target.id.split("title-")[1],position)
break}}
_columnsResizeWithDragAndDrop(event,element){let columnId=element.parentNode.id.split("header-")[1]
let colIndex=element.parentNode.getAttribute("col")
let columnCells=Array.from(this.querySelectorAll("div[col='"+colIndex+"']"))
let columnHeader=element.parentNode
let columnHeaderTitle=columnHeader.children[0]
columnHeader.mouseStartX=event.x
let currentWidth=columnHeader.clientWidth
let newWidth
let columnMinSize=(columnId=="1stColumn")?90:20
document.onmousemove=(event)=>{let _event=event
setTimeout(()=>{newWidth=(currentWidth+_event.x-columnHeader.mouseStartX)
if(newWidth>columnMinSize){columnHeader.style.minWidth=columnHeader.style.width=newWidth+"px"
columnHeaderTitle.style.minWidth=columnHeaderTitle.style.width=newWidth-16+"px"
columnCells.forEach(cell=>cell.style.width=cell.style.minWidth=newWidth+"px")
if(columnId=="1stColumn")this._columnsSetFirstColumnWidth(newWidth)}},1)}
document.onmouseup=()=>{this._columnsSetWidth(columnId,Math.max(columnMinSize,newWidth))
document.onmousemove=null
document.onmouseup=null}}
_columnsConvertWidthToStyle(width){return"width: "+width+"px; min-width: "+width+"px;"}
_columnsConvertFirstColumnWidthToStyle(width){return"width: "+width+"px; min-width: "+width+"px;"}
_columnsSetFirstColumnWidth(newWidth){this.defaultColumnWidth.firstColumn=newWidth
this.datatableHeader1stColumn.style.minWidth=newWidth+"px"
this.datatableBody1stColumn.style.minWidth=newWidth+"px"}
_columnsAdjustWidthFromLocalStorage(){let localStorageId="config-datatable-"+this.id+"-1st-column"
let firstColumnWidth=localStorage.getItem(localStorageId)
this.defaultColumnWidth.firstColumn=(firstColumnWidth||this.defaultColumnWidth.firstColumn)
localStorageId="config-datatable-"+this.id+"-columns"
let localColumns=JSON.parse(localStorage.getItem(localStorageId))
this.columns=this.columns.map(column=>{const defaultColumnWidth=this.defaultColumnWidth[column.type]||this.defaultColumnWidth.default
column.width=column.width||defaultColumnWidth
if(localColumns){let localColumn=localColumns.find(localColumn=>localColumn.id==column.id)
if(localColumn&&localColumn.width)column.width=localColumn.width}
return column})}
_columnsSetAggregationType(column,x,y){createMenu({items:[{text:txtTitleCase("sum"),icon:"fas fa-chart-bar",action:async()=>{column.summary="sum"
this._renderTable()
this.updateConfig({config:{columns:this.columns}})}},{text:txtTitleCase("average"),icon:"fas fa-tachometer-alt",action:async()=>{column.summary="avg"
this._renderTable()
this.updateConfig({config:{columns:this.columns}})}},{text:txtTitleCase("#no summary"),icon:"fas fa-ban",action:async()=>{delete column.summary
this._renderTable()
this.updateConfig({config:{columns:this.columns}})}},]}).render().showAt(x,y)}
_cellSetValue(recordId,fieldId,value){try{const colIndex=this.visibleColumns.findIndex(column=>(column.id==fieldId))
if(colIndex==-1)return
const column=this.visibleColumns[colIndex]
const record=this.collection.getRecord(recordId)
const rowIndexes=this._rowGetAllIndexes(recordId)
rowIndexes.forEach(rowIndex=>{const row=this.datatableBody.querySelector("div[row='"+rowIndex+"']")
const cell=row.querySelector("div[col='"+colIndex+"']")
cell.innerHTML=(column.renderer)?column.renderer(value,rowIndex,colIndex,record):value})}catch(err){log("kiss.ui - datatable - Couldn't set the cell value",4,err)}}
async _cellSetCheckboxValue(recordId,fieldId){let record=this.collection.getRecord(recordId)
let currentCellValue=record[fieldId]||false
await record.updateField(fieldId,!currentCellValue)}
_cellGetNext(cell,direction){let shift={up:{x:0,y:-1},down:{x:0,y:1},left:{x:-1,y:0},right:{x:1,y:0}}
let rowIndex=this._cellGetRowIndex(cell)+shift[direction].y
let colIndex=this._cellGetColIndex(cell)+shift[direction].x
let row=this.datatableBody.querySelector("div[row='"+rowIndex+"']")
if(!row)return null
if(row.className=="datatable-group-row")return null
let nextCell=row.querySelector("div[col='"+colIndex+"']")
if(!nextCell)return null
if(this._cellGetFieldFormula(nextCell)){return null}else{return nextCell}}
_cellGetRowIndex(cell){return Number(cell.parentNode.getAttribute("row"))}
_cellGetColIndex(cell){return Number(cell.getAttribute("col"))}
_cellGetRecordId(cell){let rowIndex=this._cellGetRowIndex(cell)
return this.collection.records[rowIndex].id}
_cellGetRecordData(cell){let rowIndex=this._cellGetRowIndex(cell)
return this.collection.records[rowIndex]}
_cellGetRecord(cell){let recordId=this._cellGetRecordId(cell)
return this.collection.getRecord(recordId)}
_cellGetFieldId(cell){let col=cell.getAttribute("col")
let colHeader=this.datatableHeader.querySelector("div[col='"+col+"']")
return colHeader.id.split("header-")[1]}
_cellGetFieldFormula(cell){let fieldId=this._cellGetFieldId(cell)
let field=this.model.getField(fieldId)
return field.formula||null}
async _cellOpenLinkedRecord(fieldId,recordId){const record=this.collection.getRecord(recordId)
if(!record)return
const foreignRecords=record.getLinkedRecordsFrom(fieldId)
if(foreignRecords.length==0){const field=record.model.getField(fieldId)
const foreignModelId=field.link.modelId
const foreignModel=kiss.app.models[foreignModelId]
const foreignModelName=foreignModel.namePlural
return createNotification(txtTitleCase("#no links",null,{table:foreignModelName}))}
if(foreignRecords.length==1){this.selectRecord(foreignRecords[0])}else{kiss.context.records=foreignRecords
createRecordSelectorWindow(foreignRecords)}}
async _cellSwitchToEditMode(cell){const _this=this
let updateOnBlur=true
const cellType=cell.classList[1].split("-")[2]
if(["attachment","button","custom"].indexOf(cellType)!=-1)return
const record=this._cellGetRecord(cell)
const recordId=record.id
const fieldId=this._cellGetFieldId(cell)
const field=this.model.getField(fieldId)
const fieldType=field.type
const column=this.getColumn(fieldId)
if(column.isFromPlugin)return
const fieldInitialValue=record[fieldId]||""
const cellInitialStyle=cell.getAttribute("style")
if(field.computed)return
if(fieldType=="link")return await this.selectRecordById(recordId)
if(fieldType=="checkbox")return this._cellSetCheckboxValue(recordId,fieldId)
if(fieldType=="textarea")return this._cellEditTextarea(cell,field,fieldInitialValue)
if(fieldType=="select")return this._cellEditSelect(cell,field)
if(fieldType=="directory")return this._cellEditSelect(cell,field)
if(fieldType=="color")return this._cellEditColor(cell,field)
if(fieldType=="icon")return this._cellEditIcon(cell,field)
let cellWidth=cell.clientWidth+"px"
let cellHeight=cell.clientHeight+"px"
let inputId="input-"+recordId+"-"+fieldId
cell.innerHTML=`<input id="${inputId}" type="${fieldType}" value="${fieldInitialValue}">`
let fieldInput=$(inputId)
cell.style.width=fieldInput.style.width=cellWidth
cell.style.height=fieldInput.style.height=cellHeight
fieldInput.style.border="none"
fieldInput.style.padding="var(--datatable-cell-padding)"
fieldInput.style.color="var(--datatable-cell)"
fieldInput.style.background="var(--datatable-input-background)"
fieldInput.focus()
fieldInput.select()
fieldInput.onkeydown=await async function(event){updateOnBlur=true
let editNextCell=false
if(event.shiftKey&&event.key=="Tab"){editNextCell="left"}
else if(event.key=="Tab"){editNextCell="right"}
else if(event.key=="Enter"){editNextCell="down"}
else if(event.key=="Escape"){updateOnBlur=false
this.reset()}
if(editNextCell){updateOnBlur=false
event.stop()
this.updateCell()
let nextCell=_this._cellGetNext(cell,editNextCell)
if(nextCell)_this._cellSwitchToEditMode(nextCell)}}
fieldInput.updateCell=async function(){const newValue=(fieldType=="number")?Number(this.value):this.value
if(newValue!=fieldInitialValue){cell.showLoading({size:16})
if(_this.updateRecord){await _this.updateRecord(recordId,fieldId,newValue)}
const success=await record.updateField(fieldId,newValue)
if(!success)this.value=fieldInitialValue
cell.hideLoading()}else{this.reset()}}
fieldInput.reset=function(){try{cell.removeAttribute("style")
cell.setAttribute("style",cellInitialStyle)
cell.innerHTML=(column.renderer)?column.renderer(fieldInitialValue):fieldInitialValue}catch(err){log("kiss.ui - datatable - Couldn't restore the cell value",4,err)}}
fieldInput.onblur=async function(){if(updateOnBlur)this.updateCell()}}
_cellEditColor(cell,field){let record=this._cellGetRecord(cell)
let initialValue=record[field.id]
const picker=createPanel({modal:true,header:false,width:670,align:"center",verticalAlign:"center",items:[{type:"colorPicker",value:initialValue,selectorBorderRadius:"32px",events:{change:function(){let color=this.getValue()
record.updateField(field.id,color)
picker.close()}}}]}).render()}
_cellEditIcon(cell,field){let record=this._cellGetRecord(cell)
let initialValue=record[field.id]
const picker=createPanel({modal:true,header:false,width:675,align:"center",verticalAlign:"center",items:[{type:"iconPicker",value:initialValue,autoFocus:true,icons:kiss.webfonts.all,selectorBorderRadius:"32px",height:660,events:{change:function(){let icon=this.getValue()
record.updateField(field.id,icon)
picker.close()}}}]}).render()}
_cellEditSelect(cell,field){const record=this._cellGetRecord(cell)
const fieldType=field.type
let initialValue=record[field.id]
createPanel({id:"panel-edit-select",title:field.label,headerBackgroundColor:this.color,modal:true,draggable:true,width:660,align:"center",verticalAlign:"center",layout:"vertical",items:[{id:"datatable-edit-select",type:fieldType,value:initialValue,fieldWidth:"100%",flex:1,options:field.options,multiple:field.multiple,template:field.template,min:field.min,max:field.max,interval:field.interval,allowClickToDelete:true,allowSwitchOnOff:true},{layout:"horizontal",defaultConfig:{type:"button",flex:1,margin:"0px 5px 0px 5px"},items:[{text:txtUpperCase("cancel"),icon:"fas fa-times",color:"var(--button-cancel)",iconColor:"var(--button-cancel)",action:()=>{$("panel-edit-select").doNotModifyValue=true
$("panel-edit-select").close()}},{text:txtUpperCase("ok"),icon:"fas fa-check",color:"var(--button-ok)",iconColor:"var(--button-ok)",action:()=>$("panel-edit-select").close()}]}],events:{onclose:()=>{if($("panel-edit-select").doNotModifyValue)return
let newValue=$("datatable-edit-select").getValue()
if(newValue==initialValue)return
record.updateField(field.id,newValue)},onkeydown:function(event){if(event.key!="Escape")return
$("datatable-edit-select").setValue(initialValue)
$("panel-edit-select").doNotModifyValue=true
this.close()}}}).render()}
_cellEditTextarea(cell,field,initialValue){createPanel({id:"panel-edit-textarea",title:field.label,headerBackgroundColor:this.color,closable:true,modal:true,draggable:true,width:660,height:660,align:"center",verticalAlign:"center",layout:"vertical",items:[{id:"datatable-edit-textarea",type:"textarea",value:initialValue,fieldWidth:"100%",flex:1},{layout:"horizontal",defaultConfig:{type:"button",flex:1,margin:"0px 5px 0px 5px"},items:[{text:txtUpperCase("cancel"),icon:"fas fa-times",color:"var(--button-cancel)",iconColor:"var(--button-cancel)",action:()=>{$("panel-edit-textarea").doNotModifyValue=true
$("panel-edit-textarea").close()}},{text:txtUpperCase("ok"),icon:"fas fa-check",color:"var(--button-ok)",iconColor:"var(--button-ok)",action:()=>$("panel-edit-textarea").close()}]}],events:{onclose:()=>{if($("panel-edit-textarea").doNotModifyValue)return
let newTextareaValue=$("datatable-edit-textarea").getValue()
if(newTextareaValue==initialValue)return
let record=this._cellGetRecord(cell)
record.updateField(field.id,newTextareaValue)},onkeydown:function(event){if(event.key!="Escape")return
$("datatable-edit-textarea").setValue(initialValue)
$("panel-edit-textarea").doNotModifyValue=true
this.close()}},methods:{load:()=>setTimeout(()=>$("datatable-edit-textarea").focus(),100)}}).render()}
_buildActionMenu(){let buttonLeftPosition=$("actions:"+this.id).offsetLeft
let buttonTopPosition=$("actions:"+this.id).offsetTop
let actions=[txtTitleCase("cell size"),"-",{icon:"fas fa-circle",iconSize:"6px",text:txtTitleCase("compact"),action:()=>{this.rowHeight=40
this.setRowHeight(this.rowHeight)}},{icon:"fas fa-circle",iconSize:"10px",text:txtTitleCase("medium"),action:()=>{this.rowHeight=80
this.setRowHeight(this.rowHeight)}},{icon:"fas fa-circle",iconSize:"14px",text:txtTitleCase("tall"),action:()=>{this.rowHeight=120
this.setRowHeight(this.rowHeight)}},{icon:"fas fa-circle",iconSize:"18px",text:txtTitleCase("very tall"),action:()=>{this.rowHeight=160
this.setRowHeight(this.rowHeight)}},{icon:"fas fa-arrows-alt-h",text:txtTitleCase("reset column width"),action:()=>{this.resetColumnsWidth()}}]
if(this.actions.length){actions=actions.concat([...this.actions])}
createMenu({top:buttonTopPosition,left:buttonLeftPosition,items:actions}).render()}}
customElements.define("a-datatable",kiss.ui.Datatable)
const createDatatable=(config)=>document.createElement("a-datatable").init(config);kiss.ui.Dialog=class Dialog{constructor(config){const dialogId=config.id||kiss.tools.shortUid()
const dialogType=config.type||"dialog"
if(config.textAlign=="center"){config.message=`<center>${config.message}</center>`}
let dialogConfig={id:dialogId,class:"panel-dialog",width:config.width||null,height:config.height||null,align:"center",verticalAlign:"center",modal:true,draggable:true,closable:!(config.closable===false),title:config.title||"",icon:config.icon||"fas fa-info-circle",headerHeight:config.headerHeight,headerBackgroundColor:config.headerBackgroundColor||"#00aaee",items:[(dialogType=="message"||dialogType=="dialog")?{type:"html",width:"100%",padding:"32px",html:config.message}:null,(dialogType=="input")?{id:"input-box-field",type:"text",label:config.message,labelPosition:"top",width:"100%",fieldWidth:"100%",value:config.defaultValue||""}:null,(dialogType=="select")?{id:"input-box-field",type:"select",label:config.message,labelPosition:"top",width:"100%",value:config.defaultValue||"",multiple:!!config.multiple,options:config.options||[],allowValuesNotInList:false}:null,{layout:"horizontal",margin:"10px 0px 0px 0px",defaultConfig:{margin:5},items:[{hidden:(dialogType=="message"||config.noCancel==true),type:"button",text:config.buttonCancelText||txtTitleCase("cancel"),icon:config.iconCancel||"fas fa-times",iconColor:config.colorCancel||null,flex:1,events:{click:function(){this.closest("a-panel").close()}}},{hidden:(config.noOK==true),type:"button",text:config.buttonOKText||txtTitleCase("ok"),icon:config.iconOK||"fas fa-check",iconColor:config.colorOK||null,flex:1,events:{click:async function(){$(dialogId).validate()}}}]}],events:{onkeydown(event){if(event.key=="Escape"){this.close()}else if(event.key=="Enter"){this.validate()}}},methods:{_afterRender(){if(dialogType=="input"){setTimeout(()=>$("input-box-field").focus(),100)}else{setTimeout(()=>this.panelBody.focus(),100)}},async validate(){if(config.action){const newValue=((dialogType=="input")||(dialogType=="select"))?$("input-box-field").getValue():true
const result=await config.action(newValue)
if((config.autoClose==null)||(config.autoClose==true)||(result==true))this.close()}else{this.close()}}}}
if(config.methods)Object.assign(dialogConfig.methods,config.methods)
if(config.events)Object.assign(dialogConfig.events,config.events)
let dialog=createPanel(dialogConfig).render()
return dialog}}
const createDialog=(config)=>new kiss.ui.Dialog(config);kiss.ui.Html=class Html extends kiss.ui.Component{constructor(){super()}
init(config){super.init(config)
this.innerHTML=config.html
this._setProperties(config,[[["display","flex","flexFlow","flexFlow","flexWrap","alignItems","alignContent","width","minWidth","maxWidth","height","minHeight","maxHeight","overflow","overflowX","overflowY","padding","margin","position","top","left","right","float","color","background","backgroundColor","boxShadow","zIndex","border","borderStyle","borderWidth","borderColor","borderRadius","cursor"],[this.style]]])
return this}
setInnerHtml(html){this.config.html=html
this.innerHTML=html
return this}
getInnerHtml(){return this.innerHTML}}
customElements.define("a-html",kiss.ui.Html)
const createHtml=(config)=>document.createElement("a-html").init(config);kiss.ui.Image=class Image extends kiss.ui.Component{constructor(){super()}
init(config){super.init(config)
this.innerHTML=`<img id="image-content-${this.id}" src="${config.src}" ${(config.alt) ? `alt="${config.alt}"` : ""} class="image-content">`
this.imageContent=this.querySelector(".image-content")
this._setProperties(config,[[["draggable"],[this]],[["margin","position","top","left","right","float","boxShadow","zIndex","border","borderStyle","borderWidth","borderColor","borderRadius"],[this.style]],[["width","height","padding","cursor","objectFit"],[this.imageContent.style]]])
return this}
setValue(src){this.config.src=src
this.imageContent.src=src
return this}
getValue(){return this.imageContent.src}}
customElements.define("a-image",kiss.ui.Image)
const createImage=(config)=>document.createElement("a-image").init(config);kiss.ui.Menu=class Menu extends kiss.ui.Component{constructor(){super()}
init(config){super.init(config)
const altClass=config.classModifier||""
let defaultMenuItemRenderer=function(config){const iconSize=(config.iconSize)?`font-size: ${config.iconSize};`:""
const iconColor=(config.iconColor)?`color: ${config.iconColor}`:""
const iconStyle=(iconSize||iconColor)?`style="${iconSize} ${iconColor}"`:""
return`
                ${(typeof config != "string")
                    ? `<div class="menu-item ${altClass}"><span class="menu-item-icon ${altClass}"><i ${iconStyle}class="${config.icon}"></i></span><span class="menu-item-text ${altClass}">${config.text}</span></div>`
                    : ((config == "-") ? `<div class="menu-separator"></div>` : `<div class="menu-section">${config}</div>`)
                }`.removeExtraSpaces()}
this.visibleItems=config.items.filter(item=>item.hidden!=true&&item!=null&&item!="")
this.innerHTML=this.visibleItems.map(config.itemRenderer||defaultMenuItemRenderer).join("")
this.style.position="absolute"
this.style.display="block"
this.menuItems=this.querySelectorAll(".menu-item, .menu-separator, .menu-section")
this._setProperties(config,[[["padding","top","left","bottom","right","width","minWidth","maxWidth","height","minHeight","maxHeight","color","background","backgroundColor","border","borderStyle","borderWidth","borderColor","borderRadius","boxShadow"],[this.style]],[["itemBackground=background"],Array.from(this.menuItems).map(menuItem=>menuItem.style)]])
if(config.closeOnClick!==false)config.closeOnClick=true
let menu=this
for(let i=0;i<this.menuItems.length;i++){if(typeof menu.visibleItems[i]!="string")this.menuItems[i].onclick=function(event){if(config.closeOnClick)menu.close()
menu.visibleItems[i].action(event)}}
this.onmouseleave=()=>this.close()
this.animate(config.animate||{name:"zoomIn",speed:"faster"})
return this}
close(){kiss.views.remove(this.id)}
_afterRender(){kiss.tools.moveToViewport(this)}}
customElements.define("a-menu",kiss.ui.Menu)
const createMenu=(config)=>document.createElement("a-menu").init(config);kiss.ui.Notification=class Notification{constructor(config){const message=(typeof config=="string")?config:config.message||""
const notification=createPanel({top:(typeof config.top=="number")?config.top:100,width:config.width,align:"center",position:"fixed",header:false,class:"a-notification",animate:{name:"slideInDown",speed:"faster"},items:[{type:"html",width:"100%",html:message}]}).render()
setTimeout(()=>{notification.animate({name:"fadeOut",speed:"faster",callback:()=>{if(notification)notification.close()}})},(config.duration||2000))
return notification}}
const createNotification=(config)=>new kiss.ui.Notification(config);kiss.ui.Spacer=class Spacer extends kiss.ui.Component{constructor(){super()}
init(config){super.init(config)
this.style.display="block"
this._setProperties(config,[[["display","width","height","flex"],[this.style]]])
return this}}
customElements.define("a-spacer",kiss.ui.Spacer)
const createSpacer=(config)=>document.createElement("a-spacer").init(config);kiss.ui.Tip=class Tip{constructor(config){const tipId=uid()
const targetElement=config.target
const deltaX=config.deltaX||0
const deltaY=config.deltaY||20
const maxWidth=config.maxWidth||300
return createHtml({id:tipId,position:"absolute",display:"block",zIndex:1000,class:"a-tip",maxWidth,html:config.text,methods:{load:function(){document.onmousemove=(event)=>{const element=$(tipId)
element.showAt(event.pageX+deltaX,event.pageY+deltaY)
kiss.tools.moveToViewport(element)}
$(targetElement).onmouseenter=()=>this.render()
$(targetElement).onmouseleave=()=>{document.onmousemove=null
this.hide()}
$(targetElement)._beforeDelete=()=>{document.onmousemove=null
this.hide()}}}})}}
const createTip=(config)=>new kiss.ui.Tip(config);kiss.ui.TreeList=class TreeList extends kiss.ui.Component{constructor(){super()}
init(config){super.init(config)
const defaultFolderRenderer=(node)=>`${node.name}`
const defaultLeafRenderer=(node)=>`${node.name}`
const buildTreeList=function(tree,fnFolderRenderer,fnLeafRenderer){let html='<ul class="tree">'
tree.forEach(node=>{let isFolder=((node.items)&&(node.items.length!=0))
if(isFolder==true){html+=`<li id="${node.id || uid()}" class="tree-folder tree-folder-open" onclick="this.getComponent().onFolderClick(event, this)"><div onclick="this.parentNode.switch()">`+fnFolderRenderer(node)+"</div>"}else{html+=`<li id="${node.id || uid()}" class="tree-leaf" onclick="this.getComponent().onLeafClick(event, this)"><div>`+fnLeafRenderer(node)+"</div>"}
if(isFolder)html+=buildTreeList(node.items,fnFolderRenderer,fnLeafRenderer)
html+="</li>"})
html+="</ul>"
return html}
this.innerHTML=buildTreeList(config.tree,config.folderRenderer||defaultFolderRenderer,config.leafRenderer||defaultLeafRenderer)
return this}}
customElements.define("a-treelist",kiss.ui.TreeList)
const createTreeList=(config)=>document.createElement("a-treelist").init(config)
HTMLLIElement.prototype.switch=function(){this._toggleClass("tree-folder-open")
this._toggleClass("tree-folder-closed")
this.children.forEach(function(node){if(node.nodeName=="UL"){if(node.style.display=="none"){node.style.display="block"}else{node.style.display="none"}}})
return this};kiss.ui.Attachment=class Attachment extends kiss.ui.Component{constructor(){super()}
init(config={}){super.init(config)
this.value=config.value||[]
this.multiple=config.multiple||false
if(!Array.isArray(this.value))this.value=[]
this.innerHTML=`${ (config.label) ? `<span id="field-label-${this.id}"class="field-label">${config.label||""}</span>` : "" }
                <span class="a-button field-attachment-button field-upload-button">
                    <span class="fas fa-paperclip field-attachment-icon"></span>
                    ${txtTitleCase("attach files")}
                </span>
                
                ${(true) ? "" : `<span class="a-button field-attachment-button display-as-grid fas fa-th-list"></span><span class="a-button field-attachment-button display-as-gallery fas fa-th-large"></span>`}

                <div class="field-attachment-gallery"></div>
             `.removeExtraSpaces()
this.label=this.querySelector(".field-label")
this.fieldValues=this.querySelector(".field-attachment-gallery")
this._setProperties(config,[[["margin","padding"],[this.style]]])
this.displayMode="flex"
this.classList.add("a-attachment")
if(config.record)this._bindRecord(config.record)
setTimeout(()=>this._renderValues(),200)
this.onclick=function(event){if(event.target.classList.contains("field-upload-button")){this.showUploadWindow()}
else if(event.target.classList.contains("display-as-grid")){createNotification(txtTitleCase("#feature coming soon"))}
else if(event.target.classList.contains("display-as-gallery")){createNotification(txtTitleCase("#feature coming soon"))}}
this.subscriptions.push(subscribe("EVT_FILE_UPLOAD",msgData=>{if((msgData.modelId==this.modelId)&&(msgData.recordId==this.recordId)&&(msgData.fieldId==this.id)){let newValues=msgData.files.map(file=>{return{id:file.id,filename:file.originalname,path:file.path,size:file.size,type:file.type,createdAt:file.createdAt,createdBy:file.createdBy}})
this.setValue(this.getValue().concat(newValues))}}))
return this}
showUploadWindow(){createFileUploadWindow({modelId:this.record?.model.id,recordId:this.record?.id,fieldId:this.id})}
_bindRecord(record){this.record=record
this.modelId=record.model.id
this.recordId=record.id
if(record[this.id]){this.value=this.initialValue=record[this.id]}
const updateField=(updates)=>{if(this.id in updates){const newValue=updates[this.id]
if(newValue){this.value=newValue
this._renderValues()}}}
this.subscriptions.push(subscribe("EVT_DB_UPDATE:"+this.modelId.toUpperCase(),(msgData)=>{if((msgData.modelId==this.modelId)&&(msgData.id==this.recordId)){const updates=msgData.data
updateField(updates)}}))
this.subscriptions.push(subscribe("EVT_DB_UPDATE_BULK",(msgData)=>{const operations=msgData.data
operations.forEach(operation=>{if((operation.modelId==this.modelId)&&(operation.recordId==this.recordId)){const updates=operation.updates
updateField(updates)}})}))
return this}
setValue(newValues){newValues=[].concat(newValues)
const updateValue=(newValues)=>{this.value=newValues
this._renderValues()
if(this.onchange)this.onchange(newValues)}
if(this.record){this.record.updateField(this.id,newValues).then(success=>{if(success){updateValue(newValues)}
else{updateValue(this.initialValue)}})}
else{updateValue(newValues)}
return this}
getValue(){return this.value||[]}
resetValue(){this.value=[]
this._renderValues()
return this}
getLabel(){return this?.label?.innerText||""}
setLabel(newLabel){if(!this.label)return
this.config.label=newLabel
this.label.innerText=newLabel
return this}
_renderValues(){if((this.value=="")||(this.value==null)||(this.value=="undefined")||(this.value[0]==null)||(this.value[0]=="")){this.fieldValues.innerHTML=""
return}
if(!Array.isArray(this.value))this.value=[this.value]
this.fieldValues.innerHTML=this.value.map((file,i)=>{if(!file.path)return""
let preview
const filePath=(file.path.indexOf("http")==-1)?"/"+file.path.replaceAll("\\","/"):file.path
const fileExtension=file.path.split(".").pop().toLowerCase()
if(["jpg","jpeg","png","gif","webp"].indexOf(fileExtension)!=-1){preview=`<img class="field-attachment-thumbnail" src="${filePath}"></img>`}else{const{icon,color}=kiss.tools.fileToIcon(fileExtension)
preview=`<span style="color: ${color}" class="fas ${icon} upload-thumbnail"></span>`}
return`
                <div>
                    <div class="field-attachment-item" id="${file.id}" onclick="this.closest('a-attachment')._previewAttachment(event)">
                    <span class="field-attachment-thumbnail-container" >${preview}</span>
                    <span class="field-attachment-filename">${file.filename}</span>
                    <span class="field-attachment-filesize">${file.size.toFileSize()}</span>
                    <span class="field-attachment-delete fas fa-trash" index="${i}" onclick="$('${this.id}')._deleteFile(event, '${file.id}')"></span>
                    <a href="${filePath}" download><span class="field-attachment-download far fa-arrow-alt-circle-down"></span></a>
                </div>`}).join("")}
_previewAttachment(event){if([...event.target.classList].includes("field-attachment-download"))return
const attachmentId=event.target.closest(".field-attachment-item").id
const cellAttachments=this.getValue()
createPreviewWindow(cellAttachments,attachmentId)}
_deleteFile(event,fileId){event.stop()
createDialog({title:txtTitleCase("deleting a file"),icon:"fas fa-trash",message:txtTitleCase("do you really want to delete this file?"),action:()=>{let currentValues=this.getValue()
let newValues=currentValues.removeById(fileId)
this.setValue(newValues)
const fileCollection=kiss.app.collections.file
fileCollection.deleteOne(fileId,true)}})}}
customElements.define("a-attachment",kiss.ui.Attachment)
const createAttachment=(config)=>document.createElement("a-attachment").init(config);kiss.ui.Checkbox=class Checkbox extends kiss.ui.Component{constructor(){super()}
init(config){super.init(config)
const id=this.id
let defaultIconOn,defaultIconOff
switch(config.shape){case"square":defaultIconOn="far fa-check-square"
defaultIconOff="far fa-square"
break
case"circle":defaultIconOn="far fa-check-circle"
defaultIconOff="far fa-circle"
break
case"switch":defaultIconOn="fas fa-toggle-on"
defaultIconOff="fas fa-toggle-off"
break
case"star":defaultIconOn="fas fa-star"
defaultIconOff="far fa-star"
break
default:defaultIconOn="far fa-check-square"
defaultIconOff="far fa-square"}
const isChecked=config.checked||config.value
this.iconOn=config.iconOn||defaultIconOn
this.iconOff=config.iconOff||defaultIconOff
this.iconColorOn=config.iconColorOn||"#20c933"
this.iconColorOff=config.iconColorOff||"#aaaaaa"
const defaultIcon=(isChecked==true)?this.iconOn:this.iconOff
const defaultIconColor=(isChecked==true)?this.iconColorOn:this.iconColorOff
if(config.readonly==true)config.disabled=true
this.innerHTML=`${ (config.label) ? `<label id="field-label-${id}"for="${id}"class="field-label">${config.label||""}</label>` : "" }
                <span id="" style="color: ${defaultIconColor}" class="field-checkbox-icon ${defaultIcon}"></span>
                <input type="checkbox" id="${id}" name="${id}" ${(isChecked) ? `checked="${isChecked}"` : ""} class="field-checkbox" ${(config.disabled == true) ? "disabled" : ""}>
            `.removeExtraSpaces()
this.label=this.querySelector(".field-label")
this.field=this.querySelector(".field-checkbox")
this.icon=this.querySelector(".field-checkbox-icon")
this._setProperties(config,[[["draggable"],[this]],[["width","height","display","margin","padding","flex"],[this.style]],[["value"],[this.field]],[["fieldWidth=width","height=lineHeight","iconSize=fontSize"],[this.icon.style]],[["color","fontSize","labelAlign=textAlign","labelFlex=flex"],[this?.label?.style]]])
this.displayMode="flex"
this.style.flexFlow="row"
if(config.disabled!=true){this.icon.onclick=()=>{this.field.checked=!this.field.checked
this.setValue(this.field.checked)}}
if(config.label){if(config.labelWidth)this.setLabelWidth(config.labelWidth)
this.config.labelPosition=config.labelPosition||"left"
this.setLabelPosition(config.labelPosition)
if(config.disabled!=true)this.label.onclick=this.icon.onclick}
this.classList.add("a-field")
if(config.record)this._bindRecord(config.record)
this._renderValues()
return this}
_bindRecord(record){this.record=record
this.modelId=record.model.id
this.recordId=record.id
if(record[this.id]){this.field.checked=this.initialValue=record[this.id]}
const updateField=(updates)=>{if(this.id in updates){const newValue=updates[this.id]
if(newValue||(newValue===false)){this.field.checked=newValue
this._renderValues()}}}
this.subscriptions.push(subscribe("EVT_DB_UPDATE:"+this.modelId.toUpperCase(),(msgData)=>{if((msgData.modelId==this.modelId)&&(msgData.id==this.recordId)){const updates=msgData.data
updateField(updates)}}))
this.subscriptions.push(subscribe("EVT_DB_UPDATE_BULK",(msgData)=>{const operations=msgData.data
operations.forEach(operation=>{if((operation.modelId==this.modelId)&&(operation.recordId==this.recordId)){const updates=operation.updates
updateField(updates)}})}))
return this}
_renderValues(){const newState=this.field.checked
const iconAdd=(newState==true)?this.iconOn:this.iconOff
const iconRemove=(newState==true)?this.iconOff:this.iconOn
iconRemove.split(" ").forEach(className=>this.icon.classList.remove(className))
iconAdd.split(" ").forEach(className=>this.icon.classList.add(className))
this.icon.style.color=(newState==true)?this.iconColorOn:this.iconColorOff}
setValue(newState){const updateValue=(newState)=>{this.field.checked=newState
this._renderValues()
this.dispatchEvent(new Event("change"))}
if(this.record){this.record.updateField(this.id,newState).then(success=>{if(success){updateValue(newState)}
else{updateValue(this.initialValue)}})}else{updateValue(newState)}
return this}
getValue(){return this.field.checked}
toggleValue(){this.setValue(!this.getValue())}
getLabel(){return this?.label?.innerText||""}
setLabel(newLabel){if(!this.label)return
this.config.label=newLabel
this.label.innerText=newLabel
return this}
setWidth(width){this.config.width=width
this.style.width=this._computeSize("width",width)
return this}
setFieldWidth(width){this.config.fieldWidth=width
this.icon.style.width=this._computeSize("fieldWidth",width)
return this}
setLabelWidth(width){this.config.labelWidth=width
this.label.style.width=this._computeSize("labelWidth")
return this}
getLabelPosition(){return this.config.labelPosition}
setLabelPosition(position){this.config.labelPosition=position
switch(position){case"top":this.style.flexFlow="column"
this.style.alignItems="unset"
this.icon.style.order=1
break
case"bottom":this.style.flexFlow="column"
this.style.alignItems="unset"
this.icon.style.order=-1
break
case"right":this.style.flexFlow="row"
this.style.alignItems="center"
this.icon.style.order=-1
break
default:this.style.flexFlow="row"
this.style.alignItems="center"
this.icon.style.order=1}
return this}}
customElements.define("a-checkbox",kiss.ui.Checkbox)
const createCheckbox=(config)=>document.createElement("a-checkbox").init(config);kiss.ui.Color=class Color extends kiss.ui.Component{constructor(){super()}
init(config){super.init(config)
const id=this.id
this.value=config.value
this.innerHTML=`${ (config.label) ? `<label id="field-label-${this.id}"for="${this.id}"class="field-label">${config.label||""}</label>` : "" }
            <div class="field-color-container">
                <div class="field-color-palette" style="background-color: ${this.value}"></div>
                ${(!config.hideCode) ? `<input type="text"readonly class="field-color-input"value="${this.value}"></input>` : ""}
            </div>                
            `.removeExtraSpaces()
this.label=this.querySelector(".field-label")
this.fieldContainer=this.querySelector(".field-color-container")
this.color=this.querySelector(".field-color-palette")
this.field=this.querySelector(".field-color-input")
if(config.hideCode==true)this.color.style.width=this.color.style.height="100%"
this._setProperties(config,[[["draggable"],[this]],[["width","height","flex","display","margin","padding"],[this.style]],[["fieldWidth=width","fieldHeight=height","fieldFlex=flex","border","borderStyle","borderWidth","borderColor","borderRadius","boxShadow"],[this.fieldContainer.style]],[["labelAlign=textAlign","labelFlex=flex"],[this.label?.style]],[["borderRadius"],[this.color.style]]])
this.displayMode="flex"
this.style.flexFlow="row"
if(config.label){if(config.labelWidth)this.setLabelWidth(config.labelWidth)
this.config.labelPosition=config.labelPosition||"left"
this.setLabelPosition(config.labelPosition)}
if(config.disabled!=true&&config.computed!=true){this.onclick=(event)=>{const clickedElement=event.target.closest(".field-color-container")
if(!clickedElement)return
const picker=createPanel({modal:true,header:false,width:670,align:"center",verticalAlign:"center",items:[{type:"colorPicker",value:$(id).getValue(),selectorBorderRadius:"32px",height:100,events:{change:function(){let color=this.getValue()
$(id).setValue(color)
picker.close()}}}]}).render()}}
if(config.record)this._bindRecord(config.record)
this._renderValues()
return this}
_bindRecord(record){this.record=record
this.modelId=record.model.id
this.recordId=record.id
if(record[this.id]){this.value=this.initialValue=record[this.id]}
const updateField=(updates)=>{if(this.id in updates){this.value=updates[this.id]
this._renderValues()}}
this.subscriptions.push(subscribe("EVT_DB_UPDATE:"+this.modelId.toUpperCase(),(msgData)=>{if((msgData.modelId==this.modelId)&&(msgData.id==this.recordId)){const updates=msgData.data
updateField(updates)}}))
this.subscriptions.push(subscribe("EVT_DB_UPDATE_BULK",(msgData)=>{const operations=msgData.data
operations.forEach(operation=>{if((operation.modelId==this.modelId)&&(operation.recordId==this.recordId)){const updates=operation.updates
updateField(updates)}})}))
return this}
setValue(color){if(color==this.getValue())return
const updateValue=(color)=>{this.value=color
this._renderValues()
this.dispatchEvent(new Event("change"))}
if(this.record){this.record.updateField(this.id,color).then(success=>{if(success){updateValue(color)}
else{updateValue(this.initialValue)}})}
else{updateValue(color)}
return this}
_renderValues(){const color=this.value||""
if(this.field)this.field.value=color
this.color.style.background=color}
getValue(){return this.value}
setLabel(newLabel){if(!this.label)return
this.config.label=newLabel
this.label.innerText=newLabel
return this}
getLabel(){return this?.label?.innerText||""}
setWidth(width){this.config.width=width
this.style.width=this._computeSize("width",width)
return this}
setFieldWidth(width){this.config.fieldWidth=width
this.fieldContainer.style.width=this._computeSize("fieldWidth",width)
return this}
setLabelWidth(width){this.config.labelWidth=width
this.label.style.width=this._computeSize("labelWidth",width)
return this}
getLabelPosition(){return this.config.labelPosition}
setLabelPosition(position){this.config.labelPosition=position
switch(position){case"top":this.style.flexFlow="column"
this.fieldContainer.style.order=1
break
case"bottom":this.style.flexFlow="column"
this.fieldContainer.style.order=-1
break
case"right":this.style.flexFlow="row"
this.fieldContainer.style.order=-1
break
default:this.style.flexFlow="row"
this.fieldContainer.style.order=1}
return this}}
customElements.define("a-color",kiss.ui.Color)
const createColorField=(config)=>document.createElement("a-color").init(config);kiss.ui.ColorPicker=class ColorPicker extends kiss.ui.Component{constructor(){super()}
init(config={}){super.init(config)
this.value=config.value
this.icon=config.icon||"fas fa-check"
this.iconSize=config.iconSize||"16px"
this.selectorSize=config.selectorSize||"32px"
this.selectorBorderRadius=config.selectorBorderRadius||"5px"
this.columns=config.columns||10000
this.palette=config.palette||kiss.global.palette
this.autoFocus=config.autoFocus
if(config.record)this._bindRecord(config.record)
this.specialId=this.id.replace(new RegExp("-","g"),"_")
this.innerHTML=this.palette.map((color,index)=>`<span id="${this.specialId}:color-#${color}"
                    class="color-selector"
                    style=
                    "
                        width: ${this.selectorSize};
                        height: ${this.selectorSize};
                        line-height: ${this.selectorSize};
                        font-size: ${this.iconSize};
                        background-color: #${color};
                        border-radius: ${this.selectorBorderRadius};
                    "
                >
                ${(this.value == "#" + color.toUpperCase()) ? `<span style="color: #ffffff"class="${this.icon} color-selector-selected"></span>` : ""}                
                </span>${((index + 1) % this.columns == 0) ? "<br>" : ""}`.removeExtraSpaces()).join("")
this._setProperties(config,[[["width","height","margin","padding"],[this.style]],])
this.displayMode="inline-block"
this.onclick=(event)=>{const colorPicker=event.target.closest(".color-selector")
if(!colorPicker)return
const color=colorPicker.id.split("-")[1]
this.setValue(color)
if(config.action)config.action(color)}
return this}
_afterRender(){if(!this.autoFocus)return
setTimeout(()=>this.focus(),500)}
_bindRecord(record){this.record=record
this.modelId=record.model.id
this.recordId=record.id
if(record[this.id]){this.value=this.initialValue=record[this.id]}
const updateField=(updates)=>{if(this.id in updates){this.value=updates[this.id]
this._renderValues()}}
this.subscriptions.push(subscribe("EVT_DB_UPDATE:"+this.modelId.toUpperCase(),(msgData)=>{if((msgData.modelId==this.modelId)&&(msgData.id==this.recordId)){const updates=msgData.data
updateField(updates)}}))
this.subscriptions.push(subscribe("EVT_DB_UPDATE_BULK",(msgData)=>{const operations=msgData.data
operations.forEach(operation=>{if((operation.modelId==this.modelId)&&(operation.recordId==this.recordId)){const updates=operation.updates
updateField(updates)}})}))
return this}
setValue(color){if(color.toUpperCase()==this.getValue())return
const updateValue=(color)=>{this.value=color
this._renderValues()
this.dispatchEvent(new Event("change"))}
if(this.record){this.record.updateField(this.id,color).then(success=>{if(success){updateValue(color)}
else{updateValue(this.initialValue)}})}else{updateValue(color)}
return this}
_renderValues(){const color=(this.value||"").toUpperCase()
Array.from(this.children).forEach(colorSelector=>{colorSelector.classList.remove("color-selector-selected")
colorSelector.innerHTML=""})
let selectedColor=$(this.specialId+":color-"+color)
if(!selectedColor)return
selectedColor.innerHTML=`<span style="color: #ffffff" class="${this.icon}"></span>`
selectedColor.classList.add("color-selector-selected")}
getValue(){return(this.value||"").toUpperCase()}
setWidth(width){this.config.width=width
this.style.width=this._computeSize("width",width)
return this}
setHeight(height){this.config.height=height
this.style.height=this._computeSize("height",height)
return this}
focus(){const selectedColor=this.querySelector(".color-selector-selected")
if(!selectedColor)return
if(selectedColor)setTimeout(()=>{selectedColor.scrollIntoView({block:"center",inline:"center",behavior:"smooth"})},1)
return this}}
customElements.define("a-colorpicker",kiss.ui.ColorPicker)
const createColorPicker=(config)=>document.createElement("a-colorpicker").init(config);kiss.ui.Field=class Field extends kiss.ui.Component{constructor(){super()}
init(config){super.init(config)
const id=this.id
if(this.type!="textarea"){this.innerHTML=`
                ${ (config.label) ? `<label id="field-label-${id}"for="${id}"class="field-label">${config.label||""}</label>` : "" }
                <input type="${this.type}" id="field-input-${id}" name="${id}" class="field-input">
                `.removeExtraSpaces()}else{this.innerHTML=`
                ${ (config.label) ? `<label id="field-label-${id}"for="${id}"class="field-label">${config.label||""}</label>` : "" }
                <textarea id="field-textarea-${id}" name="${id}" ${(config.rows) ? `rows=${(config.rows)}` : ""} ${(config.cols) ? `cols=${(config.cols)}` : ""} class="field-input">${(config.value) ? config.value : ""}</textarea>
                `.removeExtraSpaces()}
this.field=this.querySelector(".field-input")
this.label=this.querySelector(".field-label")
config.readOnly=!!config.readOnly||!!config.computed
if(config.max==0)delete config.max
this._setProperties(config,[[["draggable"],[this]],[["width","minWidth","height","flex","display","margin","padding"],[this.style]],[["value","maxLength","min","max","placeholder","readOnly","disabled","required"],[this.field]],[["fieldWidth=width","fieldHeight=height","fieldFlex=flex","fontFamily","boxShadow"],[this.field.style]],[["labelAlign=textAlign","labelFlex=flex"],[this.label?.style]]])
this.displayMode="flex"
this.style.flexFlow="row"
if(config.label){if(config.labelWidth)this.setLabelWidth(config.labelWidth)
this.config.labelPosition=config.labelPosition||"left"
this.setLabelPosition(config.labelPosition)}
this.classList.add("a-field")
this.field.onchange=(event)=>{const newValue=event.target.value
if((newValue=="")&&this.field.required){createNotification(txtTitleCase("this field is required"))}else{this.setValue(newValue)}}
if(this.config.type=="number"){this.field.onkeydown=(event)=>{if(event.key=="ArrowDown"||event.key=="ArrowUp")event.stop()}}
this.isValid=true
this._initValidationRules()
if(config.record)this._bindRecord(config.record)
return this}
_bindRecord(record){this.record=record
this.modelId=record.model.id
this.recordId=record.id
if(record[this.id]){this.field.value=this.initialValue=record[this.id]}
const updateField=(updates)=>{if(this.id in updates){const newValue=updates[this.id]
if(newValue||(newValue===0)||(newValue==="")){this.field.value=newValue}}}
this.subscriptions.push(subscribe("EVT_DB_UPDATE:"+this.modelId.toUpperCase(),(msgData)=>{if((msgData.modelId==this.modelId)&&(msgData.id==this.recordId)){const updates=msgData.data
updateField(updates)}}))
this.subscriptions.push(subscribe("EVT_DB_UPDATE_BULK",(msgData)=>{const operations=msgData.data
operations.forEach(operation=>{if((operation.modelId==this.modelId)&&(operation.recordId==this.recordId)){const updates=operation.updates
updateField(updates)}})}))
return this}
_initValidationRules(){this.required=this.config.required
this.validationRegex=this.config.validationRegex
this.validationType=this.config.validationType
this.validationFormula=this.config.validationFormula
this.field.onkeyup=()=>this.validate()}
validate(){this.setValid()
if(this.required){if(this.getValue()=="")this.setInvalid()}
if(this.validationType){let regex
switch(this.validationType){case"alpha":regex=new RegExp(`^[a-zA-Z_]+$`)
break
case"alphanumeric":regex=new RegExp(`^[a-zA-Z0-9]([a-zA-Z0-9_])+$`)
break
case"email":regex=new RegExp(`\\S+@\\S+\\.\\S+`)
break
case"url":regex=new RegExp(`^(http(s?):\\/)?\\/(.)+$`)
break
case"ip":regex=new RegExp(`^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$`)
break}
if(!this.field.value.match(regex))this.setInvalid()}
else if(this.validationRegex){if(!this.field.value.match(this.validationRegex))this.setInvalid()}
else if(this.validationFormula){const result=eval(this.validationFormula)
if(result!=true)this.setInvalid()}
return this.isValid}
setValue(newValue){if(this.getDataType()=="number")newValue=Number(newValue)
if(this.record){this.record.updateField(this.id,newValue).then(success=>{if(!success)this.field.value=this.initialValue||""})}else{this.field.value=newValue}
if(this.type=="textarea")this.field.scrollTop=this.field.scrollHeight
return this}
getValue(){const fieldType=this.getDataType()
if(fieldType=="number"){return Number(this.field.value)}else{return this.field.value||""}}
getDataType(){if(this.type=="summary")return this.config.summary.type
if(this.type=="lookup")return this.config.lookup.type
if(this.type=="textarea")return"text"
if(this.type=="password")return"text"
return this.type}
setLabel(newLabel){if(!this.label)return
this.config.label=newLabel
this.label.innerText=newLabel
return this}
getLabel(){return this?.label?.innerText||""}
setWidth(width){this.config.width=width
this.style.width=this._computeSize("width",width)
return this}
setFieldWidth(width){this.config.fieldWidth=width
this.field.style.width=this._computeSize("fieldWidth",width)
return this}
setLabelWidth(width){this.config.labelWidth=width
this.label.style.width=this._computeSize("labelWidth",width)
return this}
getLabelPosition(){return this.config.labelPosition}
setLabelPosition(position){this.config.labelPosition=position
switch(position){case"top":this.style.flexFlow="column"
this.field.style.order=1
break
case"bottom":this.style.flexFlow="column"
this.field.style.order=-1
break
case"right":this.style.flexFlow="row"
this.field.style.order=-1
break
default:this.style.flexFlow="row"
this.field.style.order=1}
return this}
setDisplayMode(displayMode="flex"){this.config.display=this.style.display=displayMode}
focus(){this.field.focus()
return this}
blur(){this.field.blur()
return this}
resetFocus(){this.blur()
setTimeout(()=>this.focus(),100)}
setValid(){this.isValid=true
this.field.classList.remove("field-input-invalid")
return this}
setInvalid(){log("> - Invalid value for the field: "+this.id,4)
this.isValid=false
this.field.classList.add("field-input-invalid")
return this}}
customElements.define("a-field",kiss.ui.Field)
const createField=(config)=>document.createElement("a-field").init(config)
const createTextField=(config)=>document.createElement("a-field").init(Object.assign(config,{type:"text"}))
const createTextareaField=(config)=>document.createElement("a-field").init(Object.assign(config,{type:"textarea"}))
const createNumberField=(config)=>document.createElement("a-field").init(Object.assign(config,{type:"number"}))
const createDateField=(config)=>document.createElement("a-field").init(Object.assign(config,{type:"date"}))
const createPasswordField=(config)=>document.createElement("a-field").init(Object.assign(config,{type:"password"}));kiss.ui.Icon=class Icon extends kiss.ui.Component{constructor(){super()}
init(config){super.init(config)
const id=this.id
this.value=config.value
this.innerHTML=`${ (config.label) ? `<label id="field-label-${this.id}"for="${this.id}"class="field-label">${config.label||""}</label>` : "" }
            <div class="field-icon-container">
                <div class="field-icon-palette ${this.value}"></div>
                ${(!config.hideCode) ? `<input type="text"readonly class="field-icon-input"value="${this.value}"></input>` : ""}
            </div>                
            `.removeExtraSpaces()
this.label=this.querySelector(".field-label")
this.fieldContainer=this.querySelector(".field-icon-container")
this.icon=this.querySelector(".field-icon-palette")
this.field=this.querySelector(".field-icon-input")
if(config.hideCode==true)this.icon.style.width=this.icon.style.height="100%"
this._setProperties(config,[[["draggable"],[this]],[["width","height","flex","display","margin","padding"],[this.style]],[["fieldWidth=width","fieldHeight=height","fieldFlex=flex","border","borderStyle","borderWidth","borderColor","borderRadius","boxShadow"],[this.fieldContainer.style]],[["labelAlign=textAlign","labelFlex=flex"],[this.label?.style]],[["borderRadius","iconSize=fontSize","iconColor=color","iconBackground=background","iconAlign=textAlign","iconPadding=padding"],[this.icon.style]]])
this.displayMode="flex"
this.style.flexFlow="row"
if(config.label){if(config.labelWidth)this.setLabelWidth(config.labelWidth)
this.config.labelPosition=config.labelPosition||"left"
this.setLabelPosition(config.labelPosition)}
if(config.disabled!=true&&config.computed!=true){this.onclick=(event)=>{const clickedElement=event.target.closest(".field-icon-container")
if(!clickedElement)return
const picker=createPanel({modal:true,header:false,width:675,align:"center",verticalAlign:"center",items:[{type:"iconPicker",value:$(id).getValue(),icons:config.icons||kiss.webfonts.all,selectorBorderRadius:"32px",height:660,autoFocus:true,events:{change:function(){let icon=this.getValue()
$(id).setValue(icon)
picker.close()}}}]}).render()}}
if(config.record)this._bindRecord(config.record)
this._renderValues()
return this}
_bindRecord(record){this.record=record
this.modelId=record.model.id
this.recordId=record.id
if(record[this.id]){this.value=this.initialValue=record[this.id]}
const updateField=(updates)=>{if(this.id in updates){this.value=updates[this.id]
this._renderValues()}}
this.subscriptions.push(subscribe("EVT_DB_UPDATE:"+this.modelId.toUpperCase(),(msgData)=>{if((msgData.modelId==this.modelId)&&(msgData.id==this.recordId)){const updates=msgData.data
updateField(updates)}}))
this.subscriptions.push(subscribe("EVT_DB_UPDATE_BULK",(msgData)=>{const operations=msgData.data
operations.forEach(operation=>{if((operation.modelId==this.modelId)&&(operation.recordId==this.recordId)){const updates=operation.updates
updateField(updates)}})}))
return this}
setValue(icon){if(icon==this.getValue())return
const updateValue=(icon)=>{this.value=icon
this._renderValues()
this.dispatchEvent(new Event("change"))}
if(this.record){this.record.updateField(this.id,icon).then(success=>{if(success){updateValue(icon)}
else{updateValue(this.initialValue)}})}
else{updateValue(icon)}
return this}
_renderValues(){const icon=this.value||""
if(this.field)this.field.value=icon
this.icon.className=""
const classList=icon.split(" ").filter(className=>className!="")
this.icon.classList.add("field-icon-palette",...classList)}
getValue(){return this.value}
setLabel(newLabel){if(!this.label)return
this.config.label=newLabel
this.label.innerText=newLabel
return this}
getLabel(){return this?.label?.innerText||""}
setWidth(width){this.config.width=width
this.style.width=this._computeSize("width",width)
return this}
setFieldWidth(width){this.config.fieldWidth=width
this.fieldContainer.style.width=this._computeSize("fieldWidth",width)
return this}
setLabelWidth(width){this.config.labelWidth=width
this.label.style.width=this._computeSize("labelWidth",width)
return this}
getLabelPosition(){return this.config.labelPosition}
setLabelPosition(position){this.config.labelPosition=position
switch(position){case"top":this.style.flexFlow="column"
this.fieldContainer.style.order=1
break
case"bottom":this.style.flexFlow="column"
this.fieldContainer.style.order=-1
break
case"right":this.style.flexFlow="row"
this.fieldContainer.style.order=-1
break
default:this.style.flexFlow="row"
this.fieldContainer.style.order=1}
return this}}
customElements.define("a-icon",kiss.ui.Icon)
const createIconField=(config)=>document.createElement("a-icon").init(config);kiss.ui.IconPicker=class IconPicker extends kiss.ui.Component{constructor(){super()}
init(config={}){super.init(config)
this.value=config.value
this.iconSize=config.iconSize||"32px"
this.selectorSize=config.selectorSize||"50px"
this.selectorBorderRadius=config.selectorBorderRadius||"5px"
this.color=config.color||"var(--body)"
this.colorSelected=config.colorSelected||"#ffffff"
this.backgroundColor=config.backgroundColor||"var(--body-background-1)"
this.backgroundColorSelected=config.backgroundColorSelected||"#00aaee"
this.columns=config.columns||10000
this.autoFocus=config.autoFocus
if(config.record)this._bindRecord(config.record)
this.specialId=this.id.replace(new RegExp("-","g"),"_")
let icons=config.icons||kiss.webfonts.all
this.innerHTML=icons.map((font,index)=>`
                <span id="${this.specialId}:icon-${font}"
                    class="icon-selector ${font} ${(this.value == font) ? "icon-selector-selected" : ""}"
                    style=
                    "
                        width: ${this.selectorSize};
                        height: ${this.selectorSize};
                        line-height: ${this.selectorSize};
                        font-size: ${this.iconSize};
                        color: ${this.color};
                        background-color: ${(this.value == font) ? this.backgroundColorSelected : this.backgroundColor};
                        border-radius: ${this.selectorBorderRadius};
                    "
                >
                </span>${((index + 1) % this.columns == 0) ? "<br>" : ""}`.removeExtraSpaces()).join("")
this._setProperties(config,[[["width","height","margin","padding"],[this.style]],])
this.displayMode="inline-block"
this.onclick=(event)=>{const icon=event.target.closest(".icon-selector")
if(!icon)return
const iconClass=icon.classList[1]+" "+icon.classList[2]
this.setValue(iconClass)
if(config.action)config.action(iconClass)}
return this}
_afterRender(){if(!this.autoFocus)return
setTimeout(()=>this.focus(),500)}
_bindRecord(record){this.record=record
this.modelId=record.model.id
this.recordId=record.id
if(record[this.id]){this.value=this.initialValue=record[this.id]}
const updateField=(updates)=>{if(this.id in updates){this.value=updates[this.id]
this._renderValues()}}
this.subscriptions.push(subscribe("EVT_DB_UPDATE:"+this.modelId.toUpperCase(),(msgData)=>{if((msgData.modelId==this.modelId)&&(msgData.id==this.recordId)){const updates=msgData.data
updateField(updates)}}))
this.subscriptions.push(subscribe("EVT_DB_UPDATE_BULK",(msgData)=>{const operations=msgData.data
operations.forEach(operation=>{if((operation.modelId==this.modelId)&&(operation.recordId==this.recordId)){const updates=operation.updates
updateField(updates)}})}))
return this}
setValue(iconClass,newBackgroundColor){if(iconClass==this.getValue())return
const updateValue=(iconClass,newBackgroundColor)=>{this.value=iconClass
if(newBackgroundColor)this.backgroundColorSelected=newBackgroundColor
this._renderValues()
this.dispatchEvent(new Event("change"))}
if(this.record){this.record.updateField(this.id,iconClass).then(success=>{if(success){updateValue(iconClass,newBackgroundColor)}
else{updateValue(this.initialValue,this.backgroundColorSelected)}})}else{updateValue(iconClass,newBackgroundColor)}
return this}
_renderValues(){const iconClass=this.value||""
const newBackgroundColor=this.backgroundColorSelected
Array.from(this.children).forEach(icon=>{icon.classList.remove("icon-selector-selected")
icon.style.color=this.color
icon.style.backgroundColor=this.backgroundColor})
let icon=$(this.specialId+":icon-"+iconClass)
if(!icon)return
icon.classList.add("icon-selector-selected")
icon.style.color=this.colorSelected
icon.style.backgroundColor=(newBackgroundColor)?newBackgroundColor:this.backgroundColorSelected}
setColor(newBackgroundColor){const selectedIcon=this.querySelector(".icon-selector-selected")
this.backgroundColorSelected=selectedIcon.style.backgroundColor=newBackgroundColor}
getValue(){return this.value}
setWidth(width){this.config.width=width
this.style.width=this._computeSize("width",width)
return this}
setHeight(height){this.config.height=height
this.style.height=this._computeSize("height",height)
return this}
focus(){const selectedIcon=this.querySelector(".icon-selector-selected")
if(!selectedIcon)return
selectedIcon.scrollIntoView({block:"center",inline:"center",behavior:"smooth"})
return this}}
customElements.define("a-iconpicker",kiss.ui.IconPicker)
const createIconPicker=(config)=>document.createElement("a-iconpicker").init(config);kiss.ui.Select=class Select extends kiss.ui.Component{constructor(){super()}
init(config={}){super.init(config)
this.optionsColor=config.optionsColor
this.readOnly=!!config.readOnly||!!config.computed
this.disabled=!!config.disabled
this.required=!!config.required
this.placeholder=config.placeholder||""
this.autoComplete=(config.autoComplete!==false)
this.hideInput=(config.hideInput!==false)
this.multiple=!!config.multiple
this.inputSeparator=config.inputSeparator||","
this.valueSeparator=config.valueSeparator||","
this.stackValues=!!config.stackValues
this.allowValuesNotInList=!!config.allowValuesNotInList
this.allowDuplicates=!!config.allowDuplicates
this.allowClickToDelete=!!config.allowClickToDelete
this.allowSwitchOnOff=!!config.allowSwitchOnOff
this.displayedOptions=[]
this.selectedOption=null
this.optionRenderer=config.optionRenderer||null
this.valueRenderer=config.valueRenderer||null
this.value=(Array.isArray(config.value))?config.value.map(val=>val):(config.value)
if(this.multiple&&(!Array.isArray(this.value)))this.value=[].concat(this.value)
switch(config.template){case"time":this.options=kiss.tools.generateTimes(config.min||0,config.max||24,config.interval||60,true)
break
case"gmt":case"countries":case"... other templates to come":default:if(config.options&&typeof config.options=="function"){this.options=config.options(config.optionsFilter)}
else{this.options=config.options||[]
this.options=this.options.map(option=>{if(typeof option=="object")return option
return{value:option}})}}
this.lastEnteredValue=""
this.innerHTML=`${ (config.label) ? `<label id="field-label-${this.id}"for="${this.id}"class="field-label">${config.label||""}</label>` : "" }
            <div class="field-select">
                <div class="field-select-values"></div>
            </div>
            <div class="field-select-options">
                <input class="field-select-input" type="text" placeholder="${this.placeholder}" ${(this.autoComplete !== false) ? "" : `style="display: none"`}>
                <div class="field-select-options-list"></div>
            </div>
            `.removeExtraSpaces()
this.label=this.querySelector(".field-label")
this.field=this.querySelector(".field-select")
this.fieldValues=this.querySelector(".field-select-values")
this.fieldInput=this.querySelector(".field-select-input")
this.optionsWrapper=this.querySelector(".field-select-options")
this.optionsList=this.querySelector(".field-select-options-list")
this._setProperties(config,[[["draggable"],[this]],[["width","height","display","margin","padding","flex"],[this.style]],[["value","maxLength","min","max","placeholder","readOnly","disabled","required"],[this.field]],[["fieldWidth=width","minWidth","fieldHeight=height","fieldFlex=flex","maxHeight","boxShadow"],[this.field.style]],[["fieldLabelWidth=width","labelAlign=textAlign","labelFlex=flex"],[this.label?.style]],[["fieldWidth=width","minWidth"],[this.optionsWrapper.style]],[["placeholder"],[this.fieldInput]]])
this.displayMode="flex"
this.style.flexFlow="column"
if(config.label){if(config.labelWidth)this.setLabelWidth(config.labelWidth)
this.config.labelPosition=config.labelPosition||"left"
this.setLabelPosition(config.labelPosition)}
if(!this.readOnly&&!this.disabled){this.onclick=function(event){event.stop()
let classes=event.target.classList
if(classes.contains("field-select-value-delete"))return this._deleteValueByClick(event)
if(classes.contains("field-select-value"))return this._showOptions()
if(classes.contains("field-select-values"))return this._showOptions()
if(classes.contains("field-select"))return this._showOptions()
if(classes.contains("field-option"))return this._selectOption(event)}}
this.classList.add("a-field")
this.field.onmouseleave=(event)=>{if(!kiss.tools.isEventInElement(event,this.optionsWrapper,10))this._hideOptions()}
this.optionsWrapper.onmouseleave=()=>this._hideOptions()
if(this.autoComplete!==false){this._manageKeyboard()}
if(config.record)this._bindRecord(config.record)
this._renderValues()
return this}
_renderValues(){let isEmpty=false
if(this.multiple){if(this.value&&Array.isArray(this.value)&&this.value.length==0)isEmpty=true}else{if(this.value===undefined||this.value==="")isEmpty=true}
if(isEmpty){this.fieldValues.innerHTML=""
this._adjustSizeAndPosition()
return}
const mapOptions=new Map(this.options.map(option=>[option.value,option]))
const htmlSeparator=(this.stackValues)?"<br>":""
this.fieldValues.innerHTML=[].concat(this.value).filter(value=>value!==""&&value!==undefined&&value!==null).map(value=>{let option=mapOptions.get(value)
if(!option){option={value:value,color:this.defaultColor}}
if(!this.valueRenderer){return`<div class="field-select-value" value="${option.value}" ${(option.color || this.optionsColor) ? `style="background: ${option.color || this.optionsColor}"` : ""}>
                            ${option.label || option.value}
                            ${(this.allowClickToDelete == true) ? `<span class="field-select-value-delete fas fa-times"></span>` : ""}
                        </div>`.removeExtraSpaces()}else{return this.valueRenderer(option,this.record)}}).join(htmlSeparator)
this._adjustSizeAndPosition()}
_bindRecord(record){this.record=record
this.modelId=record.model.id
this.recordId=record.id
if(record[this.id]){this.value=(this.multiple)?[].concat(record[this.id]):record[this.id]
this.initialValue=this.value}
const updateField=(updates)=>{if(this.id in updates){const newValue=updates[this.id]
if(newValue||(newValue===0)||(newValue==="")){this.value=newValue
this._renderValues()}}}
this.subscriptions.push(subscribe("EVT_DB_UPDATE:"+this.modelId.toUpperCase(),(msgData)=>{if((msgData.modelId==this.modelId)&&(msgData.id==this.recordId)){const updates=msgData.data
updateField(updates)}}))
this.subscriptions.push(subscribe("EVT_DB_UPDATE_BULK",(msgData)=>{const operations=msgData.data
operations.forEach(operation=>{if((operation.modelId==this.modelId)&&(operation.recordId==this.recordId)){const updates=operation.updates
updateField(updates)}})}))
return this}
setValue(newValue){const updateValue=(newValue)=>{this.value=newValue
if(this.multiple){const values=[].concat([...newValue])
this.value=values.filter(value=>value!=""&&value!=undefined&&value!=null)}
this._renderValues()
this.dispatchEvent(new Event("change"))}
updateValue(newValue)
if(this.record){this.record.updateField(this.id,newValue).then(success=>{if(!success)updateValue(this.initialValue)})}
return this}
sort(order){if(order=="desc")this.value.sort().reverse()
else this.value.sort()
this._renderValues()
return this}
getValue(){if(this.multiple==true){const values=[].concat(this.value)
return values.filter(value=>value!=""&&value!=undefined&&value!=null)}else{const value=(Array.isArray(this.value))?this.value[0]:this.value
return(value==undefined)?"":value}}
resetValue(){this.value=(this.multiple)?[]:""
this._renderValues()
return this}
updateOptions(newOptions){this.options=newOptions
this.options=this.options.map(option=>{if(typeof option=="object")return option
return{value:option}})
this.optionsList.deepDelete(false)
this._createOptions()
let currentValues=this.getValue()
if(Array.isArray(currentValues)){let currentOptionValues=this.options.map(option=>option.value)
let newValue=currentValues.filter(value=>currentOptionValues.indexOf(value)!=-1)
this.value=newValue
this._renderValues()}}
getLabel(){return this?.label?.innerText||""}
setLabel(newLabel){if(!this.label)return
this.config.label=newLabel
this.label.innerText=newLabel
return this}
setWidth(width){this.config.width=width
this.style.width=this._computeSize("width",width)
return this}
setFieldWidth(width){this.config.fieldWidth=width
this.field.style.width=this._computeSize("fieldWidth",width)
return this}
setLabelWidth(width){this.config.labelWidth=width
this.label.style.width=this._computeSize("labelWidth",width)
return this}
getLabelPosition(){return this.config.labelPosition}
setLabelPosition(position){this.config.labelPosition=position
switch(position){case"top":this.style.flexFlow="column"
this.field.style.order=1
break
case"bottom":this.style.flexFlow="column"
this.field.style.order=-1
break
case"right":this.style.flexFlow="row"
this.field.style.order=-1
break
default:this.style.flexFlow="row"
this.field.style.order=1}
return this}
focus(){this.fieldInput.focus()
return this}
_manageKeyboard(){this.fieldInput.onkeydown=(event)=>{if(event.key=="Enter")event.preventDefault()}
this.fieldInput.onkeyup=(event)=>{event.stop()
let enteredValue=event.target.value
if(event.which==40){this._navigateOptions("down")
return}
if(event.which==38){this._navigateOptions("up")
return}
if(event.key=="Backspace"){if((this.lastEnteredValue=="")&&(this.value.length>0)){this.lastEnteredValue=enteredValue
let lastValue=this.value[this.value.length-1]
this._deleteValue(lastValue)
return}}
if((event.key=="Enter")||(event.key==this.inputSeparator)){if(this.selectedOption!=null){this._addValueFromOption(this.selectedOption)}else{let newValue=(event.key=="Enter")?enteredValue:enteredValue.slice(0,enteredValue.length-1)
if(newValue!=""){if(!this.allowValuesNotInList){let checkedValue=this._findValue(newValue)
if(!checkedValue){this._resetInputField()
return}
this.addValue(checkedValue)}else{this.addValue(newValue)}}}
return}
this._showOptions(enteredValue)
this.lastEnteredValue=enteredValue}}
_findValue(value){let option=this.options.find(option=>option.value.toLowerCase()==value.toLowerCase())
return(option)?option.value:null}
async _createOptions(){for(let index=0,length=this.options.length;index<length;index++){let option=this.options[index]
let optionElement=document.createElement("div")
optionElement.className="field-option"
optionElement.setAttribute("value",option.value)
optionElement.setAttribute("index",index)
if(option.label)optionElement.setAttribute("label",option.label)
if(option.color)optionElement.setAttribute("style","border-color:"+option.color)
if(option.disabled==true)optionElement.classList.add("field-option-disabled")
if(this.optionRenderer){optionElement.innerHTML=this.optionRenderer(option)}else{optionElement.textContent=option.label||option.value}
this.optionsList.append(optionElement)}
this.displayedOptions=Array.from(this.optionsList.children)}
_showOptions(enteredValue){if(this.optionsList.children.length==0)this._createOptions()
this.optionsWrapper.style.position="fixed"
setTimeout(()=>{this.optionsWrapper.style.display="block"
if(this.fieldInput){this.fieldInput.placeholder=""
this.fieldInput.focus()}},0)
this._adjustSizeAndPosition()
this._filterOptions(enteredValue||"")}
_adjustSizeAndPosition(){this.optionsWrapper.style.top=(this.field.getBoundingClientRect().top+this.field.clientHeight)+4+"px"
this.optionsWrapper.style.left=this.field.getBoundingClientRect().left+"px"
this.optionsWrapper.style.width=this.field.getBoundingClientRect().width+"px"
this.optionsWrapper.style.maxHeight=kiss.screen.current.height+"px"
kiss.tools.moveToViewport(this.optionsWrapper)}
_hideOptions(){this.optionsWrapper.style.display="none"}
_resetInputField(){this.fieldInput.value=""
this.fieldInput.focus()}
_filterOptions(enteredValue){this.displayedOptions=[]
let searchExpression=enteredValue.toLowerCase()
let propertyToSearch=(this.optionsList.firstChild&&this.optionsList.firstChild.getAttribute("label"))?"label":"value"
Array.from(this.optionsList.children).forEach(option=>{option.classList.remove("field-option-selected")
option.classList.remove("field-option-highlight")
if(!option.getAttribute(propertyToSearch).toLowerCase().startsWith(searchExpression)){option.classList.add("field-option-hidden")
return}
option.classList.remove("field-option-hidden")
const optionValue=option.getAttribute("value")
if(this.value&&((this.multiple&&this.value.includes(optionValue))||(this.value==optionValue)))option.classList.add("field-option-selected")
this.displayedOptions.push(option)})
this.selectedOption=null
if(this.displayedOptions.length!=0){this.selectedOption=this.displayedOptions[0]
this._highlightOption(this.displayedOptions[0],true)}}
_navigateOptions(direction){let currentSelectedOption=this.selectedOption
let index=Array.from(this.displayedOptions).findIndex(node=>node==currentSelectedOption)
let nextIndex=(direction=="down")?Math.min((index+1),this.displayedOptions.length):Math.max((index-1),0)
let newSelectedOption=this.displayedOptions[nextIndex]
if(newSelectedOption)this._highlightOption(newSelectedOption,true)}
_highlightOption(selectedOption,scroll){if(this.selectedOption)this.selectedOption.classList.remove("field-option-highlight")
selectedOption.classList.add("field-option-highlight")
this.selectedOption=selectedOption}
_selectOption(event,scroll){let newSelectedOption=event.target.closest("div")
this.selectedOption=newSelectedOption
this._addValueFromOption(newSelectedOption)}
_addValueFromOption(selectedOption){const optionIndex=selectedOption.getAttribute("index")
if(!optionIndex)return
const option=this.options[optionIndex]
this.addValue(option.value)}
async addValue(newValue){let nextValue
if(this.multiple){nextValue=[].concat(this.value)
let switchOff=false
if((this.allowDuplicates!=true)&&(this._isDuplicate(newValue)==true)){if(!this.allowSwitchOnOff){this._resetInputField()
return}
switchOff=true}
if(switchOff){nextValue.remove(newValue)}else{nextValue.push(newValue)}}else{nextValue=newValue}
this.setValue(nextValue)
this._resetInputField()
this.selectedOption=null
this._hideOptions()}
_isDuplicate(newValue){return this.value.includes(newValue)}
_deleteValueByClick(event){this._hideOptions()
let fieldValueElement=event.target.closest("div")
let clickedValue=fieldValueElement.getAttribute("value")
this._deleteValue(clickedValue)
event.stop()}
_deleteValue(valueToDelete){let newValue
if(Array.isArray(this.value))newValue=this.value.remove(valueToDelete)
else newValue=""
this.setValue(newValue)}}
customElements.define("a-select",kiss.ui.Select)
const createSelect=(config)=>document.createElement("a-select").init(config);const createForm=function(record){if(!record)return
const isStandAlone=(kiss.context.ui=="form-view")
if(record&&$(record.id))return createNotification(txtTitleCase("#record already opened"))
const model=record.model
const modelId=model.id
const numberOfOpenedRecords=Array.from(document.querySelectorAll(".form-record")).length
return createPanel({class:"form-record",id:record.id,title:model.name.toTitleCase(),icon:model.icon,headerBackgroundColor:model.color,layout:"vertical",position:"fixed",modal:!isStandAlone,closable:true,draggable:true,expandable:true,left:()=>(kiss.screen.current.width-Math.min(kiss.screen.current.width/3*2,1000))/2+numberOfOpenedRecords*10,width:()=>Math.min(kiss.screen.current.width/3*2,1000),height:()=>window.innerHeight-20,verticalAlign:"center",padding:"0px",items:[{class:"form-tabs",display:"inline",defaultConfig:{class:"form-tab",}},{class:"form-panels",multiview:true,layout:"vertical",overflow:"hidden",flex:1}],events:{close:function(){if(isStandAlone)kiss.router.navigateTo("home-start")}},subscriptions:{"EVT_DB_UPDATE:MODEL":async function(msgData){if(msgData.id==modelId){if(kiss.session.getUserId()!=msgData.userId){createNotification({message:txtTitleCase("#table updated",null,{user:kiss.directory.getEntryName(msgData.userId)}),duration:3000})}
await this.load()}}},methods:{load(){this.record=record
this.activeFeatureIndex=-1
let tabFeatures=[]
let formHeaderFeatures=[]
let formFooterFeatures=[]
let formPanelFeatures=[createFormContent({record:this.record})]
if(kiss.app.collections.model){let modelRecord=kiss.app.collections.model.getRecord(modelId)
if(modelRecord){let modelFeatures=modelRecord.features||{}
this.getActivePlugins(modelFeatures).forEach(plugin=>{plugin.features.forEach(feature=>{let featureId=shortUid()
let newFeatureView=feature.renderer(this)
newFeatureView.classList.add(featureId)
newFeatureView.setAttribute("featureId",featureId)
if(feature.type=="form-section"){formPanelFeatures=formPanelFeatures.concat(newFeatureView)
tabFeatures.push({id:featureId,pluginId:plugin.id,icon:plugin.icon,name:plugin.name})}
if(feature.type=="form-header"){formHeaderFeatures=formHeaderFeatures.concat(newFeatureView)}
if(feature.type=="form-footer"){formFooterFeatures=formFooterFeatures.concat(newFeatureView)}})})
let tabs=createFormTabBar(record,tabFeatures)
let formTabs=this.getFormTabs()
formTabs.setItems(tabs)}}
let formPanels=this.getFormPanels()
formPanels.setItems(formPanelFeatures)
let formHeader=this.getFormHeader()
formHeader.setItems(formHeaderFeatures)
let formFooter=this.getFormFooter()
formFooter.setItems(formFooterFeatures)},getActivePlugins(modelFeatures){return kiss.plugins.get().filter(plugin=>{if(!modelFeatures[plugin.id])return false
if(modelFeatures[plugin.id].active==false)return false
return true})},showFeature(featureId){const modelRecord=kiss.app.collections.model.getRecord(modelId)
const modelFeatures=modelRecord.features||{}
const activeFeatures=this.getActivePlugins(modelFeatures)
const featureIndex=activeFeatures.findIndex(feature=>feature.id==featureId)
const animationName=(featureIndex>this.activeFeatureIndex)?"slideInRight":"slideInLeft"
this.activeFeatureIndex=featureIndex
const animation={name:animationName,speed:"faster"}
const formFeaturesContainer=this.getFormPanels()
formFeaturesContainer.showItemByClass(featureId,animation)
const formTabs=$(record.id).querySelector(".form-tabs")
const tabs=formTabs.items
for(let i=0;i<tabs.length;i++)tabs[i].setBorderColor("var(--button-border)")
tabs[featureIndex+1].setBorderColor(model.color)},getFormTabs(){return this.querySelector(".form-tabs")},getFormHeader(){return this.querySelector(".form-header")},getFormFooter(){return this.querySelector(".form-footer")},getFormPanels(){return this.querySelector(".form-panels")},getFormFields(){return this.querySelector(".form-fields")}}}).render()};const createFormContent=function(config){let model,modelItems,record
if(config.record){record=config.record
model=record.model
modelItems=kiss.tools.clone(model.items)}else if(config.items){modelItems=config.items}
modelItems=model.getFormItems(modelItems)
return createBlock({class:"form-content",layout:"vertical",overflowY:"auto",flex:1,defaultConfig:{overflow:"unset"},items:[{class:"form-header"},{class:"form-fields",defaultConfig:{width:"100%",labelWidth:"100%",labelPosition:"top"},record:record,items:modelItems},{class:"form-footer"}],methods:{async load(){if(await this.canEditFields()){this.enableFieldDesign()
this.addButtonToCreateNewFields()}},addButtonToCreateNewFields(){},async canEditFields(){const modelRecord=kiss.app.collections.model.records.get(model.id)
if(!modelRecord)return false
return await kiss.acl.check({action:"update",record:modelRecord})},enableFieldDesign(){const fieldLabels=this.querySelectorAll(".field-label")
fieldLabels.forEach(labelElement=>{labelElement.classList.add("field-label-setup")
const fieldId=labelElement.parentNode.id
const field=model.getField(fieldId)
const isPrimary=field.primary
labelElement.onmousedown=function(event){createMenu({items:[{text:txtTitleCase("edit field")+" <b>"+field.label+"</b>",icon:"fas fa-edit",action:()=>{kiss.context.dockFieldProperties=false
kiss.router.updateUrlHash({modelId:model.id,fieldId})
kiss.views.show("model-field")}},(!isPrimary)?"-":"",(!isPrimary)?{text:txtTitleCase("delete field"),icon:"fas fa-trash",action:()=>{createDialog({type:"dialog",title:txtTitleCase("delete a field"),message:txtTitleCase("#delete field warning"),action:async()=>{await model.deleteField(fieldId)}})}}:""]}).render().showAt(event.clientX-10,event.clientY-10)}})}}})};const createFormFeatureDescription=function(name,icon,color,description,instructions){let html=`
        <div style="display: flex; flex-flow: row">
            <div style="flex:1"></div>
            <div class="form-feature-arrow"><span class="fas fa-arrow-up"></span></div>
        </div>
        <div class="form-feature-description" style="display: flex; flex-flow: row; background-color: ${color}">
            <div class="form-feature-description-icon" style="flex:1; background-color: ${kiss.tools.adjustColor(color, -0.1)}">
                <span class="${icon}"></span>
            </div>
            <div style="flex: 2">
                <div class="form-feature-description-title">${name}</div>
                <div class="form-feature-description-text">${description}</div>
                <div class="form-feature-description-text">${instructions}</div>
            </div>
        </div>`
return createHtml({html})};const createFormTabBar=function(record,activeFeatures){const formTabHeight="var(--form-tab-height)"
const formTabFontSize="var(--form-tab-font-size)"
const formTabBorderRadius="var(--form-tab-border-radius)"
let formMenuItems=[]
let formFeatures=[{id:"button-form-"+record.id,type:"button",text:txtTitleCase("form"),icon:"far fa-window-restore",fontSize:formTabFontSize,height:formTabHeight,borderRadius:formTabBorderRadius,backgroundColorHover:"transparent",classes:{"this":"underline-effect"},action:function(){const form=this.closest(".form-record")
form.showFeature("form-content")}}]
activeFeatures.forEach(feature=>{let newFeature={id:"button-"+feature.id+"-"+record.id,type:"button",text:feature.name,icon:feature.icon,fontSize:formTabFontSize,height:formTabHeight,borderRadius:formTabBorderRadius,backgroundColorHover:"transparent",classes:{"this":"underline-effect"},action:function(){const form=this.closest(".form-record")
form.showFeature(feature.pluginId)}}
formFeatures=formFeatures.concat(newFeature)})
formFeatures=formFeatures.concat({type:"button",tip:txtTitleCase("edit form"),icon:"fas fa-wrench",borderWidth:"0px",height:formTabHeight,borderRadius:formTabBorderRadius,backgroundColorHover:"transparent",action:(event)=>{const form=$(record.id)
form.close()
const openedForms=document.querySelectorAll(".form-record")
openedForms.forEach(openedForm=>openedForm.close())
kiss.context.formDesignerBackUrl=kiss.router.getRoute()
kiss.router.navigateTo({ui:"form-designer",modelId:record.model.id})}})
formFeatures=formFeatures.concat({type:"button",tip:txtTitleCase("#select features"),icon:"fas fa-plus",borderWidth:"0px",borderRadius:"32px",fontSize:formTabFontSize,height:formTabHeight,borderRadius:formTabBorderRadius,backgroundColorHover:"transparent",action:()=>{kiss.context.modelId=record.model.id
kiss.views.show("model-features")}})
formFeatures=formFeatures.concat({type:"button",tip:txtTitleCase("action menu"),icon:"fas fa-bars",borderWidth:"0px",borderRadius:"32px",fontSize:formTabFontSize,height:formTabHeight,borderRadius:formTabBorderRadius,backgroundColorHover:"transparent",action:(event)=>createMenu({left:event.x-10,top:event.y-10,items:formMenuItems}).render()})
formMenuItems=formMenuItems.concat({icon:"fas fa-trash",text:txtTitleCase("delete this record"),action:()=>{createDialog({title:txtTitleCase("delete this record"),type:"dialog",message:txtTitleCase("#delete record warning"),colorOK:"var(--button-delete)",colorCancel:"var(--button-ok)",action:async()=>{const form=$(record.id)
const success=await record.delete(true)
if(success)form.close()}})}},{icon:"fas fa-link",text:txtTitleCase("get a link to this document"),action:()=>{kiss.router.updateUrlHash({recordId:record.id})
createDialog({type:"input",title:txtTitleCase("#link copied"),width:600,noCancel:true,defaultValue:window.location.href,methods:{load:()=>{let documentUrl=$("input-box-field").getValue()
kiss.tools.copyTextToClipboard(documentUrl)}}})}})
return formFeatures};const createDataFieldsWindow=function(viewId,color="#00aaee"){const selectWindowId="field-selection-for-"+viewId
return createPanel({id:selectWindowId,title:txtTitleCase("select your fields"),headerBackgroundColor:color,maxHeight:()=>kiss.screen.current.height-200,modal:true,closable:true,draggable:true,layout:"vertical",items:[{id:"field-selection-for-datable:"+viewId,overflowY:"auto"},{layout:"horizontal",margin:"10px 0px 0px 0px",overflow:"unset",items:[{type:"button",text:txtTitleCase("hide all"),icon:"fas fa-eye-slash",events:{click:function(){let selectionWindow=$(selectWindowId)
selectionWindow.toggleAll("hide")}}},{type:"spacer",width:"10px"},{type:"button",text:txtTitleCase("show all"),icon:"fas fa-eye",events:{click:function(){let selectionWindow=$(selectWindowId)
selectionWindow.toggleAll("show")}}}]}],subscriptions:{["EVT_VIEW_FIELD_MOVED:"+viewId]:()=>{if($(selectWindowId))$(selectWindowId).load()}},methods:{load:()=>{let checkboxFields=[]
$(viewId).getColumns().forEach(column=>{if(column.deleted)return
checkboxFields.push({id:"checkbox-"+column.id,type:"checkbox",label:column.title.toTitleCase(),labelWidth:"100%",labelPosition:"right",checked:!column.hidden,shape:"switch",iconSize:"16px",iconColorOn:color,class:"switch-field",draggable:true,events:{click:function(){let fieldId=this.id.split("checkbox-")[1]
kiss.pubsub.publish("EVT_VIEW_FIELD_TOGGLED_ONE:"+viewId,fieldId)},ondragstart:function(event){event.stopPropagation()
kiss.context.draggedElement=event.target.closest("a-checkbox")
kiss.context.dragStartY=event.clientY},ondragover:function(event){event.stop()
const dropTarget=event.target.closest("a-checkbox")
if(dropTarget.id==kiss.context.draggedElement.id)return
const direction=((event.clientY-kiss.context.dragStartY)<0)?"before":"after"
dropTarget.style.height="52px"
dropTarget.style.alignItems="unset"
dropTarget.style.transition="all 0.3s"},ondragleave:function(event){const dropTarget=event.target.closest("a-checkbox")
dropTarget.style.height="26px"
dropTarget.style.alignItems="center"},ondrop:function(event){const dropTarget=event.target.closest("a-checkbox")
dropTarget.style.height="26px"
dropTarget.style.alignItems="center"
const sourceFieldId=kiss.context.draggedElement.id.split("checkbox-")[1]
const targetFieldId=dropTarget.id.split("checkbox-")[1]
publish("EVT_VIEW_FIELD_MOVING:"+viewId,{sourceFieldId,targetFieldId,position:"after"})}}})})
$("field-selection-for-datable:"+viewId).setItems(checkboxFields)},toggleAll:(newState)=>{let isChecked=(newState=="show")
$(viewId).columns.forEach(column=>{if(column.deleted)return
let checkboxId="checkbox-"+column.id
let checkbox=$(checkboxId)
checkbox.setValue(isChecked)})
publish("EVT_VIEW_FIELD_TOGGLED_ALL:"+viewId,newState)}}})};const createDataFilter=function(viewId,color,config){let id=kiss.tools.shortUid()
let fieldId=config.fieldId||""
let fieldOperator=config.operator||"="
let fieldValue=config.value||""
let selectFields=$(viewId).collection.model.getFilterableFields().map(field=>{return{type:field.type,label:field.label.toTitleCase(),value:field.id}})
const getFieldType=function(fieldId){let fieldConfig=$(viewId).collection.model.getField(fieldId)
return(fieldConfig)?fieldConfig.type:"text"}
const buildFilterOperator=function(fieldId){let fieldType=getFieldType(fieldId)
let possibleOperators={text:["=","<>","contains","does not contain","is empty","is not empty"],textarea:["=","<>","contains","does not contain","is empty","is not empty"],number:["=","<>","<",">","<=",">=","is empty","is not empty"],date:["=","<>","<",">","<=",">=","is empty","is not empty"],checkbox:["=","<>","is empty","is not empty"],select:["=","<>","contains","does not contain","is empty","is not empty"],directory:["=","<>","contains","does not contain","is empty","is not empty"],lookup:["=","<>","<",">","<=",">=","contains","does not contain","is empty","is not empty"],summary:["=","<>","<",">","<=",">=","is empty","is not empty"],attachment:["is empty","is not empty"],color:["=","<>","is empty","is not empty"],icon:["=","<>","is empty","is not empty"]}[fieldType]
return[{label:"=",value:"="},{label:"<>",value:"<>"},{label:"<",value:"<"},{label:">",value:">"},{label:"<=",value:"<="},{label:">=",value:">="},{label:txtTitleCase("contains"),value:"contains"},{label:txtTitleCase("does not contain"),value:"does not contain"},{label:txtTitleCase("is empty"),value:"is empty"},{label:txtTitleCase("is not empty"),value:"is not empty"}].filter(operator=>possibleOperators.indexOf(operator.value)!=-1)}
const buildFilterInput=function(fieldId){let fieldConfig=$(viewId).collection.model.getField(fieldId)
let fieldType=(fieldConfig)?fieldConfig.type:"text"
let fieldBuilderFunction=createField
let checked=false
let options=[]
let optionsFilter
let shape=""
let lookup={}
let summary={}
switch(fieldType){case"attachment":case"textarea":fieldType="text"
break
case"select":options=fieldConfig.options
optionsFilter=fieldConfig.optionsFilter
fieldBuilderFunction=createSelect
break
case"checkbox":shape=fieldConfig.shape
fieldBuilderFunction=createCheckbox
if(fieldValue==true)checked=true
break
case"color":fieldBuilderFunction=createColorField
break
case"icon":fieldBuilderFunction=createIconField
break
case"lookup":lookup=fieldConfig.lookup
break
case"summary":summary=fieldConfig.summary
break}
return{hidden:(fieldOperator.indexOf("empty")!=-1),id:"filter-value:"+id,type:fieldType,label:txtTitleCase("value"),labelPosition:"top",minWidth:"200px",value:fieldValue,checked,draggable:true,allowValuesNotInList:true,renderer:fieldBuilderFunction,options,optionsFilter,optionsColor:color,shape,iconSize:"20px",lookup,events:{change:function(event){if(event.target.value==="")return
let filter=event.target.closest("a-block")
if(filter.getFilter()==null)return
let rootFilter=event.target.closest(".root-filter")
rootFilter.updateFilter()},dragstart:(event)=>event.preventDefault()}}}
let dataFilter=createBlock({id:"filter-"+id,target:config.target,layout:"horizontal",alignItems:"center",draggable:true,class:"filter",items:[{id:"filter-delete:"+id,type:"button",icon:"fas fa-trash",iconColor:"var(--datatable-filter-buttons)",width:"30px",height:"30px",events:{click:function(event){let filter=event.target.closest("a-block")
let rootFilter=event.target.closest(".root-filter")
let doUpdate=(filter.getFilter()!=null)
filter.deepDelete()
if(doUpdate)rootFilter.updateFilter()}}},{id:"filter-field:"+id,type:"select",label:txtTitleCase("where field"),labelPosition:"top",width:"300px",value:fieldId,options:selectFields,optionsColor:color,events:{change:function(event){let filter=event.target.closest("a-block")
let filterField=$("filter-field:"+id)
let selectedFieldId=filterField.getValue()
let fieldType=getFieldType(selectedFieldId)
let filterOperator=$("filter-operator:"+id)
let newFilterOperators=buildFilterOperator(selectedFieldId)
filterOperator.updateOptions(newFilterOperators)
let currentOperator=filterOperator.getValue()
let hasOperator=newFilterOperators.findIndex(operator=>operator.value==currentOperator)
if(hasOperator==-1)filterOperator.setValue("")
filter.updateFilterInput(selectedFieldId,fieldType)
let filterValue=$("filter-value:"+id)
if(filterOperator.getValue().indexOf("empty")!=-1)filterValue.hide()
else filterValue.show()
if(filter.getFilter()==null)return
let rootFilter=event.target.closest(".root-filter")
rootFilter.updateFilter()}}},{id:"filter-operator:"+id,type:"select",label:txtTitleCase("operator"),labelPosition:"top",width:"150px",autoComplete:false,value:fieldOperator,options:buildFilterOperator(fieldId),optionsColor:color,events:{change:function(event,value){let filterValue=$("filter-value:"+id)
if(this.getValue().indexOf("empty")!=-1)filterValue.hide()
else filterValue.show()
let filter=event.target.closest("a-block")
if(filter.getFilter()==null)return
let rootFilter=event.target.closest(".root-filter")
rootFilter.updateFilter()}}},buildFilterInput(fieldId),],events:{dragstart:function(event){kiss.context.draggedElement=event.target}},methods:{updateFilterInput(fieldId){let field=$("filter-value:"+id)
let target=field.target
field.deepDelete()
let fieldConfig=buildFilterInput(fieldId)
fieldConfig.target=target
let input=fieldConfig.renderer(fieldConfig)
input.render()},getFilter:function(){let filterFieldId=$("filter-field:"+id).getValue()
let filterOperator=$("filter-operator:"+id).getValue()
let filterValue=$("filter-value:"+id).getValue()
if((filterFieldId==="")||(filterOperator==="")||((filterValue==="")&&(filterOperator.indexOf("empty")==-1)))return null
return{type:"filter",id:this.id,fieldId:filterFieldId,operator:filterOperator,value:filterValue}}}})
return dataFilter};const createDataFilterGroup=function(viewId,color,config){let id=config.id||kiss.tools.shortUid()
let filterContentId="group-"+id
let target=config.target||null
let isRootFilter=config.isRootFilter||false
let groupOperator=config.operator||"and"
let canAddGroup=config.canAddGroup||false
let canDeleteGroup=config.canDeleteGroup||false
let filterGroup=createBlock({id:"filter-group-"+id,target,layout:"horizontal",alignItems:"center",classes:{"this":"filter-group"+((isRootFilter)?" root-filter":"")},items:[{layout:"horizontal",alignItems:"center",minWidth:128,items:[{hidden:!canAddGroup,id:"filter-group-add:"+id,type:"button",icon:"fas fa-plus",iconColor:"var(--datatable-filter-buttons)",width:"30px",height:"30px",tip:{text:txtTitleCase("add a subgroup"),deltaX:0,deltaY:20},events:{click:function(){let filterGroup=this.closest(".filter-group")
filterGroup.addFilterGroup({target:filterContentId,canDeleteGroup:true})}}},{hidden:!canDeleteGroup,id:"filter-group-delete:"+id,type:"button",icon:"fas fa-trash",iconColor:"var(--datatable-filter-buttons)",width:"30px",height:"30px",events:{click:function(event){let rootFilter=this.closest(".root-filter")
$("filter-group-"+id).deepDelete()
rootFilter.updateFilter()}}},{id:"filter-group-operator:"+id,type:"select",autoComplete:false,width:80,value:groupOperator,options:[{label:txtTitleCase("and"),value:"and"},{label:txtTitleCase("or"),value:"or"}],optionsColor:"#00aaee",events:{change:function(event){let rootFilter=this.closest(".root-filter")
rootFilter.updateFilter()}}}]},{class:"filter-group-content",layout:"vertical",items:[{id:"group-"+id,flex:1,class:"filter-group-items",filters:[]},{type:"spacer",height:"10px"},{type:"button",text:txtTitleCase("add a filter"),icon:"fas fa-plus",iconColor:"var(--datatable-filter-buttons)",width:150,height:30,events:{click:function(){let filterGroup=this.closest(".filter-group")
filterGroup.addFilter({fieldId:"",operator:"=",value:""})}}},{type:"spacer",height:"10px"}],events:{dragenter:function(event){this.classList.add("filter-group-dragover")},dragover:function(event){event.preventDefault()},dragleave:function(event){if(kiss.tools.isEventInElement(event,this))return
this.classList.remove("filter-group-dragover")},ondrop:function(event){event.stop()
kiss.views.removeAndCacheNode(kiss.context.draggedElement.id)
kiss.context.draggedElement.render(filterContentId)
let rootFilter=event.target.closest(".root-filter")
rootFilter.updateFilter()}}}],methods:{toggleDeleteGroupButton:function(visible){let deleteGroupButton=$("filter-group-delete:"+id)
return(visible)?deleteGroupButton.show():deleteGroupButton.hide()},addFilters:function(filters){if(!filters)return
filters.forEach(filterConfig=>{if(filterConfig){if(filterConfig.type=="filter"){this.addFilter(filterConfig)}else{this.addFilterGroup(filterConfig)}}})},addFilter:function(config){config.target=filterContentId
createDataFilter(viewId,color,config).render()},addFilterGroup:function(config){config.target=filterContentId
config.canDeleteGroup=true
createDataFilterGroup(viewId,color,config).render()},getFilters:function(){let operator=$("filter-group-operator:"+id).getValue()
let filterGroup=this.querySelector(".filter-group-items")
let filters=[]
Array.from(filterGroup.children).forEach(filter=>{if(filter.id.indexOf("filter-group")!=-1){let newGroupFilter=filter.getFilters()
if(newGroupFilter==null)return null
filters.push(filter.getFilters())}else{filters.push(filter.getFilter())}})
if(filters.length==0)return null
if(filters.length==1)return filters[0]
return{type:"group",id:this.id,operator:operator,filters:filters}},updateFilter(){let newFilterConfig=this.getFilters()||{}
kiss.pubsub.publish("EVT_VIEW_FILTERING:"+viewId,newFilterConfig)}}}).render()
if(config.filters)filterGroup.addFilters(config.filters)
return filterGroup};const createDataFilterWindow=function(viewId,color="#00aaee"){const filterWindowId="filter-selection-for-"+viewId
let filterWindow=createPanel({id:filterWindowId,title:txtTitleCase("filter your data"),headerBackgroundColor:color,minWidth:"800px",modal:true,draggable:true,closable:true,maxHeight:()=>kiss.screen.current.height-100,verticalAlign:"center",overflowY:"auto",items:[{id:"query-builder-"+viewId}],methods:{load:function(){let fields=$(viewId).collection.model.getFields()
let filterGroup={isRootFilter:true,canAddGroup:true,id:viewId,target:"query-builder-"+viewId,fields:fields,}
let filter=$(viewId).filter||{}
if(Object.keys(filter).length!=0){if(filter.type=="filter"){filterGroup.filters=[filter]}else{filterGroup.operator=filter.operator
filterGroup.filters=filter.filters}}
createDataFilterGroup(viewId,color,filterGroup)}}})
return filterWindow};const createDataSort=function(viewId,fieldId,sortDirection,sortIndex,sortFields,color){return createBlock({class:"data-sorter",layout:"horizontal",alignItems:"center",items:[{id:"sort-delete-for-view-"+viewId+"-index:"+sortIndex,type:"html",width:"20px",html:`<span class="fa fa-times data-sorter-delete"></span>`,events:{click:(event)=>{let sortIndex=event.target.closest("a-html").id.split(":")[1]
kiss.pubsub.publish("EVT_VIEW_SORTING:"+viewId,{sortAction:"remove",sortIndex:sortIndex})}}},{id:"sort-field-for-view-"+viewId+"-index:"+sortIndex,type:"select",label:(sortIndex==0)?txtTitleCase("sort by"):txt("then by"),width:400,fieldWidth:"50%",labelWidth:"50%",labelPosition:"left",value:[fieldId],multiple:false,options:sortFields,optionsColor:color,events:{change:async(event)=>{let sortDirectionId=event.target.id.replace("field","direction")
let sortDirection=$(sortDirectionId).getValue()
if(sortDirection=="")sortDirection="asc"
kiss.pubsub.publish("EVT_VIEW_SORTING:"+viewId,{sortFieldName:event.target.value,sortDirection:sortDirection,sortIndex:event.target.id.split(":")[1]})}}},{id:"sort-direction-for-view-"+viewId+"-index:"+sortIndex,type:"checkbox",label:txtTitleCase("inverse order"),labelWidth:200,labelPosition:"right",checked:(sortDirection=="desc"),shape:"switch",iconSize:"20px",iconColorOn:color,events:{change:async(event)=>{let isChecked=event.target.getValue()
let sortDirection=(isChecked)?"desc":"asc"
let sortFieldId=event.target.id.replace("direction","field")
let fieldName=$(sortFieldId).getValue()
if(fieldName=="")return
kiss.pubsub.publish("EVT_VIEW_SORTING:"+viewId,{sortFieldName:fieldName,sortDirection:sortDirection,sortIndex:event.target.id.split(":")[1]})}}}]})};const createDataSortWindow=function(viewId,color="#00aaee"){const sortWindowId="sort-selection-for-"+viewId
const sortListId="sort-list-for-"+viewId
const sortFieldId="sort-create-for-view-"+viewId
let sortWindow=createPanel({id:sortWindowId,title:txtTitleCase("sorting options"),headerBackgroundColor:color,modal:true,closable:true,draggable:true,layout:"vertical",items:[{id:sortListId,layout:"vertical"},{layout:"horizontal",items:[{id:sortFieldId,type:"select",label:txtTitleCase("select a field to sort by"),width:400,fieldWidth:"50%",labelWidth:"50%",labelPosition:"left",margin:"0px 0px 0px 36px",multiple:false,events:{change:async(event)=>{kiss.pubsub.publish("EVT_VIEW_SORTING:"+viewId,{viewId:viewId,sortFieldName:event.target.value,sortDirection:"asc",sortIndex:$(viewId).sort.length})
$(sortFieldId).resetValue()}}}]}],methods:{load:function(){this.renderExistingOptions()},renderExistingOptions:function(){this.resetExistingOptions()
let sortIndex=0
let remainingSortFields=this.getRemainingSortFields()
let currentSortConfig=$(viewId).sort||[]
currentSortConfig.forEach(sortOption=>{let sortField=Object.keys(sortOption)[0]
let sortDirection=sortOption[sortField]
createDataSort(viewId,sortField,sortDirection,sortIndex,remainingSortFields,color).render("sort-list-for-"+viewId)
sortIndex++})
let sortField=$(sortFieldId)
sortField._hideOptions()
sortField.updateOptions(remainingSortFields)},resetExistingOptions:()=>$("sort-list-for-"+viewId).deepDelete(false),getRemainingSortFields:function(){let currentSortConfig=$(viewId).sort||[]
let currentSortFields=currentSortConfig.map(sortField=>Object.keys(sortField)[0])
let remainingSortFields=[]
let fields=$(viewId).collection.model.getSortableFields()
for(let i=0,length=fields.length;i<length;i++){let field=fields[i]
let disabled=!((field.deleted!=true)&&(currentSortFields.indexOf(field.id)==-1))
remainingSortFields.push({label:field.label.toTitleCase(),value:field.id,disabled:disabled})}
return remainingSortFields}},subscriptions:{["EVT_VIEW_SORTED:"+viewId]:()=>{if($(sortWindowId))$(sortWindowId).renderExistingOptions()}}})
return sortWindow};const createFileUploadBox=function(){const boxClientID="s4mkchshoxquwjquomli1dneiwysp2oa"
const boxAuthenticationUrl=`https://www.box.com/api/oauth2/authorize?client_id=${boxClientID}&response_type=code&state=${kiss.session.getUserId()}`
const checkTokenUrl="https://api.box.com/2.0/folders/0?fields=id&limit=1&offset=0"
const logoUrl="./resources/img/ICON_32x32_Logo.png"
const FilePicker=Box.FilePicker
const filePicker=new FilePicker({container:".upload-box-picker",})
return createBlock({id:"file-upload-box",flex:1,layout:"vertical",items:[{hidden:true,type:"html",html:`<input id="field-upload-box" type="file" multiple>`},{id:"upload-box-gallery",layout:"vertical",alignItems:"center",overflow:"auto",height:"100%",class:"upload-gallery",items:[{id:"upload-box-gallery-help",type:"html",margin:"auto",html:txtTitleCase("#upload drive help",null,{drive:"Box"})+`<br>`+`<center><button class="a-button box-authentication-button" onclick="$('file-upload-box').connect()">${txtTitleCase('connect to your %drive account', null, {drive: "Box"})}</button></center>`},{id:"upload-box-gallery-items",class:"upload-gallery-items"},{id:"upload-box-picker",hidden:true,class:"upload-box-picker"}]},{layout:"horizontal",class:"upload-button-bar",defaultConfig:{height:36,margin:"0px 0px 0px 10px"},items:[{type:"spacer",flex:1},{hidden:true,id:"upload-box-button",type:"button",text:txtTitleCase("Upload"),icon:"fas fa-upload",iconColor:"#ffffff",iconColorHover:"#000000",color:"#ffffff",colorHover:"#000000",backgroundColor:"#00aaee",backgroundColorHover:"#ffffff",action:()=>$("file-upload").upload("box",function(){$("upload-box-picker").show()
$("upload-box-gallery-help").hide()})}]}],subscriptions:{EVT_BOX_CODE:(msgData)=>{localStorage.setItem("api-boxAccessToken",msgData.token)
$("file-upload-box").showBoxFilePicker()}},methods:{load:function(){let boxAccessToken=localStorage.getItem("api-boxAccessToken")
if(!boxAccessToken)return
fetch(checkTokenUrl,{method:"get",headers:{Authorization:"Bearer "+boxAccessToken},}).then(()=>{this.showBoxFilePicker()}).catch(()=>{})},connect(){return window.open(boxAuthenticationUrl,"_blank")},showBoxFilePicker(){$("upload-box-gallery-help").hide()
$("upload-box-gallery-items").innerHTML=" "
let boxAccessToken=localStorage.getItem("api-boxAccessToken")
filePicker.show("0",boxAccessToken,{container:".upload-box-picker",canUpload:false,canCreateNewFolder:false,canSetShareAccess:false,logoUrl:logoUrl})
$("upload-box-picker").show()
filePicker.addListener("choose",function(items){$("upload-box-picker").hide()
kiss.ajax.request({url:"/boxFileDetail",method:"post",body:JSON.stringify({items:items,token:boxAccessToken})}).then(async response=>{let files=response.result.map(file=>{return{data:{result:file.fileData,status:"success"},name:file.name}})
files.forEach(file=>$("file-upload").previewBase64File(file.data,file.name,"box"))})})
filePicker.addListener("cancel",function(){})}}})};kiss.app.defineView("box-session",function(id,target){return createPanel({id:id,target,title:txtTitleCase("box.com"),icon:"fas fa-box",draggable:true,align:"center",verticalAlign:"center",items:[{type:"html",html:txt("<center>Thank you!<br>Your Box session has been restored.<br>You can close this page.</center>"),padding:"50px"}]})});const createFileUploadDropbox=function(){const dropBoxOptions={success:function(files){$("file-upload-dropbox").downloadFilesFromDropbox(files)},cancel:function(){log('Attach file request cancelled by the user')},linkType:"direct",multiselect:true,sizeLimit:1024*1024*8,}
return createBlock({id:"file-upload-dropbox",flex:1,layout:"vertical",items:[{hidden:true,type:"html",html:`<input id="field-upload-dropbox" type="file" multiple>`},{id:"upload-dropbox-gallery",layout:"vertical",alignItems:"center",overflow:"auto",height:"100%",class:"upload-gallery",items:[{id:"upload-dropbox-gallery-help",type:"html",margin:"auto",html:txtTitleCase("#upload drive help",null,{drive:"Dropbox"})+`<br>`+`<center><div id="dropbox-btn" class="upload-dropbox-button"></div></center>`},{id:"upload-dropbox-gallery-items",class:"upload-gallery-items"}]},{layout:"horizontal",class:"upload-button-bar",defaultConfig:{height:36,margin:"0px 0px 0px 10px"},items:[{type:"spacer",flex:1},{hidden:true,id:"upload-dropbox-button",type:"button",text:txtTitleCase("Upload"),icon:"fas fa-upload",iconColor:"#ffffff",iconColorHover:"#000000",color:"#ffffff",colorHover:"#000000",backgroundColor:"#00aaee",backgroundColorHover:"#ffffff",action:()=>$("file-upload").upload("dropbox")}]}],methods:{load:function(){const dropBoxButton=Dropbox.createChooseButton(dropBoxOptions)
$("dropbox-btn").appendChild(dropBoxButton)},downloadFilesFromDropbox(filesData){filesData.forEach(fileData=>this.downloadFileFromDropbox(fileData))},async downloadFileFromDropbox(fileObject){const fileName=fileObject.link.split('/').pop()
kiss.ajax.request({url:"/urlToBase64",method:"post",showLoading:true,body:JSON.stringify({url:fileObject.link})}).then(async data=>$("file-upload").previewBase64File(data,fileName,"dropbox")).catch((err)=>console.log("File upload: ",err))}}})};const createUploadGoogleDrive=function(){var developerKey="AIzaSyCT2v9oFqfj2C0CYIug3adtVaB5x21lnkw"
var clientId="232182586077-opa8uung5qg886o4gqgjbkkhq98iaijd.apps.googleusercontent.com"
var scope=["https://www.googleapis.com/auth/drive.file","https://www.googleapis.com/auth/drive","https://www.googleapis.com/auth/drive.metadata","https://www.googleapis.com/auth/drive.readonly"]
var pickerApiLoaded=false
var oauthToken
return createBlock({id:"file-upload-googledrive",flex:1,layout:"vertical",items:[{hidden:true,type:"html",html:`<input id="field-upload-googledrive" type="file" multiple>`},{id:"upload-googledrive-gallery",layout:"vertical",alignItems:"center",overflow:"auto",height:"100%",class:"upload-gallery",items:[{id:"upload-googledrive-gallery-help",type:"html",margin:"auto",html:txtTitleCase("#upload drive help",null,{drive:"Google Drive"})+`<br>`+`<center><button class="a-button box-authentication-button" onclick="$('file-upload-googledrive').connect()">${txtTitleCase('connect to your %drive account', null, {drive: "Google Drive"})}</button></center>`},{id:"upload-googledrive-gallery-items",class:"upload-gallery-items"},]},{layout:"horizontal",class:"upload-button-bar",defaultConfig:{height:36,margin:"0px 0px 0px 10px"},items:[{type:"spacer",flex:1},{hidden:true,id:"upload-googledrive-button",type:"button",text:txtTitleCase("Upload"),icon:"fas fa-upload",iconColor:"#ffffff",iconColorHover:"#000000",color:"#ffffff",colorHover:"#000000",backgroundColor:"#00aaee",backgroundColorHover:"#ffffff",action:()=>$("file-upload").upload("googledrive")}]}],methods:{load:function(){window.gapi.load("picker",function(){pickerApiLoaded=true})
window.gapi.load("client",function(){window.gapi.client.load("drive","v2",async function(){})})},connect(){window.gapi.load("auth",{"callback":this.onAuthApiLoad})},onAuthApiLoad(){window.gapi.auth.authorize({"client_id":clientId,"scope":scope,"immediate":false}).then(function(authResult){if(authResult&&!authResult.error){oauthToken=authResult.access_token
if(pickerApiLoaded){$("file-upload-googledrive").createPicker()}}})},createPicker(){if(pickerApiLoaded&&oauthToken){var view=new google.picker.DocsView(google.picker.ViewId.DOCS)
const mimeTypeArray=["image/png","image/jpeg","image/jpg","application/msword","application/pdf","text/xml","application/vnd.ms-excel","text/plain","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.ms-powerpoint"]
view.setIncludeFolders(true).setSelectFolderEnabled(false).setMimeTypes(mimeTypeArray)
var picker=new google.picker.PickerBuilder().enableFeature(google.picker.Feature.NAV_HIDDEN).enableFeature(google.picker.Feature.MULTISELECT_ENABLED).setOAuthToken(oauthToken).addView(view).setDeveloperKey(developerKey).setCallback(this.pickerCallback).build()
picker.setVisible(true)}},async pickerCallback(data){if(data.action==google.picker.Action.PICKED){let allDocumentData=await Promise.all((data.docs).map(async doc=>{return await $("file-upload-googledrive").getFilesObject(doc)}))
$("file-upload").fileSetter(allDocumentData,"googledrive")
$("file-upload").previewFiles(allDocumentData,"googledrive")}},async getFilesObject(files){let res=await window.gapi.client.drive.files.get({fileId:files.id,alt:"media",})
const dataUrl="data:"+res.headers["Content-Type"]+";base64,"+window.btoa(res.body)
return $("file-upload").dataURLtoFile(dataUrl,files.name)}}})};const createFileUploadInstagram=function(){const instagramOption={baseUrl:"https://api.instagram.com/oauth/authorize",clientId:"3985518578229875",redirectUrl:"https://449abdd7f2cf.ngrok.io/instagramOauth",nextPage:"",images:[]}
return createBlock({id:"file-upload-instagram",flex:1,layout:"vertical",items:[{hidden:true,type:"html",html:`<input id="field-upload-instagram" type="file" multiple>`},{id:"upload-instagram-gallery",layout:"vertical",alignItems:"center",overflow:"auto",height:"100%",class:"upload-gallery",items:[{id:"upload-instagram-gallery-help",type:"html",margin:"auto",html:txtTitleCase("#upload drive help",null,{drive:"Instagram"})+`<br>`+`<center><button class="a-button box-authentication-button" onclick="$('file-upload-instagram').connect()">${txtTitleCase('connect to your %drive account', null, {drive: "Instagram"})}</button></center>`},{hidden:true,id:"upload-instagram-preview-items",class:"upload-preview-items"},{id:"upload-instagram-gallery-items",class:"upload-gallery-items"},]},{layout:"horizontal",class:"upload-button-bar",defaultConfig:{height:36,margin:"0px 0px 0px 10px"},items:[{type:"spacer",flex:1},{hidden:true,id:"load-instagram-button",type:"button",text:txtTitleCase("Load more files"),icon:"fas fa-plus",iconColorHover:"#00aaee",action:(event)=>$("file-upload-instagram").loadMoreFiles(event)},{hidden:true,id:"add-instagram-button",type:"button",text:txtTitleCase("Add files from Instagram"),icon:"fas fa-plus",iconColorHover:"#00aaee",action:(event)=>$("file-upload-instagram").addImagesFromInstagram(event)},{hidden:true,id:"upload-instagram-button",type:"button",text:txtTitleCase("Upload"),icon:"fas fa-upload",iconColor:"#ffffff",iconColorHover:"#000000",color:"#ffffff",colorHover:"#000000",backgroundColor:"#00aaee",backgroundColorHover:"#ffffff",action:()=>$("file-upload").upload("instagram")}]}],subscriptions:{EVT_INSTAGRAM_CODE:(msgData)=>{localStorage.setItem("api-instagramAccessToken",msgData.token)
$("file-upload-instagram").getInstagramFeeds()}},methods:{connect(){let boxAccessToken=localStorage.getItem("api-instagramAccessToken")
if(!boxAccessToken)return window.open("https://api.instagram.com/oauth/authorize?client_id="+instagramOption.clientId+"&scope=user_profile,user_media&response_type=code&state="+kiss.session.getUserId()+"&redirect_uri="+instagramOption.redirectUrl,"_blank")
$("file-upload-instagram").getInstagramFeeds()},getInstagramFeeds(){let instagramAccessToken=localStorage.getItem("api-instagramAccessToken")
fetch("/instagramMedia",{method:"post",body:JSON.stringify({access_token:instagramAccessToken})}).then(response=>response.json()).then((response)=>{if(response.result){const dataset=response.result.data
if(response.result.paging&&response.result.paging.next){instagramOption.nextPage=response.result.paging.next
$("load-instagram-button").show()}
dataset.map((i)=>(instagramOption.images).push(i))
$("upload-instagram-preview-items").show()
$("add-instagram-button").show()
$("upload-instagram-gallery-items").hide()
const preview=(instagramOption.images).map(this.buildImagePreview).join("")
$("upload-instagram-preview-items").setInnerHtml(preview)
$("upload-instagram-gallery-help").hide()}}).catch((err)=>("Something went wrong please check and try again.",err))},buildImagePreview(file){if(file.media_type=="VIDEO"){return`<video controls src="${file.media_url}" class="upload-preview-item" onclick="$('file-upload-instagram').selectImagePreview(event)"><source src="${file.media_url}"></video>`}else{return`<img src="${file.media_url}" class="upload-preview-item" onclick="$('file-upload-instagram').selectImagePreview(event)">`}},selectImagePreview(event){const image=event.target
image.classList.toggle("upload-instagram-item-selected")},addImagesFromInstagram(event){event.preventDefault()
const token=kiss.session.getToken()
const selectedImages=document.querySelectorAll(".upload-instagram-item-selected")
const images=[...selectedImages].map(image=>{var fileName=(image.getAttribute("src")).split("/").pop()
fileName=fileName.split("?")[0]
return{image:image.getAttribute("src"),name:fileName}})
kiss.ajax.request({url:"/multiUrlToBase64",method:"post",showLoading:true,body:JSON.stringify({url:images})}).then(async response=>{$("upload-instagram-preview-items").hide()
$("add-instagram-button").hide()
$("upload-instagram-gallery-items").show()
allDocumentData=response.result
allDocumentData.forEach(data=>$("file-upload").previewBase64File({result:data.fileData,status:"success"},data.name,"instagram"))}).catch((err)=>("Error occured ",err))},loadMoreFiles(event){event.preventDefault()
fetch(instagramOption.nextPage,{method:"get",}).then(response=>response.json()).then((response)=>{const dataset=response.data
paging=response.paging
if(response.paging&&response.paging.next){instagramOption.nextPage=response.paging.next
$("load-instagram-button").show()}else{instagramOption.nextPage=""
$("load-instagram-button").hide()}
dataset.map((i)=>(instagramOption.images).push(i))
const preview=(instagramOption.images).map(this.buildImagePreview).join("")
$("upload-instagram-preview-items").setInnerHtml(preview)}).catch((err)=>("Something went wrong please check and try again.",err))}}})};kiss.app.defineView("instagram-session",function(id,target){return createPanel({id:id,target,title:txtTitleCase("instagram.com"),icon:"fas fa-instagram",draggable:true,align:"center",verticalAlign:"center",items:[{type:"html",html:txt("<center>Thank you!<br>Your instagram session has been restored.<br>You can close this page.</center>"),padding:"50px"}]})});const createFileUploadLink=function(){return createBlock({id:"file-upload-link",flex:1,layout:"vertical",items:[{hidden:true,type:"html",html:`<input id="field-upload-link" type="file" multiple>`},{id:"upload-link-gallery",layout:"vertical",alignItems:"center",overflow:"auto",height:"100%",class:"upload-gallery",items:[{id:"upload-link-gallery-help",type:"html",margin:"auto",html:txtTitleCase("#upload link help")},{id:"upload-link-gallery-items",class:"upload-gallery-items"}]},{layout:"horizontal",class:"upload-button-bar",defaultConfig:{height:36,margin:"0px 0px 0px 10px"},items:[{id:"upload-link-url",type:"text",placeholder:txtTitleCase("enter an URL here"),padding:"0px",fieldWidth:300},{type:"button",text:txtTitleCase("add file from URL"),icon:"fas fa-link",iconColorHover:"#00aaee",action:function(event){$("file-upload-link").downloadFileFromUrl(event)
$("upload-link-url").setValue("")}},{type:"spacer",flex:1},{hidden:true,id:"upload-link-button",type:"button",text:txtTitleCase("upload"),icon:"fas fa-upload",iconColor:"#ffffff",iconColorHover:"#000000",color:"#ffffff",colorHover:"#000000",backgroundColor:"#00aaee",backgroundColorHover:"#ffffff",action:()=>$("file-upload").upload("link")}]}],methods:{downloadFileFromUrl(event){event.preventDefault()
const ImageUrl=$("upload-link-url").getValue()
if(!ImageUrl)return
const fileName=ImageUrl.split('/').pop()
kiss.ajax.request({url:"/urlToBase64",method:"post",showLoading:true,body:JSON.stringify({url:ImageUrl})}).then(async data=>$("file-upload").previewBase64File(data,fileName,"link")).catch((err)=>console.log("File upload: ",err))}}})};const createFileUploadLocal=function(){return createBlock({id:"file-upload-local",flex:1,layout:"vertical",items:[{hidden:true,type:"html",html:`<input id="field-upload-local" type="file" multiple onchange="$('file-upload').previewFiles(this.files, 'local')">`},{id:"upload-local-gallery",layout:"vertical",overflow:"auto",alignItems:"center",height:"100%",class:"upload-gallery",items:[{id:"upload-local-gallery-help",type:"html",margin:"auto",html:txtTitleCase("#upload local help")},{id:"upload-local-gallery-items",class:"upload-gallery-items"}],events:{dragover:function(e){e.preventDefault()
this.classList.add("upload-gallery-dragover")},dragleave:function(){this.classList.remove("upload-gallery-dragover")},drop:function(e){e.preventDefault()
this.classList.remove("upload-gallery-dragover")
$("file-upload-local").handleDrop(e)}},},{layout:"horizontal",class:"upload-button-bar",defaultConfig:{margin:"0px 0px 0px 10px",iconColorHover:"#00aaee"},items:[{type:"spacer",flex:1},{type:"button",text:txtTitleCase("select files to upload"),icon:"fas fa-file-alt",action:()=>$("field-upload-local").click()},{hidden:true,id:"upload-local-button",type:"button",text:txtTitleCase("Upload"),icon:"fas fa-upload",iconColor:"#ffffff",iconColorHover:"#000000",color:"#ffffff",colorHover:"#000000",backgroundColor:"#00aaee",backgroundColorHover:"#ffffff",action:()=>$("file-upload").upload("local")}]}],methods:{handleDrop:function(event){const files=event.dataTransfer.files
$("field-upload-local").files=files
$("file-upload").previewFiles(files,"local")}}})};const createFileUploadOneDrive=function(){const oneDriveOption={clientId:"8abc7738-a949-4fea-b682-a6485ffa2d9a",action:"download",multiSelect:true,redirectUri:kiss.global.host+"/client/pickaform",openInNewWindow:true,advanced:{queryParameters:"select=id,name,size,file,folder,photo,@microsoft.graph.downloadUrl"},success:function(files){$("file-upload-onedrive").downloadFilesFromOneDrive(files.value)}}
return createBlock({id:"file-upload-onedrive",flex:1,layout:"vertical",items:[{hidden:true,type:"html",html:`<input id="field-upload-onedrive" type="file" multiple>`},{id:"upload-onedrive-gallery",layout:"vertical",alignItems:"center",overflow:"auto",height:"100%",class:"upload-gallery",items:[{id:"upload-onedrive-gallery-help",type:"html",margin:"auto",html:txtTitleCase("#upload drive help",null,{drive:"One Drive"})+`<br>`+`<center><button class="a-button box-authentication-button" onclick="$('file-upload-onedrive').connect()">${txtTitleCase('connect to your %drive account', null, {drive: "One Drive"})}</button></center>`},{id:"upload-onedrive-gallery-items",class:"upload-gallery-items"},]},{layout:"horizontal",class:"upload-button-bar",defaultConfig:{height:36,margin:"0px 0px 0px 10px"},items:[{type:"spacer",flex:1},{hidden:true,id:"upload-onedrive-button",type:"button",text:txtTitleCase("Upload"),icon:"fas fa-upload",iconColor:"#ffffff",iconColorHover:"#000000",color:"#ffffff",colorHover:"#000000",backgroundColor:"#00aaee",backgroundColorHover:"#ffffff",action:()=>$("file-upload").upload("onedrive")}]}],methods:{connect(){OneDrive.open(oneDriveOption)},downloadFilesFromOneDrive(filesData){const token=kiss.session.getToken()
let selectedImage=[]
for(var files of filesData){selectedImage.push({image:files["@microsoft.graph.downloadUrl"],thumb:files.thumbnails[0].medium["url"],name:files.name})}
kiss.ajax.request({url:"/multiUrlToBase64",method:"post",showLoading:true,body:JSON.stringify({url:selectedImage})}).then(async response=>{allDocumentData=response.result
allDocumentData.forEach(data=>$("file-upload").previewBase64File({result:data.fileData,status:"success"},data.name,"onedrive"))}).catch((err)=>("Error occured ",err))}}})};const createFileUploadTakePhoto=function(){return createBlock({id:"file-upload-takephoto",flex:1,layout:"vertical",items:[{hidden:true,type:"html",html:`<input id="field-upload-takephoto" type="file" multiple>`},{id:"upload-takephoto-gallery",layout:"vertical",alignItems:"center",overflow:"auto",height:"100%",class:"upload-gallery",items:[{id:"upload-takephoto-gallery-help",type:"html",margin:"auto",html:txtTitleCase("#upload webcam help")},{id:"upload-takephoto",type:"div",},{id:"upload-takephoto-preview-items",class:"upload-preview-items"},{id:"upload-takephoto-gallery-items",class:"upload-gallery-items"},]},{layout:"horizontal",class:"upload-button-bar",defaultConfig:{height:36,margin:"0px 0px 0px 10px"},items:[{type:"spacer",flex:1},{type:"button",text:txtTitleCase("open webcam"),icon:"fas fa-camera",iconColorHover:"#00aaee",action:function(){$('upload-takephoto-gallery-help').hide()
$('file-upload-takephoto').connect()
$("upload-takephoto").show()
$("upload-takephoto-gallery-items").hide()}},{type:"button",text:txtTitleCase("#take photo"),icon:"fas fa-plus",iconColorHover:"#00aaee",action:function(){$("file-upload-takephoto").addImagesFromWebConnect()
$("upload-takephoto").hide()
$("upload-takephoto-gallery-items").show('')}},{hidden:true,id:"upload-takephoto-button",type:"button",text:txtTitleCase("Upload"),icon:"fas fa-upload",iconColor:"#ffffff",iconColorHover:"#000000",color:"#ffffff",colorHover:"#000000",backgroundColor:"#00aaee",backgroundColorHover:"#ffffff",action:()=>$("file-upload").upload("takephoto")}]}],methods:{connect(){Webcam.set({width:450,height:400,image_format:'jpeg',jpeg_quality:90});Webcam.attach($("upload-takephoto"));},addImagesFromWebConnect(){Webcam.snap(function(data_uri){Webcam.reset($("upload-takephoto"))
$("file-upload").previewBase64File({result:data_uri,status:'success'},Date.now()+"capture.jpeg","takephoto");});},}})};const createFileUploadWebSearch=function(){return createBlock({id:"file-upload-websearch",flex:1,layout:"vertical",items:[{hidden:true,type:"html",html:`<input id="field-upload-websearch" type="file" multiple>`},{id:"upload-websearch-gallery",layout:"vertical",alignItems:"center",overflow:"auto",height:"100%",class:"upload-gallery",items:[{id:"upload-websearch-gallery-help",type:"html",margin:"auto",html:txtTitleCase("#upload web search help")},{id:"upload-websearch-preview-items",class:"upload-preview-items"},{id:"upload-websearch-gallery-items",class:"upload-gallery-items"}]},{layout:"horizontal",class:"upload-button-bar",defaultConfig:{height:36,margin:"0px 0px 0px 10px"},items:[{id:"upload-websearch-url",type:"text",placeholder:txtTitleCase("enter your search term and press Enter"),padding:"0px",fieldWidth:300,events:{onkeypress:function(event){if(event.key=="Enter"){$("file-upload-websearch").downloadFileFromWebSearch(event)
$("upload-websearch-preview-items").show()
$("upload-websearch-gallery-items").hide()
$("upload-websearch-url").setValue("")}}}},{type:"button",text:txtTitleCase("add images from Web search"),icon:"fas fa-plus",iconColorHover:"#00aaee",action:(event)=>$("file-upload-websearch").addImagesFromWebSearch(event)},{type:"spacer",flex:1},{hidden:true,id:"upload-websearch-button",type:"button",text:txtTitleCase("upload"),icon:"fas fa-upload",iconColor:"#ffffff",iconColorHover:"#000000",color:"#ffffff",colorHover:"#000000",backgroundColor:"#00aaee",backgroundColorHover:"#ffffff",action:()=>$("file-upload").upload("websearch")}]}],methods:{downloadFileFromWebSearch(event){event.preventDefault()
const token=kiss.session.getToken()
const search=$("upload-websearch-url").getValue()
if(!search)return
$("upload-websearch-gallery").showLoading()
fetch("/googleImageSearch",{method:"post",headers:{"Authorization":"Bearer "+token,},body:JSON.stringify({search:search})}).then(response=>{if((response.status==401)||(response.status==498)){$("upload-websearch-gallery").hideLoading()
return kiss.session.showLogin()}
return response.json()}).then(response=>{const webImages=(response.result||[]).map((item)=>{return{"url":item.link,"thumbnail":item.image.thumbnailLink,"snippet":item.title,"context":item.image.contextLink}})
const preview=webImages.map(this.buildImagePreview).join("")
$("upload-websearch-preview-items").setInnerHtml(preview)
$("upload-websearch-gallery").hideLoading()
$("upload-websearch-gallery-help").hide()}).catch((err)=>console.log("File upload: ",err))},buildImagePreview(file){return`<img src="${file.thumbnail}" fullSizeImage="${file.url}" class="upload-preview-item" onclick="$('file-upload-websearch').selectImagePreview(event)">`},selectImagePreview(event){const image=event.target
image.classList.toggle("upload-preview-item-selected")},addImagesFromWebSearch(event){event.preventDefault()
const selectedImages=document.querySelectorAll(".upload-preview-item-selected")
const images=[...selectedImages].map(image=>{return{image:image.getAttribute("fullSizeImage"),thumb:image.src}})
kiss.ajax.request({url:"/multiUrlToBase64",method:"post",body:JSON.stringify({url:images})}).then(async response=>{$("upload-websearch-preview-items").hide()
$("upload-websearch-gallery-items").show()
$("upload-websearch-button").show()
let files=response.result.map((file,i)=>{let fileExtension=file.fileData.split(';')[0].split('/')[1]
return{data:{result:file.fileData,status:"success"},name:"WebImage_"+i+"."+fileExtension}})
files.forEach(file=>$("file-upload").previewBase64File(file.data,file.name,"websearch"))})}}})};const createFileUploadWindow=function(config={}){const uploadServices={local:txtTitleCase("my device"),link:txtTitleCase("link (URL)"),websearch:txtTitleCase("web search"),dropbox:txtTitleCase("dropbox"),box:txtTitleCase("box"),googledrive:txtTitleCase("google drive"),onedrive:txtTitleCase("one Drive"),instagram:txtTitleCase("instagram"),takephoto:txtTitleCase("take photo"),}
return createPanel({id:"file-upload",title:txtTitleCase("Upload files"),headerBackgroundColor:(kiss.context.application)?kiss.context.application.color:"#00aaee",modal:true,draggable:true,closable:true,align:"center",verticalAlign:"center",class:"upload-window",layout:"vertical",items:[{layout:"horizontal",alignItems:"center",minHeight:50,defaultConfig:{margin:"0px 10px 0px 0px",iconColorHover:"#00aaee"},items:[{id:"upload-method-button",type:"button",text:txtTitleCase("choose your upload method"),icon:"fas fa-chevron-down",iconPosition:"right",action:()=>{if($("upload-method-menu"))return
const buttonBox=$("upload-method-button").getBoundingClientRect()
createMenu({id:"upload-method-menu",top:buttonBox.top+40,left:buttonBox.left,width:()=>$("upload-method-button").getBoundingClientRect().width,items:[{text:uploadServices.local,icon:"fas fa-paperclip",action:()=>$("file-upload").displayTab("file-upload-local")},{text:uploadServices.link,icon:"fas fa-link",action:()=>$("file-upload").displayTab("file-upload-link")},{type:"button",text:uploadServices.websearch,icon:"fas fa-search",action:()=>$("file-upload").displayTab("file-upload-websearch")},{type:"button",text:uploadServices.box,icon:"fas fa-box",action:()=>$("file-upload").displayTab("file-upload-box")},{type:"button",text:uploadServices.dropbox,icon:"fab fa-dropbox",action:()=>$("file-upload").displayTab("file-upload-dropbox")},{type:"button",text:uploadServices.onedrive,icon:"fas fa-cloud",action:()=>$("file-upload").displayTab("file-upload-onedrive")},{type:"button",text:uploadServices.googledrive,icon:"fab fa-google-drive",action:()=>$("file-upload").displayTab("file-upload-googledrive")},{type:"button",text:uploadServices.instagram,icon:"fab fa-instagram",action:()=>$("file-upload").displayTab("file-upload-instagram")},{type:"button",text:uploadServices.takephoto,icon:"fas fa-camera",action:()=>$("file-upload").displayTab("file-upload-takephoto")}]}).render()}},{id:"upload-method-title",type:"html",class:"upload-method-title",html:uploadServices.local}]},{id:"file-upload-services",layout:"vertical",width:"100%",padding:"10px",class:"upload-gallery-container",items:[createFileUploadLocal(),createUploadGoogleDrive().hide(),createFileUploadLink().hide(),createFileUploadDropbox().hide(),createFileUploadBox().hide(),createFileUploadWebSearch().hide(),createFileUploadOneDrive().hide(),createFileUploadInstagram().hide(),createFileUploadTakePhoto().hide(),]}],events:{onclose:()=>{if($("upload-method-menu"))kiss.views.remove("upload-method-menu")
kiss.pubsub.publish("EVT_FILE_UPLOAD_CLOSED")}},methods:{displayTab(uploadServiceType){const fileUploadServices=$("file-upload-services")
fileUploadServices.items.forEach(item=>{item.hide()
if(item.id==uploadServiceType)item.show()})
$("upload-method-title").setInnerHtml(uploadServices[uploadServiceType.split("-")[2]])},fileSetter(data,uploadServiceType){let objHidden=document.getElementById("field-upload-"+uploadServiceType);const dt=new DataTransfer()
for(let i=0;i<data.length;i++){const file=data[i]
dt.items.add(file)
objHidden.files=dt.files}},upload(uploadServiceType,callback){if(kiss.session.isOffline())return pickaform.msg.featureNotAvailable()
const formData=new FormData()
const input=$("field-upload-"+uploadServiceType)
if(input.files.length==0)return createNotification(txtTitleCase("Please add some file before uploading..."))
for(let i=0;i<input.files.length;i++)formData.append("files",input.files[i])
kiss.ajax.request({method:"post",url:"/upload",contentType:"multipart/form-data",showLoading:true,body:formData}).then(data=>{$("upload-"+uploadServiceType+"-gallery-help").show()
$("upload-"+uploadServiceType+"-gallery-items").innerHTML=" "
const dt=new DataTransfer()
input.files=dt.files
$("upload-"+uploadServiceType+"-button").hide()
if(callback)callback()
kiss.pubsub.publish("EVT_FILE_UPLOAD",{modelId:config.modelId,recordId:config.recordId,fieldId:config.fieldId,files:data})
$("file-upload").close()}).catch((err)=>{log("kiss.ui - File upload with service <"+uploadServiceType+"> failed:",4,err)})},previewBase64File(data,fileName,uploadServiceType){if(data.status=="success"){const dt=new DataTransfer()
const input=$("field-upload-"+uploadServiceType)
const files=input.files
for(let i=0;i<files.length;i++){let file=files[i]
dt.items.add(file)
input.files=dt.files}
let dataUrl=data.result
let fileData=$("file-upload").dataURLtoFile(dataUrl,fileName)
dt.items.add(fileData)
input.files=dt.files
const btnUploadText=txtTitleCase("upload %n file(s)",null,{n:input.files.length})
$("upload-"+uploadServiceType+"-button").setText(btnUploadText).show()
$("file-upload").previewFile(fileData,(input.files.length-1),uploadServiceType)}},previewFiles:function(files,uploadServiceType){$("upload-"+uploadServiceType+"-gallery-items").innerHTML=" "
files=[...files]
files.forEach((file,i)=>{$("file-upload").previewFile(file,i,uploadServiceType)})
const btnUploadText=txtTitleCase("upload %n file(s)",null,{n:files.length})
$("upload-"+uploadServiceType+"-button").setText(btnUploadText)
if(files.length>0)$("upload-"+uploadServiceType+"-button").show()},previewFile:function(file,i,uploadServiceType){$("upload-"+uploadServiceType+"-gallery-help").hide()
const extension=(file.name).split(".").pop()
const reader=new FileReader()
reader.readAsDataURL(file)
reader.onloadend=function(){let thumbnail=$("file-upload").getFileUploadThumbnail(extension,reader.result)
$("upload-"+uploadServiceType+"-gallery-items").innerHTML+=`
                        <div class="upload-item">
                            <span class="upload-thumbnail-container">${thumbnail}</span>
                            <span class="upload-filename">${file.name}</span>
                            <span class="upload-filesize">${file.size.toFileSize()}</span>
                            <span class="upload-delete fas fa-times" index="${i}" onclick="$('file-upload').deleteFile(this, '${uploadServiceType}')"></span>
                        </div>
                    `.removeExtraSpaces()}},dataURLtoFile(dataUrl,filename){var arr=dataUrl.split(','),mime=arr[0].match(/:(.*?);/)[1],bstr=atob(arr[1]),n=bstr.length,u8arr=new Uint8Array(n);while(n--){u8arr[n]=bstr.charCodeAt(n);}
return new File([u8arr],filename,{type:mime})},deleteFile:function(element,uploadServiceType){const index=element.getAttribute("index")
const dt=new DataTransfer()
const input=$("field-upload-"+uploadServiceType)
const files=input.files
for(let i=0;i<files.length;i++){let file=files[i]
if(index!=i)dt.items.add(file)
input.files=dt.files}
$("file-upload").previewFiles(input.files,uploadServiceType)
if(input.files.length==0){$("upload-"+uploadServiceType+"-gallery-help").show()
$("upload-"+uploadServiceType+"-button").hide()}else $("upload-"+uploadServiceType+"-button").show()},getFileUploadThumbnail(fileType,encodedImage){switch(fileType.toLowerCase()){case"jpg":case"jpeg":case"png":case"gif":case"webp":return`<img class="upload-thumbnail" src="${encodedImage}">`
default:const{icon,color}=kiss.tools.fileToIcon(fileType.toLowerCase())
return`<span style="color: ${color}" class="fas ${icon} upload-thumbnail"></span>`}}}}).render()};const createLanguageWindow=function(){return createPanel({title:txtTitleCase("pick a language"),modal:true,draggable:true,closable:true,layout:"horizontal",align:"center",verticalAlign:"center",width:300,defaultConfig:{height:50},items:[{type:"button",text:"English",icon:"fas fa-globe",flex:1,margin:"0px 10px 0px 0px",events:{click:()=>kiss.language.set("en")}},{type:"button",text:"Français",icon:"fas fa-globe",flex:1,margin:"0px 10px 0px 0px",events:{click:()=>kiss.language.set("fr")}}]}).render()};const modelExplorer=function(modelName,id,target){const buildItem=function(item){return`<div itemId="${item.id}" class="setup-item">
                    <span>${item.name}</span>
                </div>`}
return createHtml({id:id,target,events:{click:function(event){this.handleClick(event)}},methods:{load(){let itemList=Object.values(kiss.app.collections[modelName].records).map(buildItem).join("")
this.setInnerHtml(itemList)},handleClick(event){let itemId=event.target.getAttribute("itemId")
if(itemId)this.openItem(itemId)},openItem(itemId){let model=kiss.app.models[modelName]
let record=kiss.app.collections[modelName].getRecord(itemId)
const fields=[]
model.getFields().forEach(field=>{let fieldId=field.id
let fieldType
let fieldValue=record[fieldId]
if(fieldId=="model")fieldValue=record[fieldId].name
if(typeof fieldValue=="object"){fieldType="textarea"
fieldValue=JSON.stringify(fieldValue,null,4)}
else{fieldType="text"}
fields.push({layout:"horizontal",items:[{type:fieldType,label:fieldId,labelWidth:300,width:500,rows:6,value:fieldValue}]})})
createPanel({title:"Model fields",modal:true,draggable:true,closable:true,top:100,align:"center",height:()=>kiss.screen.current.height-200,overflowY:"auto",items:fields}).render()}}})};const createPreviewWindow=function(files,fileId){const useGoogleViewer=true
const disableNavigation=(files.length<2)
const createThumbnail=function(file){const fileType=file.filename.split(".").pop().toLowerCase()
let viewHtml=""
let previewHtml=""
let filePath=(!file.path.startsWith("http"))?"/"+file.path:file.path
filePath=filePath.replaceAll("\\","/")
if(["jpg","jpeg","png","gif","webp"].includes(fileType)){viewHtml=`<img class="preview-item" src="${filePath}">`
previewHtml=`<img class="preview-thumbnail" src="${filePath}">`}else if(fileType=="pdf"){viewHtml=`<iframe width=100% height=100% frameborder=0 border=0 cellspacing=0 src="${filePath}"/>`
previewHtml=`<span style="color: #ff0000" class="fas fa-file-pdf preview-thumbnail"></span>`}else if(fileType=="docx"&&useGoogleViewer){const encodedPath=encodeURIComponent(filePath)
const url=(useGoogleViewer)?"https://docs.google.com/viewer?url="+encodedPath+"&embedded=true":filePath
viewHtml=`<iframe width=100% height=100% frameborder=0 border=0 cellspacing=0 src="${url}"/>`
previewHtml=`<span style="color: #00aaee" class="fas fa-file-word preview-thumbnail"></span>`}else{const{icon,color}=kiss.tools.fileToIcon(fileType)
viewHtml=`<span style="color: ${color}" class="fas ${icon} preview-item preview-item-icon"></span>
                        <div class="preview-not-available">
                            ${txtTitleCase("#no preview") + " " + fileType}
                        </div>`
previewHtml=`<span style="color: ${color}" class="fas ${icon} preview-thumbnail"></span>`}
return createHtml({id:"preview-file-"+file.id,html:previewHtml,display:"inline-block",class:"preview-thumbnail-item",events:{click:function(){this.select().openPreview()}},methods:{openPreview(){$("preview-content").setInnerHtml(viewHtml)
$("preview-window").setTitle(file.filename+" ("+file.size.toFileSize()+")")
$("preview-window").currentPreview=file.id
return this},select(){const previewItemElements=$("preview-window").querySelectorAll(".preview-thumbnail")
const previewItems=[...previewItemElements]
previewItems.forEach(item=>item.classList.remove("preview-thumbnail-selected"))
this.querySelector(".preview-thumbnail").classList.add("preview-thumbnail-selected")
return this}}})}
return createPanel({id:"preview-window",modal:true,closable:true,icon:"fas fa-search",headerBackgroundColor:(kiss.context.application)?kiss.context.application.color:"#00aaee",background:"#000000",animate:"fadeIn",position:"absolute",top:10,left:10,height:()=>(kiss.screen.current.height-20)+"px",width:()=>(kiss.screen.current.width-20)+"px",layout:"vertical",items:[{id:"preview-content-container",layout:"horizontal",items:[{hidden:disableNavigation,id:"preview-content-previous",class:"preview-navigation",layout:"vertical",items:[{type:"spacer",flex:1},{type:"html",flex:0,html:`<span class="fas fa-chevron-left preview-navigation-button"></span>`,events:{click:()=>$("preview-window").openPreviousPreview()}},{type:"spacer",flex:1}]},{id:"preview-content",width:"100%",height:()=>{if(disableNavigation)return kiss.screen.getHeightMinus(80)+"px"
return kiss.screen.getHeightMinus(160)+"px"},class:"preview-item-container"},{hidden:disableNavigation,id:"preview-content-next",class:"preview-navigation",layout:"vertical",items:[{type:"spacer",flex:1},{type:"html",flex:0,html:`<span class="fas fa-chevron-right preview-navigation-button"></span>`,events:{click:()=>$("preview-window").openNextPreview()}},{type:"spacer",flex:1}]}]},{hidden:disableNavigation,id:"preview-thumbnails",class:"preview-thumbnails-container",items:files.map(createThumbnail)}],events:{mousewheel:function(event){if(disableNavigation)return
if(event.wheelDelta<0)this.openNextPreview()
else this.openPreviousPreview()},keydown:function(event){if(event.key=="Escape")$("preview-window").close()
if(disableNavigation)return
if(event.key=="ArrowRight")return this.openNextPreview()
if(event.key=="ArrowLeft")return this.openPreviousPreview()}},methods:{load(){this.openPreview(fileId)},openPreview(fileId){const thumbnail=$("preview-file-"+fileId)
thumbnail.select().openPreview()
setTimeout(()=>thumbnail.scrollIntoView({block:"center",inline:"center",behavior:"smooth"}),200)},openNextPreview(){const currentPreviewId=$("preview-window").currentPreview
let previewIndex=files.findIndex(item=>item.id==currentPreviewId)
previewIndex++
if(previewIndex>=files.length)previewIndex=0
const newPreviewId=files[previewIndex].id
$("preview-window").openPreview(newPreviewId)},openPreviousPreview(){const currentPreviewId=$("preview-window").currentPreview
let previewIndex=files.findIndex(item=>item.id==currentPreviewId)
previewIndex--
if(previewIndex<0)previewIndex=files.length-1
const newPreviewId=files[previewIndex].id
$("preview-window").openPreview(newPreviewId)}}}).render()};const createRecordSelectorWindow=function(records){if(!Array.isArray(records)||records.length==0)return
let temporaryCollection
const model=records[0].model
const temporaryDatatableId=kiss.tools.shortUid()
createPanel({modal:true,closable:true,expandable:true,title:"<b>"+model.namePlural+"</b>",icon:model.icon,headerBackgroundColor:model.color,display:"flex",layout:"vertical",width:()=>kiss.screen.current.width-200,height:()=>kiss.screen.current.height-200,align:"center",verticalAlign:"center",autoSize:true,items:[{id:temporaryDatatableId,flex:1,layout:"vertical"}],events:{onclose:()=>{temporaryCollection.destroy(true)}},methods:{async load(){let temporaryModel=new kiss.data.Model({id:"temp_"+uid(),mode:"memory",name:model.name,namePlural:model.namePlural,icon:model.icon,color:model.color,items:model.items})
temporaryCollection=new kiss.data.Collection({id:"temp_"+uid(),mode:"memory",model:temporaryModel,sort:[{[temporaryModel.getPrimaryKeyField().id]:"asc"}]})
const rawData=records.map(record=>record.getRawData())
await temporaryCollection.insertMany(rawData)
const datatable=createDatatable({type:"datatable",collection:temporaryCollection,columns:temporaryModel.getFieldsAsColumns(),showHeader:true,showToolbar:true,canEdit:false,canAddField:false,canEditField:false,canCreateRecord:false,color:temporaryModel.color,methods:{selectRecord:(foreignRecord)=>{createForm(foreignRecord)
this.close()}}})
$(temporaryDatatableId).setItems([datatable])}}}).render()};const createThemeWindow=function(){return createPanel({title:txtTitleCase("theme"),icon:"fas fa-sliders-h",headerBackgroundColor:(kiss.context.application)?kiss.context.application.color:"#00aaee",modal:true,draggable:true,closable:true,position:"absolute",top:()=>((window.innerHeight-600)/2)+"px",align:"center",display:"block",defaultConfig:{type:"button",icon:"fas fa-palette",flex:1,height:100,width:200,flex:1,margin:"10px",iconSize:24,fontSize:20,textAlign:"left",boxShadow:"var(--shadow-1)",boxShadowHover:"var(--shadow-4)",},items:[{type:"html",classes:{"this":"theme-window-title"},html:txtTitleCase("color")},{text:txtTitleCase("light"),color:"#232730",iconColor:"#232730",backgroundColor:"#dddddd",action:()=>kiss.theme.set("light")},{text:txtTitleCase("dark"),color:"#ffffff",iconColor:"#ffffff",backgroundColor:"#232730",action:()=>kiss.theme.set("dark")},{text:txtTitleCase("tron"),color:"#00aaee",iconColor:"#00aaee",backgroundColor:"#000000",borderColor:"#00aaee",boxShadow:"0px 0px 10px #00aaee",action:()=>kiss.theme.set("tron")},{type:"html",classes:{"this":"theme-window-title"},html:txtTitleCase("geometry"),},{text:txtTitleCase("default"),icon:"far fa-square",action:()=>kiss.theme.set("","default")},{text:txtTitleCase("sharp"),icon:"far fa-gem",action:()=>kiss.theme.set("","sharp")},{text:txtTitleCase("round"),icon:"far fa-circle",action:()=>kiss.theme.set("","round")}]}).render()};